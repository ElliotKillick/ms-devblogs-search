紅樓鍮  March 23, 2021
· Edited

  0  Collapse this comment
Copy link

Isn’t it better to handle calling set_result by debug asserting?  If that should happen then definitely the caller’s code is not correct.
I guess you don’t have to manually delete the copy constructors, because std::atomic is not copy-constructible.






Raymond Chen Author
March 24, 2021


  0  Collapse this comment
Copy link
It seems that different libraries have different ideas on whether trying to set multiple results is an error. C# TaskCompletionSource and C++ std::promise consider it an error, but PPL task_completion_event and JavaScript Promise don’t. You are welcome to add an “else throw custom_exception()” if you like. I didn’t want to get into an argument over which exception library to use.





Ian Yates  March 25, 2021


  0  Collapse this comment
Copy link
At least in C# (not sure about C, etc) the intellisense makes it reasonably obvious that setting the result could throw if it was previously set because they’re a Try* variant of the method to set the result (or flag cancelled or to stash an exception). It’s nice when things follow the obvious patterns