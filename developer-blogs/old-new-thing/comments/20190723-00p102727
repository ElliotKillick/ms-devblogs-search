Myron A. Semack  July 24, 2019


  0  Collapse this comment
Copy link
Idle logoff is a requirement in some NIST standards. We used an open source tool called Lithnet Idle Logoff. 





cheong00  July 23, 2019


  0  Collapse this comment
Copy link
There is another similar and popular request - how to logon a user automatically then locks the screen when a server boots?
This reason for this is they got certain program to run on user session that cannot be run as service. And have screensaver lock it under 30 seconds is still too long. Using the system event or placing "logoff" on startup folder will block a user from logon.
And as for a specific purpose for this request - the server currently relies on WiFi connection, but the program supplied by the wireless card vendor for connection will only...Read moreThere is another similar and popular request – how to logon a user automatically then locks the screen when a server boots?
This reason for this is they got certain program to run on user session that cannot be run as service. And have screensaver lock it under 30 seconds is still too long. Using the system event or placing “logoff” on startup folder will block a user from logon.
And as for a specific purpose for this request – the server currently relies on WiFi connection, but the program supplied by the wireless card vendor for connection will only work when a user logs in, so before anyone logs in the server on console, noone has access to it.
Read less







Jernej Simončič  July 24, 2019


  1  Collapse this comment
Copy link
I’ve got this exact scenario at a client, and I just stuck a shortcut to the Startup folder that runs rundll32.exe user32.dll,LockWorkStation

Oh, and if it’s just a WiFi connection, can’t you use the built-in WiFi support in Windows instead?





cheong00  July 24, 2019


  0  Collapse this comment
Copy link
No, in the end we just wrote a powershell script running on logon, that will lock the session if uptime is less than 5 minutes.
Just curious if there’s some way to do this without writing code.



Piotr Siódmak  July 23, 2019


  0  Collapse this comment
Copy link
Terminal Services provide a policy specifically for that (\Windows Components\Remote Desktop Services\Remote Desktop Session Host\Session Time Limits\Set time limit for disconnected sessions). Weird that Windows itself doesn’t.





Mantas M.  July 23, 2019


  0  Collapse this comment
Copy link
I didn’t know about the ability to trigger on audit events, but I’m curious about what would happen if you just directly set rwinsta.exe or logoff.exe as the screensaver executable name? I guess screensavers run in very privilege-restricted environments so that wouldn’t work?





Raymond Chen Author
July 23, 2019


  0  Collapse this comment
Copy link
Yeah, that was the first thing Aaron tried but it didn’t work because logoff.exe doesn’t understand the command line options passed to screen savers.




Keith Patrick  July 23, 2019


  0  Collapse this comment
Copy link
Is this going to also log the user out if s/he tries to look at screensavers?  If so, you’d want to also put in a policy to prevent users from changing the screensaver so they don’t get inexplicably logged out.





Entegy  July 23, 2019


  0  Collapse this comment
Copy link
This is a frequently asked for feature around IT Pro circles. Answer always involved coding screensavers. This is a great way to do it using just built-in stuff! Bookmarking this one for sure!