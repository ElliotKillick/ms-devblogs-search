Григорий Шуренков  April 6, 2021
· Edited

  0  Collapse this comment
Copy link
Probably, the dependence of coroutine_traits on parameters of a function is needed for the case void-returning asynchronous function. E.g. for something like this:
void AsyncF(coroutine&);
It should be possible to write coroutine class and corresponding promise that would allow to use async constructs inside AsyncF. And if calling code would like to wait till the end of AsyncF operation, it can await coroutine object.
coroutine cor;
AsyncF(cor);
co_await cor;





Timothy Byrd  March 31, 2021
· Edited

  0  Collapse this comment
Copy link
I don’t understand how the return_value() method can be const.
Isn’t the holder.set_result() non-const?
(and ditto for unhandled_exception().)





Raymond Chen Author
April 1, 2021


  0  Collapse this comment
Copy link
holder.set_result() is const because the value is stored in a shared result_holder_state object, which is external to the holder itself.