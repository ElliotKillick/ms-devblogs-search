Neil Rashbrook  March 7, 2020


  0  Collapse this comment
Copy link
“There’s still a problem with this, though: It requires everybody to be playing the same game.”
Didn’t the previous workaround also require that, in that everybody has to use the same mutex?





Raymond Chen Author
March 7, 2020


  0  Collapse this comment
Copy link
The previous solution required everybody to use the same mutex, which can be difficult to coordinate among multiple components. The revised solution requires everybody to follow the same steps, but they don’t need to share a mutex. (By analogy: The previous solution avoided collisions by requiring everybody to share the same car. The revised solution allows everybody to have their own car, as long as they remember to use their turn signals. The sneaky trick gives everybody their own private road.)





matake78  March 8, 2020


  0  Collapse this comment
Copy link
Raymond, would really appreciate your take on this: https://devblogs.microsoft.com/oldnewthing/20200221-00/?p=103466#comment-136245





Raymond Chen Author
March 8, 2020


  0  Collapse this comment
Copy link
No opinion. I’m relying on Malcolm’s information. (Though (1) I would expect there to be contention on the shared event, and (2) you don’t appear to be disagreeing with the article.)



Joshua Hudson  March 6, 2020


  0  Collapse this comment
Copy link
Hmm I wonder what takes up more memory, the CREATE_SUSPENDED large binary or the crimped 4kb binary with a tiny stack that does GetCommandLine -> OpenProcess-> WaitForSingleObject -> ExitProcess.





Erik Fjeldstrom  March 6, 2020


  0  Collapse this comment
Copy link
My guess is that it only uses up some address space, as I would expect the memory manager to swap this suspended process out ASAP if there is memory pressure.