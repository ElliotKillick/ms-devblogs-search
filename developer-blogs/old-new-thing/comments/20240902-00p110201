tbodt  September 3, 2024


  0  Collapse this comment
Copy link
This one seems easy enough to fix by Apple’s technique of giving the function the old behavior when the program is linked against the old SDK.





alan robinson  September 3, 2024


  1  Collapse this comment
Copy link
This is the kind of policy choice that shows the value (and required tradeoffs) of a stable API. If this were google they'd change in a heart beat, older phones would stop working sooner, and everybody would just nod and agree that the e-waste was totally worth the (minor) API improvement. And again, next year the cycle would repeat, except this time the API would be debatably improved. And next year, Lo! Again with the change, breaking old phones. But this time for a demonstrably worse API with fewer features, and harder to use too.
So the Microsoft way may lead...Read moreThis is the kind of policy choice that shows the value (and required tradeoffs) of a stable API. If this were google they’d change in a heart beat, older phones would stop working sooner, and everybody would just nod and agree that the e-waste was totally worth the (minor) API improvement. And again, next year the cycle would repeat, except this time the API would be debatably improved. And next year, Lo! Again with the change, breaking old phones. But this time for a demonstrably worse API with fewer features, and harder to use too.
So the Microsoft way may lead to some thorns and rough spots in the API that are 20+ years old. But the other way eventually leads to madness.
In fact MS isn’t immune to this issue, lots of little changes have accrued to the win32 API that are of debatable advantage, but astronomically fewer than in the android world. I get the sense that Apple is somewhere in-between?
Read less







James  September 3, 2024


  0  Collapse this comment
Copy link
Another consideration, especially with a security function is that someone may have come to rely on the returned error, perhaps even to enforce a security property! Introducing security vulnerabilities into someone else’s code from a distance.
I struggle to imagine how how might rely on rejecting relative SIDs… but people are very creative.





Dmitry  September 2, 2024
· Edited

  0  Collapse this comment
Copy link
As someone, who has recently read and reread the WinSock MSDN pages to holes in my monitor, I’m surprised. I remember like lots of stuff where I saw ”this thing works this way” and then ”but in WinXP until SPx it works differently”. Anyway, the one who uses latest SDK and, especially, tests on the latest OS version has lost the war of being compatible with older versions far before even starting.
P.S. And if we talk about Win11, my students have quite a lot of trouble with it when writing low-level software projects. And they use Win10 all the...Read moreAs someone, who has recently read and reread the WinSock MSDN pages to holes in my monitor, I’m surprised. I remember like lots of stuff where I saw ”this thing works this way” and then ”but in WinXP until SPx it works differently”. Anyway, the one who uses latest SDK and, especially, tests on the latest OS version has lost the war of being compatible with older versions far before even starting.
P.S. And if we talk about Win11, my students have quite a lot of trouble with it when writing low-level software projects. And they use Win10 all the time to work those troubles around. For sure, they don’t care about the ”Artificial Idiocy” features.
Read less







Henry Skoglund  September 2, 2024


  2  Collapse this comment
Copy link
One solution: introduce another flavor CoInitializeSecurityEx() taking the same parameters, but it would support self-relative security descriptors,





IS4  September 9, 2024


  0  Collapse this comment
Copy link
And so the program would simply fail to run on older systems, classic Windows style.





alan robinson  September 3, 2024


  0  Collapse this comment
Copy link
And later on, CoInitializeSecurityExEx()….
But yes, a preferable solution, probably.
For this specific case, I’d lean towards a CoInitializeSecurityRelative()





Me Gusta  September 6, 2024


  0  Collapse this comment
Copy link
@Shawn Van Ness
Not an Ex3, but there is a MapViewOfFile3 function.





GL  September 3, 2024


  0  Collapse this comment
Copy link
Internet Explorer has IHTMLDocument7 interface…





Shawn Van Ness  September 3, 2024
· Edited

  0  Collapse this comment
Copy link
The naming convention is “Ex2”.   (not joking .. there are a few of these throughout the SDK .. eg. InternetGetCookieEx2)
Not sure if any “Ex3” APIs exist.  Some COM interfaces, perhaps — which have greater liberty to evolve, than a static Win32 API function.