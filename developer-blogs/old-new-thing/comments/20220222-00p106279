紅樓鍮  February 22, 2022
· Edited

  0  Collapse this comment
Copy link
Can’t we tell ICallFactory::CreateCall to just give out an ISynchronize?
struct MySynchronize : /* ... */ {
  winrt::com_ptr<::ISynchronize> m_inner;
  // ...
};

factory->CreateCall(
    __uuidof(::AsyncIPipeByte), winrt::get_unknown(*outer),
    __uuidof(::ISynchronize), reinterpret_cast<::IUnknown**>(outer->m_inner.put()));





Raymond Chen Author
February 22, 2022


  0  Collapse this comment
Copy link
According to the documentation: If the second parameter is not null, “the call object is aggregated in the specified object, and the riid2 parameter must be IID_IUnknown.” This is a general rule of aggregation for your own good. For aggregation to work, the outer object needs the non-delegating IUnknown of the inner. If you request any other interface, it would be delegating, and you lost your only chance to communicate with the inner object.