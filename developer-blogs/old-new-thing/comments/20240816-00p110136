Neil Rashbrook  August 17, 2024


  0  Collapse this comment
Copy link
Why are they still importing by ordinal; isn’t importing by name the norm in 32-bit code? I seem to remember reading about it somewhere… oh yes, it was here: https://devblogs.microsoft.com/oldnewthing/20060718-32/?p=30483





Dmitry  August 16, 2024
· Edited

  0  Collapse this comment
Copy link
BTW, could anyone suggest a sane tool to check manifests are there and are perfectly valid?
By sane I mean freeware, lightweight, portable, no stupid .NET/Java/Python/C++ runtime dependencies — something that just runs out of the box and does its job letting one be sure that the manifest will just work. You know, just what they (should have?) taught them since the first computer programming class.
I remember trying some console utility and a few other programs pretending to do the job, but ended up using Process Explorer with particular columns shown, since none of the others helped.





Kyle Sluder  August 19, 2024


  0  Collapse this comment
Copy link
If a “sane” tool can’t require a runtime, then I suppose any tool written in Visual C++ that doesn’t link the UCRT is off limits. Because as we all know, Windows is not a Microsoft Visual C/C++ Run-Time delivery channel.




Henry Skoglund  August 16, 2024
· Edited

  1  Collapse this comment
Copy link
From Windows 1.0 up to Windows 7 the equivalent error message used to be: “The ordinal 380 could not be located in the dynamic link library comctl32.dll” or the more common “The procedure entry point LoadIconMetric could not be located in the dynamic link library comctl32.dll”.
Why regress to the more confusing “… Contoso.exe” flavor?