Dave Gzorple  April 15, 2020


  0  Collapse this comment
Copy link
This is a great example of programmers implementing something that's convenient for them and not for the user (before people get defensive about this, I'm commenting on programmers in general, not Microsoft specifically).  Sorting by an essentially useless metric is easy because they just call qsort() on the array, but if the caller wanted that they could call qsort() themselves.  What the caller probably wants is addresses sorted in the order of usefulness, e.g. the currently active in-use address at the top, loopback addresses and other noise at the bottom.
Yes, I know you can come up with all...Read moreThis is a great example of programmers implementing something that’s convenient for them and not for the user (before people get defensive about this, I’m commenting on programmers in general, not Microsoft specifically).  Sorting by an essentially useless metric is easy because they just call qsort() on the array, but if the caller wanted that they could call qsort() themselves.  What the caller probably wants is addresses sorted in the order of usefulness, e.g. the currently active in-use address at the top, loopback addresses and other noise at the bottom.
Yes, I know you can come up with all sorts of corner cases, but I’d guess most users (callers of the function) want the address that’s most likely to work/be useful/in use towards the top, which requires a bit of work rather than just passing the array to qsort().
Read less







Ian Boyd  April 15, 2020


  0  Collapse this comment
Copy link
Bonus: since we are now after 2001, you should be using the GetAdaptersAddresses function instead; which supports both kinds of Internet Protocol addresses (i.e. both version 6 and version 4 IP addresses)