Álvaro González  September 24, 2021


  0  Collapse this comment
Copy link
This is an all time classic in forums:
“I have this broken response, how can I unbreak it?”
“Why don’t you fix the source and prevent it from breaking in the first place?”
“I don’t get it. Can I use a regular expression, maybe?”





Yuri Khan  September 23, 2021


  0  Collapse this comment
Copy link
Every time I investigate a problem in HTTP response handling, I remind my colleagues that the correct sequence is:
* Check the response code. If it’s not 200 or a variation you expect, go handle the error. Don’t touch the body except to dump it into the log if it’s not too big.
* Check Content-Type. If it’s not something you expect, go handle the error. Maybe dump the body to the log.
** If the Content-Type is application/json or a variant, and there is a charset parameter, and its value si not UTF-8, yell at the server-side developer. If it’s...Read moreEvery time I investigate a problem in HTTP response handling, I remind my colleagues that the correct sequence is:
* Check the response code. If it’s not 200 or a variation you expect, go handle the error. Don’t touch the body except to dump it into the log if it’s not too big.
* Check Content-Type. If it’s not something you expect, go handle the error. Maybe dump the body to the log.
** If the Content-Type is application/json or a variant, and there is a charset parameter, and its value si not UTF-8, yell at the server-side developer. If it’s UTF-8, point finger at the server-side developer and laugh. Ignore the charset value except to choose one of the above reactions. Assume UTF-8.
* Only if the response code is one of those you expect, and Content-Type is right, proceed to [decompressing and] decoding the body.
So many people just start parsing the body as JSON right away, even when it’s a 418 and the response body is a (short and stout) HTML.
Read less