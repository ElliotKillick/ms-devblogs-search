Ismo Salonen  June 12, 2022


  0  Collapse this comment
Copy link
I once did something like this: via COM add vba code which writes the data to clipboard as xml and then posts message to the waiting app after it is ready.
No timeout but the problem with two simultabeous programs rinning is still present ( but still theoretical)-
it could use some other medium than clipboard for data transfer but no problems in 20 years üôÇ





Erik Fjeldstrom  June 11, 2022


  0  Collapse this comment
Copy link
For data transmission, there‚Äôs also good old crufty DDE. Many fun times were had communicating with Excel over that!





Neil Rashbrook  June 11, 2022


  0  Collapse this comment
Copy link
Maybe this business process is so old it was written in a language that didn‚Äôt support COM and instead worked by sending keystrokes to Excel? (At least the export to CSV option is still doable this way, I guess.)





Valts Sondors  June 10, 2022


  0  Collapse this comment
Copy link
Should be also mentioned: there are nowadays plenty of sturdy open-source libraries out there that can deal with Excel files. That‚Äôs both more efficient than spinning up a full Excel process in the background, and cheaper.





Alejandro Carrazzoni  June 13, 2022


  0  Collapse this comment
Copy link
Back at my previous job, there was an issue where Devexpress generated corrupt .xls files that Excel could open fine, but open-source libraries couldn‚Äôt. The fix was to open the .xls file in Excel using the object model as shown here and save it as CSV, then parse the CSV.





Dmitry  June 11, 2022


  0  Collapse this comment
Copy link
The disadvantage is that custom solutions based on 3rd party libraries might become incapable of handling files of newer versions due to differences and quirks of newer Excel implementation vs custom one. Plus, the .xls format is still a thing for many reasons.





Mike Morrison  June 13, 2022


  0  Collapse this comment
Copy link
Open-source libraries can be updated to match any future changes in the Office XML file formats.  .XSLX and .XLSM also replace the crusty old XLS format nearly everywhere.




Raymond Chen Author
June 10, 2022


  0  Collapse this comment
Copy link
True. I was assuming the customer really needed full Excel, say, because the file contains macros to drive a database connection and fetch the 300,000 rows of data. After all, if the data were static, they could just ‚ÄúSave As: CSV‚Äù and read it out that way.





David Wolff  June 10, 2022


  0  Collapse this comment
Copy link
You can even do this in VBScript (with just about the same number of lines of code).





Dan Bugglin  June 10, 2022


  0  Collapse this comment
Copy link
Yup, the solution Raymond posted is the traditional one but requires Excel installed on the current PC. Plus IIRC the ActiveX object you add to your project is specific to that version (or at least sets a minimum version of Office, I forget). And Intellisense is fairly useless when trying to figure out how things work IIRC.
I have used OpenXML which will work with the new format *.???x files, though it's very low level (basically you're working one level above the underlying raw XML files). ClosedXML is built on top of OpenXML and looks much more user friendly though I...Read moreYup, the solution Raymond posted is the traditional one but requires Excel installed on the current PC. Plus IIRC the ActiveX object you add to your project is specific to that version (or at least sets a minimum version of Office, I forget). And Intellisense is fairly useless when trying to figure out how things work IIRC.
I have used OpenXML which will work with the new format *.???x files, though it‚Äôs very low level (basically you‚Äôre working one level above the underlying raw XML files). ClosedXML is built on top of OpenXML and looks much more user friendly though I have not used it yet.
Read less