Dmitry  May 18, 2019


  0  Collapse this comment
Copy link
I’m one of those who test their programs for compatibility with at least Win2k (and sometimes Win9x as well). Obviously, not as part of my job but for my pet projects. After all, the effort put into making Windows backwards-compatible should be used by someone. It’s just cool to see your program run on any NT-family Windows version (or even any 32/64-bit Windows version) ever existed. It is twice cool to feel that you support the Windows platform completely, unlike so-called “cross-platform” toolsets that barely support a small subset of each platform.
<OffTopic>When will the suggestion box be open again?...Read moreI’m one of those who test their programs for compatibility with at least Win2k (and sometimes Win9x as well). Obviously, not as part of my job but for my pet projects. After all, the effort put into making Windows backwards-compatible should be used by someone. It’s just cool to see your program run on any NT-family Windows version (or even any 32/64-bit Windows version) ever existed. It is twice cool to feel that you support the Windows platform completely, unlike so-called “cross-platform” toolsets that barely support a small subset of each platform.
<OffTopic>When will the suggestion box be open again? I have a question about the treatment of the first character in a window title that doesn’t seem to be explained anywhere and might be a good story about compatibility.</OffTopic>
Read less







Jan Ringoš  May 17, 2019


  0  Collapse this comment
Copy link
Luckily I am able to require Service Pack 3 when targetting Windows XP …or POSReady 2009 actually.





cheong00  May 16, 2019


  0  Collapse this comment
Copy link
I thought IR was popular in Japan for exchanging contacts on phones.
My first laptop have IR port too. Unfortunately IBM only provide driver for Win2k and I’ve chosen to install Win98 instead, so the IR port never really have any use.





Nick  May 16, 2019


  0  Collapse this comment
Copy link
> However, at the time, the service pack rules prevented adding new DLLs to the system.
What was the reason for this restriction?  Trying to prevent application dependencies on a specific service pack?  Or maybe something around simplifying updates and rollbacks?





Raymond Chen Author
May 16, 2019


  0  Collapse this comment
Copy link
No idea. If I had to guess, I would guess it was a limitation of the Windows Update infrastructure: Perhaps it knew how to update files, but not how to create new ones. (Because what’s the version number of a nonexistent file?)





Yuhong Bao  May 19, 2019


  0  Collapse this comment
Copy link
That is not how update.exe works AFAIK.





Allan Beatty  May 18, 2019


  0  Collapse this comment
Copy link
If I were in charge of things, ther version number of a nonexistent file would be 0.0.0.0, but somebody somewhere has used negative version numbers that would appear to be older than a nonexistent file.