Alexis Ryan  May 11, 2020


  0  Collapse this comment
Copy link
template code in a preprocessor macro sounds like asking for a confusing really long error message if your macro generates some bad code.
I’m now wondering what happens to the parentheses if the macro passes that argument to another macro. I imagine nothing happens to them. Also wondering about what expressions might not be valid with the parentheses but valid without. My intuition says parentheses around a type name is going to lead to a bad time.





John Melas  May 10, 2020


  0  Collapse this comment
Copy link
A good trick to avoid the need of parenthesis when macro arguments contain commas is to use __VA_ARGS__ as macro argument.
For example we could write the above macro as
#define M(action, …) if (__VA_ARGS__) action // still horrible macro
and then call as
M(return, std::is_same_v<T, U>);





Raymond Chen Author
May 10, 2020


  0  Collapse this comment
Copy link
Until you want to do
M(return std::is_same_v<T, U>, std::is_same_v<X, Y>)
!




Harold H  May 8, 2020


  0  Collapse this comment
Copy link
Angle brackets have been used for “less than” and “greater than” for a very long time.  Maybe using them to signify template instantiation wasn’t a very good design decision.





Jonathan Sharman  May 9, 2020


  0  Collapse this comment
Copy link
Humans and machines can both understand template brackets just fine. I’d rather lay the blame on the unsafe and rather unintelligent C preprocessor than on the template syntax.





Raymond Chen Author
May 9, 2020


  0  Collapse this comment
Copy link
In order to make the preprocessor more intelligent, it would have to run on concert with the compiler rather than as an earlier translation phase. Whether M(a<b,c>-1) is a macro invocation with one parameter or two depends on whether a names a template. Sometimes the best solution for a system that isn’t smart enough is to make it stupider and therefore more predictable.





Brendan Patrick Lyon  May 9, 2020


  0  Collapse this comment
Copy link
Not to mention angle brackets are used in other languages to signify generics, so it makes sense to be consistent.