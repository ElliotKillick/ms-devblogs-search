alan w  September 8, 2021


  0  Collapse this comment
Copy link
Interesting article, similar code was written for a validation project. Two things still on my list.
1) Extract the async scheduling code and make it reusable for different operations, now for you it is coded in the SetColor method but the mechanism can be handy elsewhere.
2) Cancel the currently running operation
The code:
        public async Task Validate(Command command, Instrument instrument)
        {
            Interlocked.Increment(ref this._queue);
          ...Read moreInteresting article, similar code was written for a validation project. Two things still on my list.
1) Extract the async scheduling code and make it reusable for different operations, now for you it is coded in the SetColor method but the mechanism can be handy elsewhere.
2) Cancel the currently running operation
The code:
        public async Task Validate(Command command, Instrument instrument)
        {
            Interlocked.Increment(ref this._queue);
            // Set and check flag for task running
            if (Interlocked.Exchange(ref this._update, 1) == 0)
            {
                while (Interlocked.Exchange(ref this._queue, 0) > 0)
                    await Task.Run(() => this.ValidateCommand(command, instrument));
                Interlocked.Exchange(ref this._update, 0);
                return true;
            }
            return false;
        }
Read less