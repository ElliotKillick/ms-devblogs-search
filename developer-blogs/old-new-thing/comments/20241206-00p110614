Artemy Vysotsky  December 7, 2024


  0  Collapse this comment
Copy link
Last sample has copy-paste issue.
#undef ErrorMessage second time should be fixed to
#undef GetCurrentTime
From the look of it





Mike Winterberg  December 6, 2024


  1  Collapse this comment
Copy link
Doesn’t the non-macro version have a use-after-free?





Raymond Chen Author
December 6, 2024


  1  Collapse this comment
Copy link
Indeed it does. Rats.





Lenard Szolnoki  December 12, 2024
· Edited

  0  Collapse this comment
Copy link
Fixed version:
inline PCWSTR ErrorMessage(HRESULT hr, std::optional<ErrorMessageString>&& storage = {}) {
    storage.emplace(hr);
    return *storage;
}
By putting the ErrorMessageString object in the default argument it manifests as a temporary and its lifetime is extended to the full expression in the caller’s context (similarly to the macro). The && is necessary, otherwise function parameters are not temporaries and have some implementation-defined lifetime rules: they are either destroyed at the end of the function or at the end of the full expression in the caller’s context.