Mark Powell  June 9, 2022


  1  Collapse this comment
Copy link
Working in the financial services industry, I got a chuckle out of a very large spreadsheet being only about 300,000 rows.
I’m not saying it’s a good idea, I’m not defending the practice- just pointing out that “very large” means very different things to different people, in ways I sometimes find amusing.





Neil Rashbrook  June 9, 2022


  0  Collapse this comment
Copy link
At this point it’s not entirely clear that the clipboard is even a reasonable way to transfer data from Excel to this custom application.





Ian Yates  June 8, 2022


  0  Collapse this comment
Copy link
Hmmm… This gives me more theories now about why I sometimes have the snipping tool in Windows 11 freeze. I’ll make a small annotation, ctrl+c, alt-tab to Teams, and ctrl+v. Freeze for 30s of the snip tool. Not every time though, which has made reproducing for the feedback tool annoying.
Something to do with delay rendering, although I feel this freeze would affect the consumer of the clipboard rather than the producer, unless there’s something interesting going on with clipboard history in the middle





Frank Zammetti  June 8, 2022


  1  Collapse this comment
Copy link
Very interesting, thanks for that writeup!  It makes sense that it works that way frankly.
But, since the client app is waiting for the producer the whole time, and I presume the client will wait effectively forever until a response is received (vis a vis, the timeout is at the system level, not the client app level), whether that response is null or actual data, how about the idea of a system-generate dialog at the end of the timeout period that says something like "This operation is taking longer than expected, do you want to continue to wait?"  If...Read moreVery interesting, thanks for that writeup!  It makes sense that it works that way frankly.
But, since the client app is waiting for the producer the whole time, and I presume the client will wait effectively forever until a response is received (vis a vis, the timeout is at the system level, not the client app level), whether that response is null or actual data, how about the idea of a system-generate dialog at the end of the timeout period that says something like “This operation is taking longer than expected, do you want to continue to wait?”  If yes, wait another 30 seconds, and so on, for as long as the user wants or it takes to get the data.
Given the proper wording in the dialog, I could see that being pretty user-friendly and would allow for arbitrarily large clipboard content to be delivered even if it took minutes, and this way you don’t have to try and come up with the “right” wait time (I might even suggest lowering that 30 seconds to 10 or 15 seconds, but that’s a separate consideration).
Read less







Chris Jackson  June 8, 2022
· Edited

  0  Collapse this comment
Copy link
Thanks for the write-up, very informative. I think my immediate thoughts are:
-why 30s?
-how one might provide extra resources to excel or similar application to increase the amount of data that can be converted and beat the current 30s limit. I suppose it depends on the application and the format of the data copied.
Edit (off topic): is the suggestions box now deprecated? i tried in vain to find an open one.





Paul Sanders  June 12, 2022


  0  Collapse this comment
Copy link
Users get bored, yeah?  And Raymond did promise a follow-up…
(Off topic) Tried to authenticate using my Windows Live ID and got “error creating user ‘1’”.  Facebook worked fine, lol.




Kevin Spellman  June 8, 2022


  0  Collapse this comment
Copy link
Interesting, thank you.