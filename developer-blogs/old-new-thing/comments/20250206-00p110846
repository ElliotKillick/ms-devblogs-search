Jamie Anderson  February 9, 2025


  0  Collapse this comment
Copy link
The `wcrtomb` function dates back to the C99 standard. That was a much simpler time and applications often only used a single thread, so it want such a big issue to use `setlocale`.
It seems like `wcrtomb` hasn't been updated because there isn't usually much need to convert just a single character at a time. It's far more common to convert entire strings, and `wcstombs` has variant where a locale can be passed in, `_wcstombs_l`.
If you truly do have the need to convert a single character at a time, you can always call a `wcstombs` variant where the input string is...Read moreThe `wcrtomb` function dates back to the C99 standard. That was a much simpler time and applications often only used a single thread, so it want such a big issue to use `setlocale`.
It seems like `wcrtomb` hasn’t been updated because there isn’t usually much need to convert just a single character at a time. It’s far more common to convert entire strings, and `wcstombs` has variant where a locale can be passed in, `_wcstombs_l`.
If you truly do have the need to convert a single character at a time, you can always call a `wcstombs` variant where the input string is just the target character followed by a null terminator. You’ve just got to watch for occasions where the input character is part off a surrogate pair, but that’s fairly easy to detect.
Read less







Dmitry  February 8, 2025


  0  Collapse this comment
Copy link
Well, as you might have guessed, the Hungarian notation part is not what worries me, but the ”lwr” part. Especially while having towlower et les garçons. After all, those guys do introduce new functions for which backward compatibility is not quite a problem. And macros would do the trick anyway, if anything goes wrong.
Also, I guess some of them could have a limit of six: strcpy makes think so.





Damir Valiulin  February 7, 2025


  0  Collapse this comment
Copy link
This reminds of a period of time 10 years ago when some of our customers were reporting mysterious crashes and corrupted files. It took some time to find a common thread: a user would open either File Open or File Save dialog and after that things went downhill. In couple of corrupted files we got back, we  noticed that numbers with decimals had comma as a separator vs. ".".
Armed with this information, we then tried to figure out with the customers what causes the switch from period to comma. It turned out that iCloud's dll ShellStreams64.dll was being loaded...Read moreThis reminds of a period of time 10 years ago when some of our customers were reporting mysterious crashes and corrupted files. It took some time to find a common thread: a user would open either File Open or File Save dialog and after that things went downhill. In couple of corrupted files we got back, we  noticed that numbers with decimals had comma as a separator vs. “.”.
Armed with this information, we then tried to figure out with the customers what causes the switch from period to comma. It turned out that iCloud’s dll ShellStreams64.dll was being loaded into our process whenever user used a common shell dialog like File Open/Save. This dll in its wisdom used `setlocale` with whatever localized settings user had on their system. Needless to say that all our number parsing code would become broken leading to file corruption and crashes.
It was frustrating and all we could do is recommend to users to either uninstall iCloud or delete the ShellStreams dll which would only affect the Photo Streams folder in Favorites.
Read less







Kevin Norris  February 8, 2025


  0  Collapse this comment
Copy link
I really wish the C and POSIX people would deprecate all of these APIs that expose global mutable state. We don't need a "current" locale, timezone, etc. We just need read-only interfaces that tell us the OS's best guess as to those values, and functions that let us override the values on a per-call basis.
Your app is not special, and your library is even less special. You don't need to second-guess the OS on these things, and you certainly don't need to reconfigure a process that you don't even own in the first place. If the values are wrong, tell...Read moreI really wish the C and POSIX people would deprecate all of these APIs that expose global mutable state. We don’t need a “current” locale, timezone, etc. We just need read-only interfaces that tell us the OS’s best guess as to those values, and functions that let us override the values on a per-call basis.
Your app is not special, and your library is even less special. You don’t need to second-guess the OS on these things, and you certainly don’t need to reconfigure a process that you don’t even own in the first place. If the values are wrong, tell the user to go into system settings and fix it. Or, if you’re really sure that you know better than the OS, then you can pass it explicitly at all callsites.
Read less






Dmitry  February 6, 2025


  0  Collapse this comment
Copy link
While quite understandable for C in 1970, I’ve always wondered who are those guys trying to economize on vowels today. Like if they get punished for every single letter omitting which doesn’t prevent one from guessing right the full words.





Jason Harrison  February 7, 2025


  0  Collapse this comment
Copy link
“Hungarian notation” explains a lot of the absence of vowels/letters. If you start with a short type name, wcs for wide character string, you aren’t adding a significant number of characters per function or type name.
Plus, the holdover from compilers and coding styles where only the first eight characters were used in the identifier lookup tables.




Paul Jackson  February 6, 2025


  1  Collapse this comment
Copy link
In a recent project, I needed a function like wcrtomb_l, but MSVC only has wcrtomb, which forced me to use setlocale with it, which is more ugly and error prone