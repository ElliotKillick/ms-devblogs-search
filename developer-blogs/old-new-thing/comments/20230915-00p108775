cricwood@nerdshack.com  September 18, 2023
· Edited

  0  Collapse this comment
Copy link
Nobody left a comment on starting a function with a try block instead of an opening curly bracket. So I guess everyone but me already knew that this is legal …?!
Looks to me like a side effect of C++ permitting try-catch blocks in c’tor initializer lists.
I can see those being useful in c’tors and d’tors, but is there a legitimate use case for normal functions? Aside from “impress your friends, confuse your enemies”?





Ron Parker  September 18, 2023


  1  Collapse this comment
Copy link
Not just legal, but (at one time, anyway) actually recommended in the MS OSG style guide for functions on API boundaries and in other places where you want to be sure you don’t throw any exceptions.
WIL actually has some macros designed for just this idiom: https://github.com/Microsoft/wil/wiki/Error-handling-helpers#using-exception-based-code-in-a-routine-that-cannot-throw





cricwood@nerdshack.com  September 20, 2023


  0  Collapse this comment
Copy link
Mind=blown. Thanks a lot 👍



Dmitry  September 15, 2023


  0  Collapse this comment
Copy link
Of course, the latter can be ”fixed” even easier by someone who’s eager enough to use the forbidden. Easier than doing the inlining by hand.





Kevin Norris  September 15, 2023


  0  Collapse this comment
Copy link
There is a part of me that is impressed. There is another part of me that thinks “This is just Greenspun’s tenth rule, but with Rust instead of Lisp.”





紅樓鍮  September 20, 2023


  0  Collapse this comment
Copy link
Haskell as well as many other strongly-typed FP languages have started to support linear types recently, so if you have a code idiom that’s sufficiently complex you may have to look there instead.