Bas Mommenhof  May 28, 2020


  0  Collapse this comment
Copy link
How would this work with the vanilla file-dialogs provided by System.Windows.Form (SaveFileDialog/OpenFileDialog)?
These dialogs do not implement the IFileDialog but are wrappers around hidden classes (FileDialogNative.FileSaveDialogRCW) that do.
Does that mean that if I desire this behavior, I should roll my own dialogs?





Kalle Niemitalo  May 28, 2020


  0  Collapse this comment
Copy link
Windows API Code Pack exposes it as CommonFileDialog.CookieIdentifier.





Bas Mommenhof  May 28, 2020


  0  Collapse this comment
Copy link
Helpful, thanx.



n/a n/a  May 27, 2020


  0  Collapse this comment
Copy link
I have to play with this. Thanks.
Since W10, the save dialog has a stupid bug for me.
In all previous Windows versions, I can paste a path to the filename, press “return” and the path is changed and the original filename appears again.
This worked also when I was already in the path I pasted. Since W10, nothing happens, the path is not removed and replaced with the filename.





Joshua Hudson  May 27, 2020


  0  Collapse this comment
Copy link
Bonus Content: GetOpenFileName/GetSaveFileName don’t have names, but you can do it yourself. When calling the explorer-style dialog boxes, you can pass a directory name as a filename and it will prefer that directory to the saved default location.
You can’t do this with the old-style dialog boxes (why use old style? server core documents components used by explorer-style dialog boxes as unusable) though. It will malfunction.