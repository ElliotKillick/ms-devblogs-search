Gerhard Hueller  November 22, 2024


  0  Collapse this comment
Copy link
I wonder how much extra work it took to make the hardware-detection code compatible with Windows-3.1/16-bit mode and whether it was also running as 16-bit Code in Windows-95.
Anyway, the design of Windows-95 really fascinates me: it is incredible how the existing design of enhanced mode Windows was extended into what I wouldn't call an elegant design, yet it more or less worked surpisingly well especially considering the low hardware requirements. It also reminds me how short-lived software and system-designs back then were: basically Win95 had to fill the gap until computers were ready to run NT, just 5 years after...Read moreI wonder how much extra work it took to make the hardware-detection code compatible with Windows-3.1/16-bit mode and whether it was also running as 16-bit Code in Windows-95.
Anyway, the design of Windows-95 really fascinates me: it is incredible how the existing design of enhanced mode Windows was extended into what I wouldn’t call an elegant design, yet it more or less worked surpisingly well especially considering the low hardware requirements. It also reminds me how short-lived software and system-designs back then were: basically Win95 had to fill the gap until computers were ready to run NT, just 5 years after its release its end was sealed.
Read less







pivotman319  November 19, 2024
· Edited

  1  Collapse this comment
Copy link
probably worth noting that the act of minimal Windows runtimes being packed into DOS NEs were practiced even before Win1.01 shipped, starting with In*a*Vision circa September 1985, one of the earliest-known adopters of the Windows Runtime.
I do note some inconsistencies and omissions with this post, though:
- the mini-Win2.1 that came bundled with Excel was actually Windows/286 2.02, which never shipped as a full system package you could buy off-the-shelf at a store due to delays in release scheduling (see https://archive.computerhistory.org/resources/access/text/2014/07/102739917-05-01-acc.pdf)
- the DOSX env that was used as part of Chicago and later initially shipped as "Modular Windows," a...Read moreprobably worth noting that the act of minimal Windows runtimes being packed into DOS NEs were practiced even before Win1.01 shipped, starting with In*a*Vision circa September 1985, one of the earliest-known adopters of the Windows Runtime.
I do note some inconsistencies and omissions with this post, though:
– the mini-Win2.1 that came bundled with Excel was actually Windows/286 2.02, which never shipped as a full system package you could buy off-the-shelf at a store due to delays in release scheduling (see https://archive.computerhistory.org/resources/access/text/2014/07/102739917-05-01-acc.pdf)
– the DOSX env that was used as part of Chicago and later initially shipped as “Modular Windows,” a reduced-functionality version of Win3.1 that let you define your own system shell for use in embedded systems, and only contained the kernel, GDI, USER, and necessary drivers. it was received so poorly that only Tandy actually ended up adopting it for their one interactive CD system back in the early ’90s (dubbed the Tandy Video Information System (VIS)); hell, even modern train systems still use standard Win3.1 for their controls. further attempts at adopting ModWin AFAIK were done exclusively in-house at MS with WinPad, the basis of which was initially on MW but later shifted to Chicago… before that project was thrown into a trash bin a short time later.
– the same DOSX/ModWin env ended up being phased out in favor of the then-new Windows CE, which was superior in terms of functionality and ended up having much better adoption rates overall, to the point where it got its own family of phone-based operating systems (until WP8, where it switched to a hard fork of the NT6.2/6.3 code and later (fully) sync’d with NT10) and even earned itself a spot with a dedicated emulator (CEPAL, based on portions of VPC iirc) that shipped as part of updates targeting RS5 IoTUAPCommerical LTSC.
Read less







Jake Thompson  November 19, 2024


  0  Collapse this comment
Copy link
Would there have been any consideration of Win32s+real 3.1 or Win32s+mini 3.1 so that the GUI installer could be a 32-bit application? Or would that do nothing but bloat the install disk count?





Start Is Back  November 18, 2024


  0  Collapse this comment
Copy link
It was surely possible to fit MinWin95 in 1-2 floppies, path not taken.





Jose Antonio Jamilena Daza  November 13, 2024


  1  Collapse this comment
Copy link
It’s fascinating. I thought MiniWin from the installer was Windows 95 with the Shell modified in system.ini/win.ini (I don’t remember the file).
I used to take out MiniWin and use it for standalone applications that took up 2 or 3 megabytes, for example games. It was very fast and efficient. The games were probably on Win16.
Microsoft, forgive me, it wasn’t piracy, it was a teenager learning.
I loved the article.





Andreas Rejbrand  November 12, 2024


  3  Collapse this comment
Copy link
I grew up with Windows 3.1 and Windows 9x, and I remember being hugely fascinated by the Windows 95 installer and the fact that you actually were running Windows 3.1 for a while. I’m not sure exactly why, but to me this was so cool and awesome.