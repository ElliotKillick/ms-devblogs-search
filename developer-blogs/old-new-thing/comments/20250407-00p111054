Ian Boyd  April 9, 2025


  1  Collapse this comment
Copy link
The archive of the link of Larry's blog post to a joke page his wife thought applied:
https://web.archive.org/web/20040618021742/https://www.jumbojoke.com/000036.html
Is 99.9% "good enough"? If so...
- Two million documents will be lost by the IRS this year.
- 811,000 faulty rolls of 35mm film will be loaded this year.
- 22,000 checks will be deducted from the wrong bank accounts in the next 60 minutes.
- 1,314 phone calls will be misplaced by telecommunication services every minute.
- 12 babies will be given to the wrong parents each day.
- 268,500 defective tires will be shipped this year. [Gee: with the Firestones on Explorers,...Read moreThe archive of the link of Larry’s blog post to a joke page his wife thought applied:
https://web.archive.org/web/20040618021742/https://www.jumbojoke.com/000036.html
Is 99.9% “good enough”? If so…
– Two million documents will be lost by the IRS this year.
– 811,000 faulty rolls of 35mm film will be loaded this year.
– 22,000 checks will be deducted from the wrong bank accounts in the next 60 minutes.
– 1,314 phone calls will be misplaced by telecommunication services every minute.
– 12 babies will be given to the wrong parents each day.
– 268,500 defective tires will be shipped this year. [Gee: with the Firestones on Explorers, it looks like this one came true!]
– 14,208 defective personal computers will be shipped this year. [Well, yeah….]
– 103,260 income tax returns will be processed incorrectly this year. [ditto!]
– 2,488,200 books will be shipped with the wrong cover in the next 12 months.
– 132,412,800 cans of soft drinks produced in the next 12 months will be flatter than one of the 268,500 defective tires.
– Two plane landings daily at O’Hare International Airport will be unsafe.
– 3,056 copies of tomorrow’s Wall Street Journal will be missing one of the three sections.
– 18,322 pieces of mail will be mishandled in the next hour.
– 291 pacemaker operations will be performed incorrectly this year.
– 880,000 credit cards in circulation will turn out to have incorrect cardholder information on their magnetic strips.
– $9,690 will be spent every day on defective, often unsafe sporting equipment.
– 55 malfunctioning automatic teller machines will be installed in the next 12 months.
– 20,000 incorrect drug prescriptions will be written in the next 12 months.
– 114,500 mismatched pairs of shoes will be shipped this year.
– $761,900 will be spent on tapes and CDs that won’t play.
– 107 incorrect medical procedures will be performed each day.
– 315 entries in Webster’s Third New International Dictionary of English Language will be misspelled.
And you thought 99.9% was good enough!!
Read less







Shawn Van Ness  April 8, 2025


  0  Collapse this comment
Copy link
I’d love to hear some tips on how folks test code like this.  During development, I sometimes sprinkle Sleep(rand() % 64) calls between each line.  But I don’t leave those in place, in the final checkin.
Right now I’m helping debug a rare race condition between 2 threads in an old late-90s game engine codebase, and I find myself doing exactly this kind of thing.  (We made a nice new class to encapsulate the difficult locking and syncing..  but of course no meaningful unit-tests.)





Sander Saares  April 8, 2025
· Edited

  0  Collapse this comment
Copy link
Rust has loom which can be useful for testing hand-crafted synchronization logic. It essentially substitutes built-in synchronization primitives with its own that allow it to manipulate the sequencing of operations behind the scenes to run your tests under all the possible permutations of events.





Mike Winterberg  April 8, 2025


  0  Collapse this comment
Copy link
Application Verifier has “Concurrency Fuzzing” that isn’t exactly what you do because it only applies the random delays at existing synchronization points, but it may help.
If the codebase is portable to non-Windows, there’s also Thread Sanitizer. Since it is in league with the compiler, it can presumably find more issues.
https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/application-verifier-tests-within-application-verifier#cuzz
I don’t think either will help much with “I’m writing library code that needs to survive first contact with the enemy (consumers that decide to muck about with priorities)” if you’re not already testing for that.