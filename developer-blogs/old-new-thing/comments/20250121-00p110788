Joshua Hudson  January 23, 2025
· Edited

  0  Collapse this comment
Copy link
To bring this back on topic; it has always been that providing this information has been *better* than avoiding pointing fingers. The benefit is unique, and therefore searchable, crash reports.
We should get something like:
faultcode instruction-address fault-address
where both addresses are given as module!address if it’s within a loaded module or absolute if not.
If you’re really worried about finger pointing you could give the CRC16 of the module name instead; still unique enough to search for.





Igor Levicki  January 22, 2025


  1  Collapse this comment
Copy link
The real reason why Microsoft isn't pointing fingers is because Microsoft itself is the enabler of bad kernel drivers with its meaningless and lax WHQL certification program which apparently only serves to prevent individual developers and hobbyists from being able to write kernel-mode drivers while big players can submit any crap code and get it rubber-stamped for a fee.
I have one question for you Raymond, a question I dare you ask the management -- how the Crowdstrike's Falcon endpoint "security" kernel mode driver got WHQL certified and cross-signed by Microsoft when it contained what basically amounts to ring 0 script...Read moreThe real reason why Microsoft isn’t pointing fingers is because Microsoft itself is the enabler of bad kernel drivers with its meaningless and lax WHQL certification program which apparently only serves to prevent individual developers and hobbyists from being able to write kernel-mode drivers while big players can submit any crap code and get it rubber-stamped for a fee.
I have one question for you Raymond, a question I dare you ask the management — how the Crowdstrike’s Falcon endpoint “security” kernel mode driver got WHQL certified and cross-signed by Microsoft when it contained what basically amounts to ring 0 script interpreter (i.e. the ability to load and act upon untrusted and unverified 3rd party data downloaded from the Internet at runtime)?
It was akin to allowing Python / Java / Bash execute in kernel mode, and it was apparently allowed no questions asked. Not to mention that WHQL “certification” apparently doesn’t mean any driver IOCTL testing / fuzzing is done to see whether driver developers follow best practices and use __try / __except where needed to prevent a BSOD when bad input is received.
As for your memory corruption excuse, an OS crashing X times in a Y period of time (values to be determined based on WER statistics) could boot into memory test mode and after determining whether memory is ok either put blame where it belongs (driver which crashed it) or switch to running in safe mode with a prominent message for the user which lets them know of the risks of continuing running with a faulty RAM.
Read less







Luke727  January 28, 2025
· Edited

  0  Collapse this comment
Copy link
@Igor Levicki
You’re not wrong, but what’s the alternative? Letting just anybody distribute kernel code was not sustainable from a security perspective, and it’s not feasible for Microsoft to deeply inspect every driver everyone wants to publish. The end result of your criticism is ultimately the removal of 3rd party kernel access entirely.





Me Gusta  January 22, 2025


  1  Collapse this comment
Copy link
In regards to the "how to assign the blame" portion. Again, that doesn't guarantee that the driver that gets the blame is the one responsible for the error. A driver stack can have filter drivers between the user mode call and the function driver, or filter drivers between the function driver and the bus driver.
If there is a bug in a filter driver that corrupts a pointer, then it is entirely possible for a filter driver to do its work, corrupt the pointer and then pass the corrupted information onto the next driver. In this case, it is potentially the...Read moreIn regards to the “how to assign the blame” portion. Again, that doesn’t guarantee that the driver that gets the blame is the one responsible for the error. A driver stack can have filter drivers between the user mode call and the function driver, or filter drivers between the function driver and the bus driver.
If there is a bug in a filter driver that corrupts a pointer, then it is entirely possible for a filter driver to do its work, corrupt the pointer and then pass the corrupted information onto the next driver. In this case, it is potentially the next driver that will be reading from or writing to the corrupted pointer. I have seen plenty of cases where a driver such as sdport.sys or one of the usb drivers is where the bug check is triggered, but it was a filter driver attached to one of these drivers for a device which is where the bug actually exists.
Devices also don’t have to fail or die in a very clearcut and obvious manner. A device can keep working in a marginal state for a while, a device can also be affected by another device failure too. Power supply issues are a real interesting case of this. Low quality or marginal power supplies, especially if it is just barely able to supply the system’s required power, can cause issues in high power usage devices.
Read less







Igor Levicki  January 22, 2025


  1  Collapse this comment
Copy link
I am aware of all that, but that's not the main point I was making.
The main point is that Microsoft WHQL certification is a rent seeking sham that also serves as barrier to entry for individual developers, hobbyists, and small companies who want to write kernel driver code.
In short, "WHQL certified" doesn't certify anything except that:
1. You own a company and can prove it with documents
2. You paid for an EV certificate from a whitelisted root CA
3. You are paying rent for Azure AD so you can keep using the signing portal
Given that Microsoft didn't catch Crowdstrike's parser/interpreter...Read moreI am aware of all that, but that’s not the main point I was making.
The main point is that Microsoft WHQL certification is a rent seeking sham that also serves as barrier to entry for individual developers, hobbyists, and small companies who want to write kernel driver code.
In short, “WHQL certified” doesn’t certify anything except that:
1. You own a company and can prove it with documents
2. You paid for an EV certificate from a whitelisted root CA
3. You are paying rent for Azure AD so you can keep using the signing portal
Given that Microsoft didn’t catch Crowdstrike’s parser/interpreter in kernel driver code during WHQL “certification” it’s obvious WHQL is just a paid rubber-stamp — “pay to play” if you wish.
On the other hand, I can’t sign my own well tested kernel driver code anymore even for my personal projects because Microsoft is “committed to security”… of their paychecks, as we have seen that when it comes to WHQL certification anything goes as long as you pay your dues.
TL;DR version:
For every BSOD which is not a hardware fault, Microsoft is the only one to blame — after all they are the ones who set the rules of the game.
Read less