francis duvivier  July 3, 2021


  0  Collapse this comment
Copy link
It should track and show both.
And if there ever would be other ways in which the CPU is limited for the whole OS, that should also be tracked and shown.





Raymond Chen Author
July 4, 2021


  0  Collapse this comment
Copy link
Certainly if you can report both, then report both. But the question was ‚ÄúIf you could report only one number, how would you calculate it?‚Äù




Alois Kraus  July 3, 2021


  0  Collapse this comment
Copy link
Jeff Stokes has also some experiments done: https://illuminati.services/2021/03/17/windows-10-task-manager-cpu-inaccurate-a-tale-of-two-metrics/#utm_source=rss&utm_medium=rss&utm_campaign=windows-10-task-manager-cpu-inaccurate-a-tale-of-two-metrics it looks like we can get more than 100% with Task Manager when e.g. Turbo Boost is active.





Gerald Squelart  July 1, 2021


  0  Collapse this comment
Copy link
An app can use QueryProcessCycleTime and QueryThreadCycleTime to find how many CPU cycles it‚Äôs used.
Is there a way to find out the CPU frequency to relate these cycles to real time? And/or to get notification when the CPU gets (un)throttled?
This way we could give the full information to our users. üòâ





Erik Johnson  July 1, 2021


  0  Collapse this comment
Copy link
If displaying "usage relative to 100% CPU" is misleading in one way, and displaying "usage relative to current CPU capability" is misleading in a different way, then we obviously are looking at the problem in the wrong way.  It's not a data problem, it's a presentation problem.
In my NSH opinion, the correct way to reflect this is to keep all usages relative to 100% and to create a pseudo-task in the display that is assigned all CPU resources that have been removed from availability.  That would mean that the display in your example would show 50% usage by...Read moreIf displaying ‚Äúusage relative to 100% CPU‚Äù is misleading in one way, and displaying ‚Äúusage relative to current CPU capability‚Äù is misleading in a different way, then we obviously are looking at the problem in the wrong way.  It‚Äôs not a data problem, it‚Äôs a presentation problem.
In my NSH opinion, the correct way to reflect this is to keep all usages relative to 100% and to create a pseudo-task in the display that is assigned all CPU resources that have been removed from availability.  That would mean that the display in your example would show 50% usage by ‚ÄúThermal CPU Throttling‚Äù and 35% by ‚ÄúActive Task‚Äù for a displayed total of 85%, which reflects the reality that only 15% of the CPU is available for use.  Shading the ‚ÄúThrottling‚Äù pseudo-task differently would make this clearer, but is not required.
If one doesn‚Äôt want to use a pseudo-task, then the current graph in Resource Manager implied a different way.  It displays available CPU as a blue line overlaying the graph; if this was filled in above as ‚Äúunavailable‚Äù or ‚Äúthrottled‚Äù or whatever, in the same visual style that fills below the green line as the total of active tasks, then the display would be intuitively correct ‚Äì the non-filled area is available and the filled area is not.
Either way, the task usage display can remain a simple reflection of core time allocated, while the user can correctly attribute behavior between user tasks, the thermal support of their system, or other background tasks or system services.
Read less







Chris Iverson  July 6, 2021


  0  Collapse this comment
Copy link
The problem with this method is the reverse possibility ‚Äì CPUs being boosted.  There are many CPUs now that have a rated standard clock speed, and will throttle below that in times of overheat or simply low usage, but they will also boost above that clock speed when the CPU is being heavily utilized.
How do you display that?  Does the ‚ÄúThrottling‚Äù show negative percentages?  Or does the CPU running at standard clock ALWAYS show as being throttled?




Mike Morrison  June 30, 2021


  0  Collapse this comment
Copy link
‚ÄúIf the system had used the second model, you would see that program X is using 50% CPU, and you would say, ‚ÄòWell, that‚Äôs not the problem, because there‚Äôs still 50% CPU left for other stuff,‚Äô ‚Äú.  Who looks at task manager, sees a process using 50% CPU, and thinks ‚Äúnah, that‚Äôs not the reason for the slow performance‚Äù?  Sure, the process may be using 50% CPU for a reason, but still, if the system is running slowly, then such a process would be a prime candidate for an investigation.





IS4  June 30, 2021


  0  Collapse this comment
Copy link
I think it depends on what kind of throttling we are talking about. When I decrease the power consumption of the CPU in the Windows settings, it obviously decreases its speed, but the CPU usage of all processes as reported is unaffected, since all processes are equally affected. However, if this did something else, like setting the minimal value for idle time, thus affecting only processes over the limit, you‚Äôd probably want all the usages plus idle to sum up to 100 %.





Jeff Stokes  June 29, 2021


  0  Collapse this comment
Copy link
https://illuminati.services/2021/03/17/windows-10-task-manager-cpu-inaccurate-a-tale-of-two-metrics/





Aaron Margosis  June 29, 2021


  0  Collapse this comment
Copy link
Task Manager‚Äôs CPU numbers are all but meaningless
https://aaron-margosis.medium.com/task-managers-cpu-numbers-are-all-but-meaningless-2d165b421e43





Letao Wang  June 29, 2021


  0  Collapse this comment
Copy link
Doesn‚Äôt this depend on what colored glasses you‚Äôre wearing?
With CPU-colored glasses, you‚Äôd want to know things like are there free CPU cycles available to run other threads, who is responsible for using up available CPU cycles, etc.  In that context, reporting in terms of currently available cycles gives an intuitive answer.
With program-colored glasses, what you said in the article is true, and reporting in terms of maximum potential cycles gives an intuitive answer.





Piotr Si√≥dmak  June 29, 2021


  0  Collapse this comment
Copy link
Depends on what question is the user asking.
Who started using up more CPU about 5 seconds ago when the fan stated going vrooooom? - The per-process CPU usage graph should not change relative to Max CPU.
How is the system handling my CPU usage? Did the web browser started being choppy 5 seconds ago because the system started throttling or is it because someone suddenly hogged the whole CPU? - again not relative to Max CPU, with the Max CPU as a separate graph to see if it changed.
Those are historical values - you look at a set of data...Read moreDepends on what question is the user asking.
Who started using up more CPU about 5 seconds ago when the fan stated going vrooooom? ‚Äì The per-process CPU usage graph should not change relative to Max CPU.
How is the system handling my CPU usage? Did the web browser started being choppy 5 seconds ago because the system started throttling or is it because someone suddenly hogged the whole CPU? ‚Äì again not relative to Max CPU, with the Max CPU as a separate graph to see if it changed.
Those are historical values ‚Äì you look at a set of data over time.
There is also the immediate value. This one should be relative to Max CPU, because it answers the question ‚ÄúWho is using the most of my CPU‚Äù and ‚ÄúHow much CPU do I have available‚Äù, or rather ‚ÄúAre things slow, because I ran out of CPU‚Äù. This one is not graphed.
What other questions could a user ask when looking at CPU usage?
Read less