Alex Cohn  April 30, 2019


  0  Collapse this comment
Copy link
I am disappointed that there is no clean way to express this with move semantics.





Martin Ba  April 30, 2019


  0  Collapse this comment
Copy link
Personally, I do think that the if statement is far too long already, so "all" the lurking bugs don't trigger if I do it in a readable way and put the ResetHandle in its own expression.
Plus: If I have to call that DuplicateHandle parameter freighttrain more than twice, I will have wrapped it already anyways.
I *do* find this an interesting and relevant discussion, but my take on this would rather be: I don't need to "make it work" with the ugly long if, I just would like the compiler to tell me that I'm using it wrong. Which,...Read morePersonally, I do think that the if statement is far too long already, so ‚Äúall‚Äù the lurking bugs don‚Äôt trigger if I do it in a readable way and put the ResetHandle in its own expression.
Plus: If I have to call that DuplicateHandle parameter freighttrain more than twice, I will have wrapped it already anyways.
I *do* find this an interesting and relevant discussion, but my take on this would rather be: I don‚Äôt need to ‚Äúmake it work‚Äù with the ugly long if, I just would like the compiler to tell me that I‚Äôm using it wrong. Which, oc is another kind of magic yet again. üôÇ
Read less







Raymond Chen Author
April 30, 2019


  0  Collapse this comment
Copy link
Maybe DuplicateHandle has lots of parameters, but consider something simpler like

  std::unique_ptr<Foo> foo;
  if (GetCurrentFoo(proxy(foo)) && foo->IsRed()) ‚Ä¶





Ben Craig  April 29, 2019


  1  Collapse this comment
Copy link
There‚Äôs a C++ standards proposal to address this: P1132R3 out_ptr ‚Äì a scalable output pointer abstraction





Alexander Zhuravlev  April 29, 2019


  0  Collapse this comment
Copy link
out_ptr suffers from the same lifetimes problem though described in their 3.7 section.