Dougall J  July 27, 2022
· Edited

  0  Collapse this comment
Copy link
I think AArch64 removed the Q and GE[n] flags too. The Application Program Status Register documentation states:
“The APSR exists only in AArch32 state. In AArch64 state, the Q and GE flags cannot be read or written to, and the condition flags are held in a special-purpose register called the NZCV register.”





Jonathan Harston  July 27, 2022


  0  Collapse this comment
Copy link
A few years ago I helped in a project to write an ARM64 assembler. Yeah gods, what have they done to the instruction encoding? The encoding is this, except sometimes it’s this, or occasionally this. And there’s bits where orthogonality would give a chunk of “null” operations, but instead they stuff extra instructions into those encodings, meaning your assembler has to overthink and check itself to filter out an assembly statement that encodes into a stuffed instruction.





Pedro Justo  July 26, 2022
· Edited

  1  Collapse this comment
Copy link
Funny the article has the link to Apple's ABI but is missing the link to Windows ABI. Here it is:
https://docs.microsoft.com/en-us/cpp/build/arm64-windows-abi-conventions?view=msvc-170
Plus the zoom-in on the Exception Handling portion of the ABI:
https://docs.microsoft.com/en-us/cpp/build/arm64-exception-handling?view=msvc-170
And the shameless plug to the Arm64EC ABI:
https://docs.microsoft.com/en-us/windows/arm/arm64ec-abi
Small note on register assignment table:
- x8 is used for returning large types by value.
- x15 is used for __chkstk.
Final note: Latest builds of Windows available through the Windows Insiders programs already have Pointer Authentication enabled. So it is quite *likely* you'll start seeing it since it will show up on every non-leaf function's prolog and epilog.
Read moreFunny the article has the link to Apple’s ABI but is missing the link to Windows ABI. Here it is:
https://docs.microsoft.com/en-us/cpp/build/arm64-windows-abi-conventions?view=msvc-170
Plus the zoom-in on the Exception Handling portion of the ABI:
https://docs.microsoft.com/en-us/cpp/build/arm64-exception-handling?view=msvc-170
And the shameless plug to the Arm64EC ABI:
https://docs.microsoft.com/en-us/windows/arm/arm64ec-abi
Small note on register assignment table:
– x8 is used for returning large types by value.
– x15 is used for __chkstk.
Final note: Latest builds of Windows available through the Windows Insiders programs already have Pointer Authentication enabled. So it is quite *likely* you’ll start seeing it since it will show up on every non-leaf function’s prolog and epilog.
Read less







Matt D.  July 26, 2022


  0  Collapse this comment
Copy link
Nice to see a new series on an ISA!
Application Binary Interface for the Arm Architecture is also a good reference, https://github.com/ARM-software/abi-aa/
Particularly AAPCS64, Procedure Call Standard for the Arm 64-bit Architecture (AArch64), https://github.com/ARM-software/abi-aa/blob/main/aapcs64/aapcs64.rst