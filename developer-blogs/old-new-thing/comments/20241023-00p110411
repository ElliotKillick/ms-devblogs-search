alan robinson  October 24, 2024


  0  Collapse this comment
Copy link
Gosh, that’s me to a T. Except in my case I just have a knee jerk response to attempt a win32 sans COM solution first. Just feels simplest, though I admit familiarity clouds my judgement.
Although… If you can so something with a single function call… Hard to argue there’s an easier way. And that’s how much of win32 works.





Dmitry  October 23, 2024
· Edited

  1  Collapse this comment
Copy link
Frankly speaking, I often feel an overview of various API ”families” and how they relate to each other, which requirements (Windows version, particular components installed, etc.) and limitations they cause, and a brief overview of conventions for each would be a great series.
For example, we have good old WinAPI that dates back to the stone ages and generally uses stdcall for 32-bit Windows, blah-blah. Then there’s COM-related stuff with its own long story full of name changing, but it basically is just calling methods through interface pointers plus a few non-member routines, and sometimes a requirement to initialize COM. You...Read moreFrankly speaking, I often feel an overview of various API ”families” and how they relate to each other, which requirements (Windows version, particular components installed, etc.) and limitations they cause, and a brief overview of conventions for each would be a great series.
For example, we have good old WinAPI that dates back to the stone ages and generally uses stdcall for 32-bit Windows, blah-blah. Then there’s COM-related stuff with its own long story full of name changing, but it basically is just calling methods through interface pointers plus a few non-member routines, and sometimes a requirement to initialize COM. You get the idea.
No matter how related/based WinRT or .NET, or whatever else to/on the former API families, the relations between the old and the new are quite obscure. Which prevents some of us to use the new stuff.
Read less