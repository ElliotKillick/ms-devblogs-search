Jason Harrison  March 11, 2025


  0  Collapse this comment
Copy link
I wonder how many other “S is for summer” time zones there are than Central European Summer Time.
PDT is 231 days long this year compared to 134 days for PST. So there is some weight for the longer period being the “standard”.
Do they really use CET, Central European Time, for the winter months? That sounds as bad as PT.





Klitos Kyriacou  March 12, 2025
· Edited

  0  Collapse this comment
Copy link
They do use "CET" which makes sense being the "normal" i.e. winter time, as opposed to the "artificially advanced" summer time. This is in contrast to PT which is a time zone with unspecified UTC offset.
There's also BST, British Summer Time, which is UTC+1. Not to be confused with Bangladesh Standard Time (UTC+6) or Burma Standard Time (UTC+6:30), both of which also use the abbreviation "BST".
In Ireland, as in the UK, they observe GMT in winter and Irish Standard Time in the summer. Not "Irish Summer Time", but "Irish Standard Time". So they have S for "Standard" but applying only...Read moreThey do use “CET” which makes sense being the “normal” i.e. winter time, as opposed to the “artificially advanced” summer time. This is in contrast to PT which is a time zone with unspecified UTC offset.
There’s also BST, British Summer Time, which is UTC+1. Not to be confused with Bangladesh Standard Time (UTC+6) or Burma Standard Time (UTC+6:30), both of which also use the abbreviation “BST”.
In Ireland, as in the UK, they observe GMT in winter and Irish Standard Time in the summer. Not “Irish Summer Time”, but “Irish Standard Time”. So they have S for “Standard” but applying only in the summer.
Read less






Sanjay Joshi  March 11, 2025


  0  Collapse this comment
Copy link
Is there any timeline we can use for auto fetch ?





IS4  March 10, 2025


  2  Collapse this comment
Copy link
Just use UTC for God’s sake.





Ron Parker  March 10, 2025


  0  Collapse this comment
Copy link
This problem is worse in the Mountain time zone, where there are states simultaneously observing MST and MDT. When I lived in eastern Indiana, before they adopted Daylight Saving Time (for the second time, since they effectively adopted it year-round back in the 40s) we had the same problem – Ohio observed EDT and Indiana observed EST. Most people I worked with said “Ohio time” or “Indiana time” but you always got that one person who wanted to sound smart and would say “EST” instead.





Gunnar Dalsnes  March 8, 2025


  0  Collapse this comment
Copy link
Hmm… A time zone, to me, is a region/geographical area. Having 2 time zones for the same region is…strange? I think in Europe they only use one time zone for one region (make perfect sense to me, but I am biased). When you write that many use PST incorrectly, it may seems they want to use it “correctly” too (meaning, use PST like it is the only time zone for that region, regardless of daylight saving).





Petr Kadlec  March 9, 2025


  2  Collapse this comment
Copy link
There are basically two kinds of “time zones”: One is “a fixed offset from UTC”, those are e.g. “PST”, “CEST” (where the “S” means “Summer”, i.e. the exact opposite from the “S” in “PST”) “UTC-02:00”, etc. The other one is “the time observed in the given geographical area, however its offset from UTC changes throughout the year”, those are e.g. “America/Los_Angeles”, “Europe/Paris”, or “Pacific Time” (“PT”).




Jason Harrison  March 8, 2025


  0  Collapse this comment
Copy link
Wow, the previous essay on this topic was in 2012. Indeed, this problem occurs much more often than once a decade. However, readers of this blog are probably all to familiar with the issue.





Álvaro González  March 8, 2025


  0  Collapse this comment
Copy link
In Spain it’s very common to say “Spanish time”, even though the country spans through two time zones. Of course, what they really mean is “Madrid time”, which is what they should be saying in the first place, because main cities are typically a very good reference, much better than named time zones that swap twice a year.





Michael Taylor  March 7, 2025


  0  Collapse this comment
Copy link
In my experience the time is the least of your worries. We publish APIs and every time we have a deployment, downtime or not, we specify what is changing and the impact it'll have on our clients. EVERY SINGLE TIME we do this we get a follow up email from at least one client asking the impact to them and whether we can defer it because they aren't ready for whatever change we made.
In every case we point out that we have no idea how they are using the API so we cannot determine the exact impact to them....Read moreIn my experience the time is the least of your worries. We publish APIs and every time we have a deployment, downtime or not, we specify what is changing and the impact it’ll have on our clients. EVERY SINGLE TIME we do this we get a follow up email from at least one client asking the impact to them and whether we can defer it because they aren’t ready for whatever change we made.
In every case we point out that we have no idea how they are using the API so we cannot determine the exact impact to them. We also point out the release email said the impact to clients and they should review it. Furthermore we almost never make a change that actually requires an immediate change from our customers and we clarify that in our emails. If we are going to “break” them then we let them know at least a year in advance so we don’t have to “defer” releases because they “aren’t ready”.
The takeaway is that you can be terse or detailed in your announcements and it isn’t going to matter. Customers are going to send emails irrelevant of what you say because that makes them feel better, I guess.
Read less







Drew  March 7, 2025


  2  Collapse this comment
Copy link
I see this more often from non-technical people who are trying to pretend to be technical. Any seasoned dev knows that time is prickly, dangerous territory.





Drew  March 7, 2025


  0  Collapse this comment
Copy link
Figuring out how to version your API so that you don’t break customers is an orthogonal problem. As is figuring out how to do deploys without downtime. As is a lack of decent PMs with customer use cases. Making software like it’s the 1990s is much more trouble than mere time zones.
Inside, I’m crying for you. It doesn’t have to be like that.
I can only assume that blaming customers instead of fixing engineering culture is approved by your management. You could consider leaving.





Simon Farnsworth  March 10, 2025


  0  Collapse this comment
Copy link
I can tell that you've not spent a huge amount of time supporting customers; back when I did, I'd get a request to defer a deployment because the client is "not ready" when we e-mailed as a courtesy to let them know that we intended to swap out servers one at a time for newer ones. This is purely routine maintenance, should have no client-visible impact, and we only notified people because it increased the chance that a human error at our end would result in increased service latency (procedure was to install new server, bring it up, add it...Read moreI can tell that you’ve not spent a huge amount of time supporting customers; back when I did, I’d get a request to defer a deployment because the client is “not ready” when we e-mailed as a courtesy to let them know that we intended to swap out servers one at a time for newer ones. This is purely routine maintenance, should have no client-visible impact, and we only notified people because it increased the chance that a human error at our end would result in increased service latency (procedure was to install new server, bring it up, add it to the service cluster, remove the old server from the service cluster, repeat until all service clusters are only running new servers, then go back and shut down then uninstall the servers that were being removed).
There are just some clients who assume that any change you notify them of will have a negative impact on them.
Read less







Michael Taylor  March 7, 2025
· Edited

  0  Collapse this comment
Copy link
Not sure what you’re talking about. We have neither downtime, for deployments, nor do we have versioning issues. We don’t break existing clients either. Our APIs are more solid, reliable and resilient then every other API our customers use, so they all say. They we get these emails on every release, irrelevant of what the email actually says.
This is not an engineering issue. This is customers not either fully reading the messages or understanding them and reaching out to us anyway.



Dmitry  March 7, 2025


  0  Collapse this comment
Copy link
Using UTC everywhere would force EVERYONE to think. Which, actually, is a GOOD thing. Would also make every programmer understand timezones before they even put their hands on the code. Before they even learn to write.
Noone will, though.





(O-S) Adam Rowell  March 10, 2025


  1  Collapse this comment
Copy link
Everyone except people in London, Lisbon, etc, where local time is the same as UTC half the year





Yuri Khan  March 7, 2025


  0  Collapse this comment
Copy link
This. Properly configured servers do not have time zones or daylight saving. They operate in UTC. People, on the other hand, live in so many time zones that there isn’t any reason to single out just one in the announcement.
(The alternative is to use the HTML <time> element and leave it to the browser to assist the user in converting it to the local time. (As far as I know, no browser currently does anything like that.))





Kevin Norris  March 7, 2025


  2  Collapse this comment
Copy link
A person going by the handle qntm has explained the problems with global UTC far more thoroughly than I ever could. But I would summarize it as follows:
Humans are (mostly) diurnal creatures. At any given "real" (universal) time, different parts of the world observe different solar time (which is the technical term for "the time as would be reflected on a sundial, if we pretend that sundials continue to work at night, when it's cloudy, etc.," and I'm also leaving out a few technicalities that don't matter for the purposes of this discussion like mean vs. apparent solar time). From...Read moreA person going by the handle qntm has explained the problems with global UTC far more thoroughly than I ever could. But I would summarize it as follows:
Humans are (mostly) diurnal creatures. At any given “real” (universal) time, different parts of the world observe different solar time (which is the technical term for “the time as would be reflected on a sundial, if we pretend that sundials continue to work at night, when it’s cloudy, etc.,” and I’m also leaving out a few technicalities that don’t matter for the purposes of this discussion like mean vs. apparent solar time). From those two facts alone, it immediately follows that people in different parts of the world are going to begin and end their daily routines at different universal times. Time zones are essential complexity, because they are the only reasonable way of approximating or quantifying the underlying human behavior of “get up in the morning and go to bed at night.” Yes, you can just do the math based on longitude, but that’s functionally equivalent to having 360 timezones (instead of the 38-ish that are observed in the real world, if you include all the tiny weird ones), so the cure is worse than the disease.
Of course, you could try to convince everyone in the world to start work at 09:00 UTC and end work at 17:00 UTC, even if it’s pitch dark outside. I just don’t think anyone outside of the UK (and perhaps a few nearby countries) is going to be terribly interested in such a proposal.
Read less






Matt Sayar  March 7, 2025


  2  Collapse this comment
Copy link
That’s why I just say “9-11am PT”





KM  March 7, 2025


  1  Collapse this comment
Copy link
The servers will be down on November 2nd, between 2am and 3am PT.
1 letter here can save many emails.





Peter Cooper Jr.  March 8, 2025


  1  Collapse this comment
Copy link
Honestly, if I got an email that was describing a time window around the daylight savings change, even if they included a D or S in the abbreviation I wouldn’t be confident that the sender actually knew which one meant which.