Neil Rashbrook  September 17, 2024


  0  Collapse this comment
Copy link
Firefox started honouring this preference as of Firefox 93. But my feed reader is based on Firefox 52, so I never noticed the blink change until recently when the comment field stopped working completely on that old version.





Georg Rottensteiner  September 16, 2024


  0  Collapse this comment
Copy link
This 5 second blinking stop option is probably one of these “you cannot win” situations.
I’m writing a little IDE for retro development, and users basically complained that the caret vanished 5 seconds in. Which is really really annoying when you want to keep working and just looked somewhere else for a second (or 5 seconds, hurr durr).
I resorted to a hack-around, that would re-create the caret every 5 seconds. That doesn’t feel clean.
It is possible to disable that stop, but it’s a global setting. Isn’t there a possibility to disable this application wide, or at least per control? Or...Read moreThis 5 second blinking stop option is probably one of these “you cannot win” situations.
I’m writing a little IDE for retro development, and users basically complained that the caret vanished 5 seconds in. Which is really really annoying when you want to keep working and just looked somewhere else for a second (or 5 seconds, hurr durr).
I resorted to a hack-around, that would re-create the caret every 5 seconds. That doesn’t feel clean.
It is possible to disable that stop, but it’s a global setting. Isn’t there a possibility to disable this application wide, or at least per control? Or at least have a different timeout value (also per application or control)?
Read less







Neil Rashbrook  September 17, 2024


  0  Collapse this comment
Copy link
if your users don’t want their caret to stop blinking in your application, they might well be able to live with it keeping blinking in other apps. (In my case, that other app is Command Prompt, which always blinks somehow. Maybe it’s not a “real” caret?) If that’s the case, there’s a registry entry they could change…





Kalle Niemitalo  September 17, 2024


  1  Collapse this comment
Copy link
For console applications, the blinking cursor is implemented in the console host (conhost.exe), whose source code is in the Windows Terminal repository on GitHub.  It calls GetCaretBlinkTime and sets its own thread-pool timer. It uses neither CreateCaret nor SetCaretPos, but it seems to publish the location of the cursor via a private API in user32.dll for accessibility purposes.




Tobias Käs  September 17, 2024
· Edited

  1  Collapse this comment
Copy link
You can do the WPF thing and create the caret with a blank bitmap but correct size, so XOR’ing doesn’t modify the screen but still allows accessibility and other kinds of applications to react to the caret placement and position. Then you can take care of rendering the actual visual caret yourself, with a timer for blinking, and adjust the behavior to work like you desire.