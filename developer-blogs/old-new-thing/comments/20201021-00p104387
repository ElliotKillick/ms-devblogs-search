David Walker  October 26, 2020


  0  Collapse this comment
Copy link
Building on the previous entries in this series, I thought you were starting from a file path — and that means the file has to exist, right?
If the file exists, then I doubt that it’s on a “CD-ROM drive with no disk in the drive”.   But then I realize that you were starting with a volume… and if you actually got the volume from a file path, then there would be a disk in the drive… not counting cases where someone ejects the drive at the right instant.  Tricky!





Zenju Z  October 22, 2020


  0  Collapse this comment
Copy link
Is the FILE_FLAG_BACKUP_SEMANTICS required in CreateFile to open “\\.\PhysicalDriveX”? In the first example “driveHandle = CreateFile” is not used, but in the second one (wil::unique_hfile result{ CreateFile) it is. In my tests it seems FILE_FLAG_BACKUP_SEMANTICS is not required: Just incidental, or better add it anyways?





紅樓鍮  October 21, 2020


  0  Collapse this comment
Copy link
I actually wish system calls/WinAPI functions that fill user-provided buffers were designed to be called in an “interactive” way, returning the array length/number of bytes needed plus some sort of “continuation object” that can be invoked with a suitably allocated buffer to get the final answer.





Jeremy Richards  October 23, 2020


  0  Collapse this comment
Copy link
I think that would actually be harder to program against.  Now you have to deal with the case where the 2nd half of the result doesn’t match the first half if the actual answer changed in between the two queries (e.g. in this case a volume was expanded across more physical drives, or the specific physical drives changed between the calls — admittedly unusual for this example, but would be fairly common for some of the other variable length calls in Win32).





紅樓鍮  October 23, 2020


  0  Collapse this comment
Copy link
That would be a problem for any two system calls made seperately in time, including for example detecting the existence of a directory and then creating a file under that directory, in between which the directory could have been deleted.  I defer the implementation of composable atomic system calls to the operating system’s authors.



Daniel Sturm  October 21, 2020


  0  Collapse this comment
Copy link
What’s the reason of using a std::unique_ptr instead of a std::vector?
Is it just to save on the size member of vector or is there a deeper reason?





紅樓鍮  October 21, 2020


  0  Collapse this comment
Copy link
I think the ioctl returns a variable-sized structure that comprises fixed members in the front and a variable length array following.  Vectors only store pure arrays.