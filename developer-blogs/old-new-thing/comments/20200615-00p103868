cheong00  June 15, 2020


  0  Collapse this comment
Copy link
Or is it possible to run everything with .NET Core 2 runtime instead?
Pushing it back to run with on .NET Core 1.1 sounds like delaying a problem you would have to deal with later.
I'll add that the .NET Core thing has caused me headache multiple times. Why can't they leave those without the need to run things on multi-platform continue using full version of .NET framework, and make those who need multi-platform access to tolerate the pain? (I'm referring to the fact that on .NET v5 onwards, everything has to run on .NET Core runtime and there will no longer...Read moreOr is it possible to run everything with .NET Core 2 runtime instead?
Pushing it back to run with on .NET Core 1.1 sounds like delaying a problem you would have to deal with later.
I‚Äôll add that the .NET Core thing has caused me headache multiple times. Why can‚Äôt they leave those without the need to run things on multi-platform continue using full version of .NET framework, and make those who need multi-platform access to tolerate the pain? (I‚Äôm referring to the fact that on .NET v5 onwards, everything has to run on .NET Core runtime and there will no longer be a ‚Äúfull‚Äù Windows-only version)
Also, if the C++ side runs on .NET Core 2, will the problem fix itself? AFAIK .NET v4 can sideload v2 assembly without problem provided v4 runtime loads before v2.
Read less







Ben Voigt  June 15, 2020


  0  Collapse this comment
Copy link
This sure feels like ‚ÄúDLL Hell‚Äù all over again üôÅ





Piotr Si√≥dmak  June 15, 2020


  0  Collapse this comment
Copy link
You can never escape hell. Only exchange it for another hell.





Joe Beans  June 15, 2020


  0  Collapse this comment
Copy link
I‚Äôve been in Windows.winmd hell for the past 4 years. I can‚Äôt remember the last time I saw a working app manifest. For a good time, dial 1-800-Activation-Context.