Dan Weiss  April 6, 2024


  0  Collapse this comment
Copy link
If you really really needed to know what the environment in another process was, you could use code injection and ask from within that process.





Uwe Baemayr  March 29, 2024


  0  Collapse this comment
Copy link
I had to do something like this in a COM surrogate when I ported an in-process COM server component from 32-bit to 64-bit. The large MFC-based hosting application needed to stay 32-bit (for now) so I had it invoke the new 64-bit COM component out-of-process using the surrogate. Then I discovered that the surrogate does not inherit the creator's environment (it needed the PATH and a few other variables), and always starts up in C:\WINDOWS\SYSTEM32....Read moreI had to do something like this in a COM surrogate when I ported an in-process COM server component from 32-bit to 64-bit. The large MFC-based hosting application needed to stay 32-bit (for now) so I had it invoke the new 64-bit COM component out-of-process using the surrogate. Then I discovered that the surrogate does not inherit the creator’s environment (it needed the PATH and a few other variables), and always starts up in C:\WINDOWS\SYSTEM32.  Since it was my component, adding an interface to set the environment and current working directory solved the problem, but it would have been easier if that information could have been gleaned by the surrogate-hosted component.
Read less







Joshua Hudson  March 30, 2024


  0  Collapse this comment
Copy link
Hmmm; I had the reverse problem and found the simplest solution was to launch the executable that would contain the COM component myself. Oh well.




Joshua Hudson  March 28, 2024


  0  Collapse this comment
Copy link
Sounds like a diagnostic tool. On modern Unix variants you can get this stuff out of PS if you are the user of the process you want to look at.
I wouldn’t be surprised if there’s a decent way to get this out of a process on Windows but I only came up with a terrible way. Hint: GetEnviornmentVariable has to be implemented somehow.





Wilhelm Payne  March 29, 2024


  0  Collapse this comment
Copy link
I’m certain that there is a way because Process Explorer is able to display the environment for processes on the system.





Me Gusta  March 29, 2024


  0  Collapse this comment
Copy link
The most obvious way would be to inject a DLL.




Neil Rashbrook  March 29, 2024


  0  Collapse this comment
Copy link
There’s an edge case whereby if you’re the debugger of the process then you can just ask the process to call GetEnvironmentVariable for you.





Henke37  March 28, 2024


  0  Collapse this comment
Copy link
My gut says that the PEB has it. So use NtQueryInformationProcess to get the PEB base address and ReadProcessMemory to extract the data. I would consider the relevant struct part to be “stable enough” for widespread use. But it’s still not officially documented.