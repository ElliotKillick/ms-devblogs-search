Daniel Marschall  July 28, 2021


  0  Collapse this comment
Copy link
I think it is OK to read files from the current directory, as long as the paths are properly escaped and path traversal is addressed (i.e. removing “..\”)





Neil Rashbrook  July 27, 2021


  0  Collapse this comment
Copy link
I read this as the application looking for a known file not realising that someone was trying to hijack it by dropping a substitute in the current directory and being protected by the given behaviour of IIS, so that the application's dependence on the current directory was inadvertent.
Best practice would appear to depend on why the application needs to use SearchPath, but maybe they could use the  API to prefer the  to the...Read moreI read this as the application looking for a known file not realising that someone was trying to hijack it by dropping a substitute in the current directory and being protected by the given behaviour of IIS, so that the application’s dependence on the current directory was inadvertent.
Best practice would appear to depend on why the application needs to use SearchPath, but maybe they could use the SetSearchPathMode API to prefer the PATH to the current directory.
Read less







Stefan Kanthak  July 28, 2021
· Edited

  0  Collapse this comment
Copy link
Enforcing the “safe process search mode” won’t help
1. if an adversary can drop a substitute in a directory listed in %PATH% before the directory where the searched for executable is located;
2. if an adversary can drop an arbitrary/unique named executable in a directory listed in %PATH%, including the CWD, and feeds this arbitrary/unique name to SearchPath() or CreateProcess() or …
Better call SetCurrentDirectory(“\\\\.\\nul\\”) instead of SetSearchPathMode(BASE_SEARCH_PATH_ENABLE_SAFE_SEARCHMODE)




Jay K  July 25, 2021


  0  Collapse this comment
Copy link
These are not NT-style paths, depending on definition.
These are Win32 paths.
NT paths are like \??\.
Granted you said “NT style”.
These are perfectly valid, heavily documented, etc.
Wonky, granted.





紅樓鍮  July 22, 2021


  0  Collapse this comment
Copy link
Just as an aside for any C++ programmer reading the comments who doesn’t already know this, In C++11+ you can write raw string literals like LR"(\\?\C:\Users)" for Windows paths, avoiding the need to escape backslashes.





Martin Ba  July 22, 2021


  0  Collapse this comment
Copy link
“… when you have eliminated the -improbable- …” -> that should read “… when you have eliminated the *impossible* …”, shouldn’t it?





Raymond Chen Author
July 22, 2021


  0  Collapse this comment
Copy link
Indeed, fixed.