Dan Bugglin  May 6, 2020


  0  Collapse this comment
Copy link
There's probably still a way to capture. Possibly video capture/streaming software that works at a low enough level would still be able to capture it.
I hope you let the customer know that about the amazing modern convenience called the pen (or pencil) that a malicious actor could use to WRITE DOWN information displayed on the screen. What they're trying to do is ultimately futile. There's always going to be an "analog hole" at the very...Read moreThere‚Äôs probably still a way to capture. Possibly video capture/streaming software that works at a low enough level would still be able to capture it.
I hope you let the customer know that about the amazing modern convenience called the pen (or pencil) that a malicious actor could use to WRITE DOWN information displayed on the screen. What they‚Äôre trying to do is ultimately futile. There‚Äôs always going to be an ‚Äúanalog hole‚Äù at the very least.
https://en.wikipedia.org/wiki/Analog_hole
Edit: Also this reminds me of airport body scanners. There was some controversy about images they captured being potentially pornographic with how they could see through clothes to some degree. There were assurances made the computers that displayed the images to TSA agents could not be used to permanently save images. Guess what happened?
Read less







Filip Skakun  May 6, 2020


  0  Collapse this comment
Copy link
Some of the introductory information isn't entirely accurate, but it indeed matches with users' perception of the experience and the proposed problem solution would work in some scenarios (where you control the code of apps that present the data you don't want captured).
ScreenSketch.exe is indeed the process and main executable of the Snip & Sketch (proper) app. To most users Snip & Sketch is both this app and the actual "modern snipping experience" as I...Read moreSome of the introductory information isn‚Äôt entirely accurate, but it indeed matches with users‚Äô perception of the experience and the proposed problem solution would work in some scenarios (where you control the code of apps that present the data you don‚Äôt want captured).
ScreenSketch.exe is indeed the process and main executable of the Snip & Sketch (proper) app. To most users Snip & Sketch is both this app and the actual ‚Äúmodern snipping experience‚Äù as I like to call it, but as you suggest ‚Äì ShellExperienceHost.exe hosts the actual snipping UI that runs separately from the ScreenSketch.exe process and its main logic lives in ScreenClipping.dll.
If you‚Äôre an admin and want to prevent using specifically modern snipping (which again ‚Äì many users see as the main part of Snip & Sketch) from capturing any app ‚Äì you can use AppLocker to block ScreenClipping.dll.
Now, you may still want to try to block PrtScn, the classic Snipping Tool, snipping from OneNote, PowerPoint, Word, Excel, screen capture from Teams, Skype, the browser etc. (if even possible) and installing other apps that could capture your screen and see the complete block isn‚Äôt possible, but you can still do some work to make it more difficult to take and potentially share screenshots. Raymond‚Äôs solution is the only one that should address all of these and will only fail a physical camera or smartphone test.
One additional problem is ‚Äì I think Raymond‚Äôs solution might also prevent seeing the blocked windows from remoting over Remote Desktop and similar solutions which might be good or bad depending on your security environment.
Read less







GL  May 7, 2020


  0  Collapse this comment
Copy link
Setting window affinity doesn‚Äôt exclude it from remote desktop, and I don‚Äôt think it prevents the window from being taken screenshots of in a remote desktop session. At least that was the case for some early version of Windows 10. I remember accidentally discovering that I could screenshot DRM-protected content in Videos (now known as Movies & TV) in a remote session.




Piotr Si√≥dmak  May 6, 2020


  0  Collapse this comment
Copy link
tsk, tsk, it‚Äôs not like you (Microsoft) never tried to do the same thing: https://support.microsoft.com/en-us/help/2006298/print-screen-functionality-fails-with-no-error-message
üôÇ
I recall there also being a support article explaining how no software nor hardware will prevent the user from taking a photo with their phone or just writing it down on a piece of paper, but I can‚Äôt find it now. It was helpful with a few customers.





Entegy  May 6, 2020


  0  Collapse this comment
Copy link
Where‚Äôs that old article about throwing stones in glass houses? Raymond is not Microsoft, and Outlook is not his product. He knows that when he writes about things that are done incorrectly, there‚Äôs likely a Microsoft product that also does the thing incorrectly.





cheong00  May 6, 2020


  0  Collapse this comment
Copy link
Btw, I would have thought about ‚Äúhow to enable a window with HDCP protection‚Äù



Erik Fjeldstrom  May 6, 2020


  0  Collapse this comment
Copy link
This sounds like another walls and ladders issue, but if this is just to prevent accidental disclosure of information it should be fine. Otherwise, if you can‚Äôt trust your employees not to divulge confidential data I think that you‚Äôve already lost and should think about why you‚Äôre having the problem in the first place.





Mystery Man  May 6, 2020


  0  Collapse this comment
Copy link
That was an informative post, but are you sure about ScreenSketch.exe?
I just used PowerShell and C# to inquire Microsoft.ScreenSketch. Its friendly name is @{Microsoft.ScreenSketch_10.1907.2471.0_x64__8wekyb3d8bbwe?ms-resource://Microsoft.ScreenSketch/Resources/AppStoreName}, which resolves to Snip & Sketch. Its manifest explicitly defines ScreenSketch.exe as the "Exectuable".
Also, the "Product Name" field of ScreenSketch.exe reads "Microsoft Snip & Sketch".
Last but not least, I used Process Explorer to inspect the Snip & Sketch window. Its owning process was ScreenSketch.exe, launched by SvcHost.exe.
Read moreThat was an informative post, but are you sure about ScreenSketch.exe?
I just used PowerShell and C# to inquire Microsoft.ScreenSketch. Its friendly name is @{Microsoft.ScreenSketch_10.1907.2471.0_x64__8wekyb3d8bbwe?ms-resource://Microsoft.ScreenSketch/Resources/AppStoreName}, which resolves to Snip & Sketch. Its manifest explicitly defines ScreenSketch.exe as the ‚ÄúExectuable‚Äù.
Also, the ‚ÄúProduct Name‚Äù field of ScreenSketch.exe reads ‚ÄúMicrosoft Snip & Sketch‚Äù.
Last but not least, I used Process Explorer to inspect the Snip & Sketch window. Its owning process was ScreenSketch.exe, launched by SvcHost.exe.
Read less







Dave Gzorple  May 6, 2020


  0  Collapse this comment
Copy link
>Its friendly name is @{Microsoft.ScreenSketch_10.1907.2471.0_x64__8wekyb3d8bbwe?ms-resource://Microsoft.ScreenSketch/Resources/AppStoreName}
If that‚Äôs it‚Äôs friendly name I‚Äôd hate to see what it‚Äôs bad-hair-day name is‚Ä¶





Wil Wilder Apaza Bustamante  May 6, 2020


  0  Collapse this comment
Copy link
this comment has been deleted.





Mystery Man  May 6, 2020


  0  Collapse this comment
Copy link
Haha! Yes. Microsoft‚Äôs definitions are often quirky like this.
If this trips you, I suggest you don‚Äôt look at Microsoft‚Äôs definition of ‚Äúboot partition‚Äù and ‚Äúsystem partition‚Äù. Or at least, try not to think about which one contains the boot loader.




Dan Bugglin  May 6, 2020


  0  Collapse this comment
Copy link
I can confirm this, I used Process Manager to grab the owner of the Snip and Sketch window and it was ScreenSketch.exe.
Raymond writes these posts way in advance IIRC, likely a previous version of Windows 10 had the windows owned by ShellExperienceHost but now they seem to be owned by individual processes.





Mystery Man  May 6, 2020


  0  Collapse this comment
Copy link
The earliest version of Snip & Sketch that I could find was 10.1809.181023004 from Windows 10 v1809. (You know... the Fall Destroyers Update.) Its package number is 2018.1023.2326.0. Before that, there was no Snip & Sketch. Instead, you had to use Screen Sketch, a feature of Windows Ink Workspace.
The executable file for Screen Sketch was ScreenSketch.exe. Microsoft didn't change the executable file name even after the app spun off into Snip & Sketch.
AFAIK, Snip &...Read moreThe earliest version of Snip & Sketch that I could find was 10.1809.181023004 from Windows 10 v1809. (You know‚Ä¶ the Fall Destroyers Update.) Its package number is 2018.1023.2326.0. Before that, there was no Snip & Sketch. Instead, you had to use Screen Sketch, a feature of Windows Ink Workspace.
The executable file for Screen Sketch was ScreenSketch.exe. Microsoft didn‚Äôt change the executable file name even after the app spun off into Snip & Sketch.
AFAIK, Snip & Sketch has never been, in part or whole, within the ShellExperienceHost.exe.
Read less






Entegy  May 6, 2020


  0  Collapse this comment
Copy link
Likely was at one point? In v1909, asking Ink Workspace to take a full screen screenshot indeed sends it to Snip and Sketch. Ink Workspace used to be a lot more integrated, but was likely changed into just calling its respective apps to avoid feature duplication. At the time of this story, it was likely the old Ink Workspace that was in place.