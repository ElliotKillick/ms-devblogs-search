紅樓鍮  July 17, 2024


  1  Collapse this comment
Copy link
Since std::atomic<std::shared_ptr<T>> exists, would it make sense to also have atomic versions of C++/WinRT projection types and winrt::com_ptr<T>?





Me Gusta  July 18, 2024
· Edited

  0  Collapse this comment
Copy link
There is no need.
The C++/WinRT com_ptr and projection types don’t contain a reference count and the standard C++/WinRT object implementation is already atomic. The definition of the reference count in root_implements is:
std::atomic<std::conditional_t<is_weak_ref_source::value, uintptr_t, uint32_t>> m_references{ 1 };