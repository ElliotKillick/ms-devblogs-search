Siavash Mortazavi  July 30, 2023


  0  Collapse this comment
Copy link
Thanks for the blog! üëç This mindset is remarkably close to test-driven development‚Äôs red-green-refactor.





Ivan Kljajic  July 26, 2023


  1  Collapse this comment
Copy link
The first time I saw `‚Äìdry-run` as a possible argument to a command both impressed me and also made me scared to try it.





Arda Cetinkaya  July 25, 2023


  0  Collapse this comment
Copy link
Providing some scaffolds or templates for initial step of the development helped me for this approach. Like SDKs, having some application development kits(ADK) in a team helps new developers to do required business more easily.
And I think within serverless application models or event-driven architectures, this is more legit to do ‚Äúa thing that does nothing‚Äù first.





Dmitry  July 25, 2023


  0  Collapse this comment
Copy link
As for writing code in large unbiteable pieces, I‚Äôd blame the popularity of (a) languages and tools that ‚Äúteach‚Äù newbies that slow half-an-hour compilation is something normal and (b) stuff like IntelliSense that pretends to find errors faster but is really good in finding non-existing errors and convincing newbies to trust it without even trying to really compile.
From my experience with students.





Clockwork-Muse  July 25, 2023


  1  Collapse this comment
Copy link
This sort of philosophy is also the reason why things like Test Driven Development mandates writing (and running) failing tests first.  Because it helps you make sure you don‚Äôt have a test that actually fails.





Simon Geard  July 26, 2023


  1  Collapse this comment
Copy link
Absolutely. That‚Äôs long been my standard approach to such things‚Ä¶ it might not even be a test, strictly speaking, but a unit testing framework is a good starting point for adding some experimental code and some assertions, expanding it to cover more cases, etc. And once it looks good, you can extract the real code from the test, and you‚Äôve got a nice little well-tested module to start using.




Adam Rosenfield  July 25, 2023


  1  Collapse this comment
Copy link
A common pattern I‚Äôve seen is that a junior developer asks for help trying to debug why their code changes aren‚Äôt working.  They spent a lot of time trying to alter their code, but in reality they haven‚Äôt even done a basic sanity check to test if their code isn‚Äôt running in the first place.  Then it becomes an exercise in figuring out why the code isn‚Äôt getting executed (the equivalent of Raymond‚Äôs `Invoke` method).