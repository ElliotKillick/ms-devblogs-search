SpecLad  December 7, 2021


  0  Collapse this comment
Copy link
Seems like this won’t work correctly if CONTOSO_VERSION has an equivalent, but not equal, definition. For example, “#define CONTOSO_VERSION (300 + 14)”. The assert will pass, but the redefinition warning will still trigger.





Raymond Chen Author
December 7, 2021


  0  Collapse this comment
Copy link
I’m assuming that the Contoso library itself defines its version, so you can just copy the definition from the version you want to be locked to.




Mystery Man  December 6, 2021


  0  Collapse this comment
Copy link
Couldn’t we just replace the phrase “This header file” with something more descriptive?





Raymond Chen Author
December 6, 2021


  0  Collapse this comment
Copy link
Sure! But I didn’t want to try to make up yet another fake name.





Mystery Man  December 7, 2021
· Edited

  0  Collapse this comment
Copy link
I mean, instead of doing the reassignment trick, couldn’t we just replace the phrase “This header file” with something more descriptive that helps us find the culprit? Wouldn’t the following do the trick?
error: static assertion failed: v314/Fabrikam.h requires Contoso.h version 314.
  2 | static_assert(CONTOSO_VERSION == 314,





Raymond Chen Author
December 7, 2021


  0  Collapse this comment
Copy link
The problem is that it doesn’t tell you (1) what CONTOSO_VERSION is erroneously set to, or (2) who set it to the wrong value.





Mystery Man  December 8, 2021


  0  Collapse this comment
Copy link
I see. Thanks for the clarification.
I suppose it is similar to what we experience in PowerShell, except it is the opposite. When it comes to PowerShell modules, we always have enough diagnostic information.