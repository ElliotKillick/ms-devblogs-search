Sigge Mannen  December 18, 2023
· Edited

  0  Collapse this comment
Copy link
Sorry if i’m confused, but the way article reads, i would expect the code to be:
if (!RegisterClass(&wc)) {
    backgroundBrush.release();
}
I’m not c++ nor wil expert but wouldn’t backgroundBrush get released when it goes out of scope anyway





Ray Koopa  December 20, 2023


  0  Collapse this comment
Copy link
As Raymond said: He’s releasing ownership of the brush in the smart pointer that would otherwise destroy the brush at the end of the scope. release() is not an OOP method of the brush itself, but of the smart pointer.
Definitely confusing if you haven’t seen C++’s smart pointers.





Raymond Chen Author
December 18, 2023


  0  Collapse this comment
Copy link
For std::unique_ptr, the release() method releases control of the object without destroying it. Which is what we want: The system has taken control of the object, so we release control to avoid the double-destruction.