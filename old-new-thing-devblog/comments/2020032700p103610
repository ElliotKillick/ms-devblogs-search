James Sutherland  March 30, 2020


  0  Collapse this comment
Copy link
Deep inside Windows, there are (or at least were at some time) some wait operations which are intended never to complete - after the Session Manager (SMSS.exe) creates the first CSRSS.exe instance, it waits for that instance to exit, which should never happen since it's a critical process. (As I recall, if it does complete, it triggered a BSOD/BugCheck, but the 'critical process' flag has the same effect too: I'd guess this is because that...Read moreDeep inside Windows, there are (or at least were at some time) some wait operations which are intended never to complete – after the Session Manager (SMSS.exe) creates the first CSRSS.exe instance, it waits for that instance to exit, which should never happen since it’s a critical process. (As I recall, if it does complete, it triggered a BSOD/BugCheck, but the ‘critical process’ flag has the same effect too: I’d guess this is because that predated the addition of critical process flags?)
Read less







Stephen Hewitt  March 27, 2020


  0  Collapse this comment
Copy link
Not particularly informative, I had naturally assumed if that if the world ends all bets are off:)





Adam Rosenfield  March 27, 2020


  0  Collapse this comment
Copy link
This question is like asking if there’s a solution to the Halting Problem.





Alex Martin  March 27, 2020


  0  Collapse this comment
Copy link
This question is literally asking for a solution to the Halting Problem, just wrapped in async to distract from the real issue.




Dmitry Vozzhaev  March 27, 2020


  0  Collapse this comment
Copy link
What if something extraordinary happens, like a network driver has crashed while I was downloading a file. Is some outcome of the operation guaranteed, or it’s completion is a best effort and in unlucky circumstances operation might stuck indefinitely without anything material left to wait for?





Raymond Chen Author
March 27, 2020


  0  Collapse this comment
Copy link
If a network driver initiates a read request and never completes it, then that’s going to make all the higher layers wait indefinitely for the result of the I/O operation. I would argue that that’s a bug in the network driver. There’s nothing particularly special about asynchronous operations here. A synchronous ReadFile would suffer the same fate.





Piotr Siódmak  March 27, 2020


  0  Collapse this comment
Copy link
With network stuff, never completing is a given - you should assume it might happen, since it involves parts that are out of your and your system's control. An HD Driver fails to respond? The operating system knows the driver it controls is supposed to respond and has a watchdog keeping it in check (there's a bluescreen if the system drive doesn't respond for 2 minutes I think). With network it's up to you to...Read moreWith network stuff, never completing is a given – you should assume it might happen, since it involves parts that are out of your and your system’s control. An HD Driver fails to respond? The operating system knows the driver it controls is supposed to respond and has a watchdog keeping it in check (there’s a bluescreen if the system drive doesn’t respond for 2 minutes I think). With network it’s up to you to specify a timeout policy. Maybe you’re listening on a UDP port to see who will report within the next 5 minutes, or maybe you’re waiting for an HTTP response and should give up after 2 minutes.
The point is that with the file system, the OS can help you since it encapsulates that. At least it should by calling the callback with some parameter specifying cancellation due to timeout (whether the specific implementation actually does that is a different story). With network protocols (above TCP or UDP) you’re on your own, because noone other than you knows anything about it.
Read less







Raymond Chen Author
March 27, 2020


  0  Collapse this comment
Copy link
Presumably a read from a network socket will at least complete when the socket connection is lost. That’s all the network stack’s problem. If the network stack says “A call to read from a socket may never complete, ever” well, that’s their decision.