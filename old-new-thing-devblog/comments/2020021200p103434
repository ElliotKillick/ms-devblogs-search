紅樓鍮  February 13, 2020


  0  Collapse this comment
Copy link
Fortunate that we have HTTP/2 and even /3 today, or else who knows how many HTTP connections would it take to complete one Express Update.





Em X  February 19, 2020


  0  Collapse this comment
Copy link
HTTP/1.1 pipelining worked fine with a single connection through the whole sequence. It never gained traction for web browsing because 95% support still meant 5% of everything you do will break (although it was amazing when I was on dial-up), but the update services are a much more constrained ecosystem.





Raymond Chen Author
February 19, 2020


  0  Collapse this comment
Copy link
The client and server may be constrained, but the intermediate proxy is not, and according to Wikipedia, most proxies don’t support pipelining.



Yuri Khan  February 12, 2020


  0  Collapse this comment
Copy link
Why does the protocol use ranges for carving a patch out of an Express update? That is, what advantage does this provide against storing each patch as a separate URL named something like explorer.exe/from/{old-hash}? (The server would still need to tell the client a list of {old-hash}es for which it has patches.)
(Alternatively, I think the standard-compliant way would be to use delta encoding as specified by RFC 3229, but I don’t know of any actual...Read moreWhy does the protocol use ranges for carving a patch out of an Express update? That is, what advantage does this provide against storing each patch as a separate URL named something like explorer.exe/from/{old-hash}? (The server would still need to tell the client a list of {old-hash}es for which it has patches.)
(Alternatively, I think the standard-compliant way would be to use delta encoding as specified by RFC 3229, but I don’t know of any actual web servers implementing that.)
Read less







Raymond Chen Author
February 12, 2020


  0  Collapse this comment
Copy link
I assume it’s to make it easier to host the patches on a web server. You just drop one file on the server and you’re done. Your way requires either dropping thousands of little files on the server in a carefully-architected directory structure, or doing file virtualization where each such request turns into (ta da) a range request.




qbprog  February 12, 2020


  0  Collapse this comment
Copy link
Why it is the client which sends the list of files to the server and not the opposite?Could not the client calculate the changed files by itself?
Another curiosity : why the disk drive cleaning->windows update takes so long on win10 systems?
Nice articles indeed!





Raymond Chen Author
February 12, 2020


  0  Collapse this comment
Copy link
If the server sent, say, "The current hash of F is H5", and the client realized, "Oh, I have the wrong F. Server, please send me the new F," then you'd have basically a  Delta Update. Since the server doesn't know what version of F is on the client, it can't send a patch. I guess the client could say, "Server, please send me the patch to get from H3 to H5, if you...Read moreIf the server sent, say, “The current hash of F is H5”, and the client realized, “Oh, I have the wrong F. Server, please send me the new F,” then you’d have basically a  Delta Update. Since the server doesn’t know what version of F is on the client, it can’t send a patch. I guess the client could say, “Server, please send me the patch to get from H3 to H5, if you have one.” And then the server says, “Yes, I do. Please do a ranged read from X9 to X42.” That’s a lot of chatter between the client and the server. As opposed to the server saying, “The current hash of F is H5. If you have H1, then do a ranged read from X3 to X5; if you have H2, then do a ranged read from X50 to X72, (etc).” Now the server sends one block of data down, and the next thing that happens is the client starts reading patches. (Second question is on my list.)
Read less






Joshua Hudson  February 12, 2020


  0  Collapse this comment
Copy link
If you’re going to hexedit a Windows file, break the link by deleting (or renaming) the file first, so the copy in WinSxS doesn’t get edited. This avoids confusing the servicing stack, and allows it to just overwrite your changes.