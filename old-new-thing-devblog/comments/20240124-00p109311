GL  January 25, 2024


  0  Collapse this comment
Copy link
It’s very similar to the recent series of blog articles that COM objects should refrain from handing out its references during construction. The same rule applies to destruction. Multiple ideas about this topic: (1) .NET users explicitly release the RCW using Marshal; (2) COM implementers track resurrection (see comment to https://devblogs.microsoft.com/oldnewthing/20230928-53/?p=108833 ); (3) COM implementers do not fire the event during destruction (cf. Dispose(bool) pattern).





Kalle Niemitalo  January 25, 2024


  0  Collapse this comment
Copy link
Why should the IMemoryBufferReference.Closed event be raised when the final reference is released?  The documentation says this event occurs “when MemoryBuffer.Close has been called”, which seems to mean it should be triggered only by the IClosable.Close implementation in IMemoryBuffer; not the one in IMemoryBufferReference, nor by any IUnknown.Release.