Alexis Ryan  January 2, 2022
· Edited

  0  Collapse this comment
Copy link
I made a big mistake in a game engine once trying to do pixel blending on the cpu with the frame buffer in vram. Writing was nice and fast but reading the pixels back to blend them was so incredibly slow. Switching to a frame buffer in  ram instead of vram lead to expected fast results. had originally used a buffer in ram but switched to vram as it made normal rendering slightly faster.





B Eden  January 2, 2022


  0  Collapse this comment
Copy link
I did exactly the same with DirectDraw many moons ago…




switchdesktopwithfade@hotmail.com  December 24, 2021


  0  Collapse this comment
Copy link
The hardest thing I ever deal with is the fact that DirectX surfaces disappear out of nowhere rather than be swapped or paged out. Poof! That buffer you painstakingly built up is just GONE. It takes all the fun out of graphics programming to have to manage that.
The second hardest thing I deal with is that "open source" has become a sloppy industry euphemism for "documentation". Nobody is reading or writing good books anymore so...Read moreThe hardest thing I ever deal with is the fact that DirectX surfaces disappear out of nowhere rather than be swapped or paged out. Poof! That buffer you painstakingly built up is just GONE. It takes all the fun out of graphics programming to have to manage that.
The second hardest thing I deal with is that “open source” has become a sloppy industry euphemism for “documentation”. Nobody is reading or writing good books anymore so the deep domain knowledge is lost. Increasingly incompetent people who are dispassionate about patterns and are averse to reading source code are the ones reinventing the wheel again and again. Example: the Swift language, the Windows 11 shell, etc.
Read less







Péter Major  December 23, 2021


  0  Collapse this comment
Copy link
In my experience DesktopDuplication and GraphicsCapture APIs especially are a lot faster. I use these APIs to drive my LED backlight app (see the video on GitHub). Graphics Capture is basically zero overhead, a lot better than Desktop Duplication, especially for games at 4K at 60Hz or above.
Read moreIn my experience DesktopDuplication and GraphicsCapture APIs especially are a lot faster. I use these APIs to drive my LED backlight app (see the video on GitHub). Graphics Capture is basically zero overhead, a lot better than Desktop Duplication, especially for games at 4K at 60Hz or above.
Read less







Adam Walling  December 29, 2021


  0  Collapse this comment
Copy link
GraphicsCapture sounds interesting. I’ve had trouble with the desktop duplication API working consistently.