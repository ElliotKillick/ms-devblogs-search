John Elliott  July 24, 2024


  0  Collapse this comment
Copy link
+3DOS on the Spectrum +3 has two different parameters to its file open call: one for what to do if the file doesn’t exist { fail / create new file } and one if it does { fail / open file / truncate file / rename existing file to .BAK and create new file }





Kevin Norris  July 22, 2024


  1  Collapse this comment
Copy link
Unix equivalent:
CREATE_NEW is O_CREAT | O_EXCL.
OPEN_EXISTING is the default (no flags required, except as noted below).
OPEN_ALWAYS is O_CREAT
TRUNCATE_EXISTING is O_TRUNC
CREATE_ALWAYS is O_CREAT | O_TRUNC
FAIL_ALWAYS does not exist, but on systems where O_EXEC != O_SEARCH, it can be emulated with O_DIRECTORY | O_EXEC (it's not legal to execute a directory). Note that O_TRUNC | O_RDONLY is not a standards-compliant emulation, because the standard says that's UB.
These must be combined with exactly...Read moreUnix equivalent:
CREATE_NEW is O_CREAT | O_EXCL.
OPEN_EXISTING is the default (no flags required, except as noted below).
OPEN_ALWAYS is O_CREAT
TRUNCATE_EXISTING is O_TRUNC
CREATE_ALWAYS is O_CREAT | O_TRUNC
FAIL_ALWAYS does not exist, but on systems where O_EXEC != O_SEARCH, it can be emulated with O_DIRECTORY | O_EXEC (it’s not legal to execute a directory). Note that O_TRUNC | O_RDONLY is not a standards-compliant emulation, because the standard says that’s UB.
These must be combined with exactly one of O_RDONLY, O_WRONLY, O_RDWR, O_EXEC, and O_SEARCH (to indicate read/write mode). O_TRUNC cannot be combined with O_RDONLY (you cannot truncate a file unless it is opened for write). Other flags also exist. The behavior of O_EXCL is explicitly specified to be atomic with respect to other open calls with those flags (i.e. if several processes or threads simultaneously call open on a given path with O_CREAT | O_EXCL, POSIX requires that at most one of those calls may succeed). POSIX also specifies that O_CREAT | O_EXCL should fail if the file exists and is a symlink, regardless of whether the link is dangling (all the other flags will follow symlinks, unless you OR them with O_NOFOLLOW).
Read less







Jan Ringoš  July 23, 2024


  1  Collapse this comment
Copy link
I like Windows variation more. It’s way more readable.




Yuri Khan  July 22, 2024


  0  Collapse this comment
Copy link
It would stand to reason if those values were organized as two bit fields, like one bit for the disposition for the “does not exist” case and two for “exists”, but no. They are defined as 1..5 in somewhat arbitrary order.
“Hey, wait, I found a hole in the API that might plug that other hole. Let’s define FAIL_ALWAYS as 0!”
But that would probably fail with the wrong reason, setting last error not to ERROR_OPEN_FAILED but...Read moreIt would stand to reason if those values were organized as two bit fields, like one bit for the disposition for the “does not exist” case and two for “exists”, but no. They are defined as 1..5 in somewhat arbitrary order.
“Hey, wait, I found a hole in the API that might plug that other hole. Let’s define FAIL_ALWAYS as 0!”
But that would probably fail with the wrong reason, setting last error not to ERROR_OPEN_FAILED but some other value, possibly ERROR_INVALID_PARAMETER.
Read less







Kalle Niemitalo  July 24, 2024


  0  Collapse this comment
Copy link
The MS-DOS Extended Open/Create function INT 21h AX=6C00h does take those as two bit fields.  Is that older or newer than CreateFile?





Kalle Niemitalo  July 25, 2024


  0  Collapse this comment
Copy link
MS OS/2 apparently has DosOpen and DosOpen2; in both of them, the bit fields of the OpenFlag parameter are identical to what Extended Open/Create takes in MS-DOS 4.





Me Gusta  July 24, 2024


  0  Collapse this comment
Copy link
Almost certainly older than CreateFile, but it depends on whether CreateFile was part of the OS/2 API.




Joshua Hudson  July 22, 2024


  0  Collapse this comment
Copy link
Hey I actually had that phantom sixth disposition come up once. I worked around it by calling CreateFile immediately followed by CloseHandle.
Your simulation doesn’t work. I needed to know wither it’s ERROR_FILE_EXISTS, ERROR_ALREADY_EXISTS (there’s a directory by that name…), ERROR_FILE_NOT_FOUND or ERROR_PATH_NOT_FOUND.





Me Gusta  July 22, 2024


  3  Collapse this comment
Copy link
FindFirstFile should handle all of those.