Ben Voigt  May 7, 2019


  0  Collapse this comment
Copy link
Two successive days you've claimed that "proper" calling code receiving a System.Tasks.Task (or local equivalent) cannot know anything about the demarcation between synchronous and asynchronous stages of the call.  But I disagree.  If you were, for example, to store a Task into a collection and retrieve it later, the retrieval, although it certainly does return a Task object, is completely and reliably synchronous just as a retrieval operation from a collection containing primitives.
Is there any...Read moreTwo successive days you’ve claimed that “proper” calling code receiving a System.Tasks.Task (or local equivalent) cannot know anything about the demarcation between synchronous and asynchronous stages of the call.  But I disagree.  If you were, for example, to store a Task into a collection and retrieve it later, the retrieval, although it certainly does return a Task object, is completely and reliably synchronous just as a retrieval operation from a collection containing primitives.
Is there any documentation describing the rules for when the whole call must be assumed to be asynchronous?
Read less







Raymond Chen Author
May 7, 2019


  0  Collapse this comment
Copy link
Sure, you can synchronously retrieve the Task from a collection in which you saved it. But we’re not talking about the reference to the Task. We’re talking about the code that running inside the Task. All you know is whether the code has produced a result. You don’t know how much progress it has made toward starting.




Ihor Nechyporuk  May 3, 2019


  0  Collapse this comment
Copy link
But won’t ArgumentException be wrapped in AggregateException if it’s thrown at await Task.WhenAll(task1, task2)?
So basically catch block won’t help.





Raymond Chen Author
May 3, 2019


  0  Collapse this comment
Copy link
Oh, yeah, you’ll have to tweak the exception handling, too.




Henrik Andersson  May 3, 2019


  0  Collapse this comment
Copy link
Of course, in non toy programs, you shouldn’t be catching ArgumentException. That exception is only for when you’ve made a mistake and not a normal exception.





cheong00  May 5, 2019


  0  Collapse this comment
Copy link
Unless you’re on web, or feeding parameters from non-typed configuration file (say, .INI)