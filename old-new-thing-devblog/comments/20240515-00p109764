Jonathan Potter  May 22, 2024


  0  Collapse this comment
Copy link
Whoever designed AQS never thought about making it support “true” and “false” natively?





Henrik Arlinghaus  May 17, 2024


  0  Collapse this comment
Copy link
I assume you are limited to a single GUID clause? Otherwise, if GUID := {X} AND GUID := {Y} should also work.





Neil Rashbrook  May 16, 2024


  0  Collapse this comment
Copy link
Can UUIDs be validated? Are you allowed to search for the Nil UUID {00000000-0000-0000-0000-000000000000}? Or something that looks enough like a UUID but can’t actually be generated in practice?





Yuri Khan  May 15, 2024


  0  Collapse this comment
Copy link
Surely that uuid should have been generated from the MAC address of that same network card that defined the DirectX capability that no sane driver would claim to support?
(The one you cite is a UUID4 (random) though.)





alan robinson  May 16, 2024


  0  Collapse this comment
Copy link
Nice callback! But isn’t the point of the UUID that it’s astronomically unlikely to get a collision even though each one is randomly generated? Rendering the long-obsolete network card in question destroyed before it’s time…




Ian Boyd  May 15, 2024


  0  Collapse this comment
Copy link
When i ask ISearchQueryHelper to "GenerateSQLFromUserQuery" using:
<code>
It generates the SQL query containing the `System.Devices.InterfaceClassGuid`:
<code>
Except the column System.Devices.InterfaceClassGuid is not found in the SystemIndex.
I even set the query syntax mode to "advanced":
<code>
So i'm obviously conceptually missing something. Is this field not something that is can be found in the Windows Search catalog? Is this for querying some other area of the system?
Read moreWhen i ask ISearchQueryHelper to “GenerateSQLFromUserQuery” using:
searchQueryHelper.GenerateSQLFromUserQuery('System.Devices.InterfaceClassGuid:="{DEEBE6AD-9E01-47E2-A3B2-A66AA2C036C9}"');
It generates the SQL query containing the `System.Devices.InterfaceClassGuid`:
SELECT TOP 10000 "System.ItemName",
"System.ItemNameDisplay",
"System.ItemType",
...snip...
FROM "SystemIndex"
WHERE System.Devices.InterfaceClassGuid = '{DEEBE6AD-9E01-47E2-A3B2-A66AA2C036C9}'
Except the column System.Devices.InterfaceClassGuid is not found in the SystemIndex.
I even set the query syntax mode to “advanced”:
sqh.Set_QuerySyntax(SEARCH_ADVANCED_QUERY_SYNTAX);
So i’m obviously conceptually missing something. Is this field not something that is can be found in the Windows Search catalog? Is this for querying some other area of the system?
Read less







Raymond Chen Author
May 15, 2024


  0  Collapse this comment
Copy link
This isn’t a search indexer query. It’s a plug and play device query.





Ian Boyd  May 18, 2024


  0  Collapse this comment
Copy link
That’s an interesting function design pattern. I might have to steal that.
It’s nice that an API would write all the plumbing to do an
ILeafCompare
 on all the fields in all the objects in its memory.



Matthew van Eerde (^_^)  May 15, 2024


  0  Collapse this comment
Copy link
I wonder if which properties are indexed? E.g. if there was an index on the InterfaceClassGuid property, searching for a non-existent property would require only an index lookup rather than a full table scan