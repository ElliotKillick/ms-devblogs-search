Neil Rashbrook  October 28, 2020


  0  Collapse this comment
Copy link
Ah yes, the good old days, when memory was so tight that you preferred to import functions by ordinal instead of name. I think you could probably go one better than  by using  instead. Or you could always manually import it in your  file; I've done that before when I was using an old version of MSVC for Windows 3.0 but I wanted to import Windows 3.1 functions.
Read moreAh yes, the good old days, when memory was so tight that you preferred to import functions by ordinal instead of name. I think you could probably go one better than GetProcAddress(GetModuleHandle("KERNEL"), "28") by using MAKEINTRESOURCE(28) instead. Or you could always manually import it in your .DEF file; I’ve done that before when I was using an old version of MSVC for Windows 3.0 but I wanted to import Windows 3.1 functions.
Read less







Ivan K  October 28, 2020


  0  Collapse this comment
Copy link
Sorry for nitpicking or completely missing a joke, but makintresource(28) would do a <code>, without the _PTR in the olden days #define I guess.
I think it was pointed out here before somewhere that the first 64k of memory was reserved so that's how a number instead of a string pointer into memory could be detected.
I'm guessing this is safer and quicker than parsing the string for total value between "min" and "max" (and...Read moreSorry for nitpicking or completely missing a joke, but makintresource(28) would do a
((LPSTR)((ULONG_PTR)((WORD)(28)))
, without the _PTR in the olden days #define I guess.
I think it was pointed out here before somewhere that the first 64k of memory was reserved so that’s how a number instead of a string pointer into memory could be detected.
I’m guessing this is safer and quicker than parsing the string for total value between “min” and “max” (and restrict to decimal digits to avoid identifier confusion).
Read less






cheong00  October 27, 2020


  0  Collapse this comment
Copy link
On the other hand it will sound more realistic if the tale is "I also heard that the BurgerMaster was identified by an ordinal value, and that ordinal value was the last 4 digits of telephone number of the restaurant."
It's very common for big companies to allocate a block of continuous phone numbers for their PBX phones. It's quite doable to just allocate a block of numbers and assign forwarding to restaurants according to the...Read moreOn the other hand it will sound more realistic if the tale is “I also heard that the BurgerMaster was identified by an ordinal value, and that ordinal value was the last 4 digits of telephone number of the restaurant.”
It’s very common for big companies to allocate a block of continuous phone numbers for their PBX phones. It’s quite doable to just allocate a block of numbers and assign forwarding to restaurants according to the internal ordinal number of it.”
Read less







Peter Cooper Jr.  October 27, 2020


  0  Collapse this comment
Copy link
Is there any chance that "28" was the company-wide speeddial number that Burgermaster was assigned to? (Like you'd hit "speeddial-2-8" or the like, depending on how the phone system did speeddials?) Or maybe it was just the last two digits of the full phone number (by coincidence or not)?
I'm in my 30's and I remember as a child only needing to dial 4 digits when calling within the same exchange, so it is possible that...Read moreIs there any chance that “28” was the company-wide speeddial number that Burgermaster was assigned to? (Like you’d hit “speeddial-2-8” or the like, depending on how the phone system did speeddials?) Or maybe it was just the last two digits of the full phone number (by coincidence or not)?
I’m in my 30’s and I remember as a child only needing to dial 4 digits when calling within the same exchange, so it is possible that a phone number would fit within 16 bits, even if it was a phone number only usable within Microsoft’s geographic area. I don’t know the exact timing of that, though, and I don’t live near Washington so things may have been different there.
Read less