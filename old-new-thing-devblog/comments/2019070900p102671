Keith Patrick  July 9, 2019


  0  Collapse this comment
Copy link
I remember after trying to go back to (Managed) C++ after years of Java and C#, and I did not make it very far.  I found a lot of the syntax cluttered and nearly unreadable (scopes, I'm looking at::you), which was made worse by the Managed part.  I could have adjusted to all of that, but where I gave up was missing operators like 'is/as' and all the reflection stuff.  It makes me wonder how...Read moreI remember after trying to go back to (Managed) C++ after years of Java and C#, and I did not make it very far.  I found a lot of the syntax cluttered and nearly unreadable (scopes, I’m looking at::you), which was made worse by the Managed part.  I could have adjusted to all of that, but where I gave up was missing operators like ‘is/as’ and all the reflection stuff.  It makes me wonder how I got around that when I was doing C++ full-time.
Read less







Me Gusta  July 9, 2019


  0  Collapse this comment
Copy link
As someone who is still doing C++ full time, it makes me wonder why you think you need is/as.
If you really need the dynamic type then you can easily reproduce these operators using typeid or dynamic_cast, but these operators are slow. This results in C++ code not using unknown objects anywhere near as much so there is no need for is/as or reflection.
You seemingly have gotten into the C# mindset for programming, and...Read moreAs someone who is still doing C++ full time, it makes me wonder why you think you need is/as.
If you really need the dynamic type then you can easily reproduce these operators using typeid or dynamic_cast, but these operators are slow. This results in C++ code not using unknown objects anywhere near as much so there is no need for is/as or reflection.
You seemingly have gotten into the C# mindset for programming, and this isn’t the same as the C++ mindset for programming.
Read less







Keith Patrick  July 10, 2019


  0  Collapse this comment
Copy link
Yep, your analysis is spot-on.  I don’t even know how long it would take me to return to the C++ mindset (I really miss const parameters and the option to use stack-allocated memory)…I ponder it every now and then when I get emails about C++ jobs.  It is crazy how utterly dependent on type information I’ve become once I got my hands on it.



Andrew Keeton  July 9, 2019


  0  Collapse this comment
Copy link
C++, you crazy.