Jacob Manaker  July 9, 2024


  0  Collapse this comment
Copy link
Perhaps the following?

winrt::Windows::Foundation::IAsyncOperation<int> ComputeAsync(void) noexcept
{
    co_await std::suspend_never{};
    throw winrt::hresult_access_denied();
}






LB  July 9, 2024


  0  Collapse this comment
Copy link
I’m not sure how IAsyncOperation’s promise type handles the situation where dynamic allocation of the coroutine frame fails, that usually results in throwing std::bad_alloc, so you can’t mark the function as noexcept in that case. If it has some non-throwing way of handling that case though then I suppose the noexcept is fine. It’s a shame there’s no way for a promise type to detect whether the function signature contains noexcept or not.