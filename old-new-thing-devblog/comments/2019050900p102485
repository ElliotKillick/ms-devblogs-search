Alex Thiessen  May 11, 2019


  0  Collapse this comment
Copy link
I’d do like (untested):
checkout master
reset –hard master^
merge feature
checkout master@{1} . # resolves all conflicts
add . # mark resolved
merge –continue
This probably leads to more build activity and SSD wear than your version, yet many devs don’t care.





Simon Clarkstone  May 9, 2019


  0  Collapse this comment
Copy link
This week has made me more aware of ways I could be using Git that I'm not. I learnt early on in my usage of Git that once you start thinking about a Git repo as a directed graph it becomes obvious how you need to re-arrange the graph and you only need to learn which commands exist to do each step (like the from this week).Tangent: It took me a while, but I finally...Read moreThis week has made me more aware of ways I could be using Git that I’m not. I learnt early on in my usage of Git that once you start thinking about a Git repo as a directed graph it becomes obvious how you need to re-arrange the graph and you only need to learn which commands exist to do each step (like the from this week).Tangent: It took me a while, but I finally realised (possibly) why Raymond is so concerned about the amount of churn in the working copy (apart from these being neat Git tricks and exercises in minimalism). For readers who don’t know: a large part of Windows is kept in one 300GB Git repository and MS created a special filesystem to allow a partial clone and partial working copy to appear to be a full clone and working copy.
Read less







Raymond Chen Author
May 9, 2019


  0  Collapse this comment
Copy link
I use these tricks in the UWP samples repo far more than I do in the Windows OS repo. Churning the working directory forces everything to rebuild, which makes it very disruptive to work in progress.





Simon Clarkstone  May 9, 2019


  0  Collapse this comment
Copy link
Ah yes, I forgot you mentioned in posts 1 and 2 that this was for the UWP samples repo.I just looked at the number of projects in there and I didn’t realise it was quite that huge, so I see why you wouldn’t want all that lot to rebuild.



Mantas M.  May 9, 2019


  0  Collapse this comment
Copy link
This situation came up in #git yesterday, and I would have used a different approach:
git replace –graft HEAD HEAD^ F2 && git commit –amend -C HEAD
(The second command was originally “git filter-branch HEAD^!”, which is less ugly, but if you want the commit to be signed, you’d have to follow that up with –amend anyway…)