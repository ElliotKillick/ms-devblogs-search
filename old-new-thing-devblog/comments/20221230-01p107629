Dwayne Robinson  January 4, 2023
· Edited

  0  Collapse this comment
Copy link
Yeah, if there was anything in C++ that I was allowed to revert (besides switch fallthrough by default), it would be the non-uniform initialization introduced by C++11. Well, I'd either revert it, or require that any a class's constructors consist of either:
(a) only an std::initializer_list (and no other constructors, besides copy/move)
(b) accept any constructor, but do not prioritize std::initializer_list. One must explicitly pass the inner braces for the initializer list and the outer...Read moreYeah, if there was anything in C++ that I was allowed to revert (besides switch fallthrough by default), it would be the non-uniform initialization introduced by C++11. Well, I’d either revert it, or require that any a class’s constructors consist of either:
(a) only an std::initializer_list (and no other constructors, besides copy/move)
(b) accept any constructor, but do not prioritize std::initializer_list. One must explicitly pass the inner braces for the initializer list and the outer braces for the constructor call, with no implicit flattening of the two braces: std::vector v = {{1,2}};.
Read less