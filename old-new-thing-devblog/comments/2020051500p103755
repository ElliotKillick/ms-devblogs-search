Kalle Niemitalo  May 18, 2020


  0  Collapse this comment
Copy link
Alternatively, use a non-deduced context like in: <code>
That changes the Visual C++ error messages so that the primary location of the type mismatch is at the call site and not at a static_cast within set_handler. And it makes the template argument easier to specify in calls if desired.
A const_cast is missing.
Read moreAlternatively, use a non-deduced context like in:
template<typename T>
void set_handler(std::type_identity_t<handler_t<T>> handler, T* context)
That changes the Visual C++ error messages so that the primary location of the type mismatch is at the call site and not at a static_cast within set_handler. And it makes the template argument easier to specify in calls if desired.
A const_cast is missing.
Read less







snarfblam  May 16, 2020


  0  Collapse this comment
Copy link
Looks like you’ve got a missing semicolon in a “<" entity: m_handler = reinterpret_cast<handler_t&lt>>(handler);