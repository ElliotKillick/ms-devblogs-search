紅樓鍮  March 14, 2022


  0  Collapse this comment
Copy link
Also, does the “currently read-only, but convert to copy-on-write if they become writable” state have a separate marker at all?  Since committed pages are refcounted, I think that state is equivalent to “readonly AND (refcount ≥ 2)”.





Raymond Chen Author
March 15, 2022


  0  Collapse this comment
Copy link
There’s also “currently read-only, but convert to shared read-write if they become writable.” You get this (for example) when you do MapViewOfFile with FILE_MAP_READ of a view created as PAGE_READWRITE.




紅樓鍮  March 14, 2022


  0  Collapse this comment
Copy link
Looks like this is also gonna (depending on the memory access patterns of original process) make the original process run a lot slower, because of all those page faults it’s going to trigger when it writes to memory.





Raymond Chen Author
March 15, 2022


  0  Collapse this comment
Copy link
It’s one soft fault on first write to each page. Soft faults are relatively quick to service, and you pay only on first write.




Gunnar Dalsnes  March 14, 2022


  0  Collapse this comment
Copy link
Why add a speed limit on reading RAM, the fastest component in the system?
“marked with a low-priority memory configuration”
Seems to be a “lie” if no prioritazion is done, only throtteling?





Raymond Chen Author
March 14, 2022


  0  Collapse this comment
Copy link
A process’s memory is rarely completely loaded into RAM. Most of it resides on disk, either as demand-paged content or in the swap file. The low priority configuration means that the page-in operations are given low priority so that you don’t starve out other I/O when reading the memory of the process.