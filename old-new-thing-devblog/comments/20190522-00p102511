Christian Wulff  May 22, 2019


  0  Collapse this comment
Copy link
Do you mean that Circular and DeviceWatcher will never be cleaned up, even when there are no external references to it? I always thought that the GC would look at the root objects of the application and clean up every object which can not be referenced by a root object or a local variable (at least in the classic .net framework). That way it should be able to remove circular references which can't be referenced...Read moreDo you mean that Circular and DeviceWatcher will never be cleaned up, even when there are no external references to it? I always thought that the GC would look at the root objects of the application and clean up every object which can not be referenced by a root object or a local variable (at least in the classic .net framework). That way it should be able to remove circular references which can’t be referenced by “alive” objects.
Read less







Raymond Chen Author
May 22, 2019


  0  Collapse this comment
Copy link
The DeviceWatcher is not a CLR object, so the GC doesn’t have insight into it. The GC doesn’t know what objects DeviceWatcher has references to. I updated the article to clarify.





Alexander Zhuravlev  May 22, 2019


  0  Collapse this comment
Copy link
I agree, there is some critical piece of information missing from this article.





Piotr Siódmak  May 22, 2019


  0  Collapse this comment
Copy link
One of them might be pinned (by virtue of having underlying native resources)