Vanja Kralj  March 10, 2021


  0  Collapse this comment
Copy link
I can remember of something called COM-apartment's "causality" (can be read using CoGetCurrentLogicalThreadId). Was it not supposed to block re-entrant calls in the calling apartment except for the called apartment to call back into the calling apartment (sorry for using the word "call" five times in this sentence)? This sounds a lot like what Raymond described in his next article.
I remember experimenting with this many years ago (10, maybe 15) and not being able...Read moreI can remember of something called COM-apartment’s “causality” (can be read using CoGetCurrentLogicalThreadId). Was it not supposed to block re-entrant calls in the calling apartment except for the called apartment to call back into the calling apartment (sorry for using the word “call” five times in this sentence)? This sounds a lot like what Raymond described in his next article.
I remember experimenting with this many years ago (10, maybe 15) and not being able to find a consistent behaviour. The topic “causailty” and the function CoGetCurrentLogicalThreadId deserved only a quite dry mention in MSDN, without describing how it can be utilised by programmers or which influence it has (if any) on COM calls.
Read less







switchdesktopwithfade@hotmail.com  March 3, 2021


  0  Collapse this comment
Copy link
Coroutines make it easy for threads to mutually call each other without hard blocking and the WinRT APIs released with Windows 8 were designed for coroutines. So, I’m confused why ASTA was ever contemplated. These seem like old problems for old components that were already built with hardcoded apartment assumptions.





Piotr Siódmak  February 25, 2021


  0  Collapse this comment
Copy link
What does a “call to a thread” mean? A thread is just a CPU state (registers) and a Thread Information Block.





Jonathan Barner  March 1, 2021


  0  Collapse this comment
Copy link
I'm not an expert on COM, but from the fact that the article shows a function called "ReceiveInboundCall", I imagine that COM has its own dispatcher. I suppose that when thread2 calls widget.Frob(), COM knows that this call should be on a different thread (because widget is bound to thread3?), and therefore somehow dispatches the call there. Then thread2 calls some COM wait function ("WaitForFrobToFinish"), which waits for either the dispatched call to end, or...Read moreI’m not an expert on COM, but from the fact that the article shows a function called “ReceiveInboundCall”, I imagine that COM has its own dispatcher. I suppose that when thread2 calls widget.Frob(), COM knows that this call should be on a different thread (because widget is bound to thread3?), and therefore somehow dispatches the call there. Then thread2 calls some COM wait function (“WaitForFrobToFinish”), which waits for either the dispatched call to end, or some other dispatched call like “AddWidget”.
Read less