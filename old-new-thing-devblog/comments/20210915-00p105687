Mikie  September 24, 2021


  0  Collapse this comment
Copy link
More fun with StretchDIBits and top-down bitmaps.
Further experiments show even more wacky behaviour. Here's the summary:
Win3.11, Win3.11+Win32s - do not support top-down bitmaps
WinNT3.1, WinNT3.51 - origin at the top (as in the _current_ documentation)
Win95, Win98SE, WinMe - origin at the bottom (as described in Petzold's books)
WinNT4, Win2k, WinXP, WinXP64, Win7, Win10 - origin random (see the post above)
So apparently we are still living with the bug introduced in 1996.
Read moreMore fun with StretchDIBits and top-down bitmaps.
Further experiments show even more wacky behaviour. Here’s the summary:
Win3.11, Win3.11+Win32s – do not support top-down bitmaps
WinNT3.1, WinNT3.51 – origin at the top (as in the _current_ documentation)
Win95, Win98SE, WinMe – origin at the bottom (as described in Petzold’s books)
WinNT4, Win2k, WinXP, WinXP64, Win7, Win10 – origin random (see the post above)
So apparently we are still living with the bug introduced in 1996.
Read less







Mikie  September 16, 2021


  0  Collapse this comment
Copy link
There is something strange going on with StretchDIBits:
According to my experiments, when using on top-down bitmaps with
DestWidth==SrcWidth && DestHeight==SrcHeight && ySrc==0,
the origin of the source bitmap (for xSrc and ySrc) is considered to be the upper-left corner!
Otherwise (i.e. e.g. when ySrc>0) the origin is considered to be the lower-left corner (as in SetDIBitsToDevice).
Can anybody confirm this behaviour?
Is there any sane reason behind this inconsistency?
It there a way to display say...Read moreThere is something strange going on with StretchDIBits:
According to my experiments, when using on top-down bitmaps with
DestWidth==SrcWidth && DestHeight==SrcHeight && ySrc==0,
the origin of the source bitmap (for xSrc and ySrc) is considered to be the upper-left corner!
Otherwise (i.e. e.g. when ySrc>0) the origin is considered to be the lower-left corner (as in SetDIBitsToDevice).
Can anybody confirm this behaviour?
Is there any sane reason behind this inconsistency?
It there a way to display say a bottom half of a top-down bitmap using StretchDIBits without actual stretching?
Read less







Joshua Hudson  September 15, 2021


  0  Collapse this comment
Copy link
Too bad I can't set a brush or a pen with an alpha channel and have it paint with that alpha channel.
By which I do not mean handle the partial transparency bit merge. By which I mean paint over that part of the image and setting the alpha channel as I go. That way I can draw a 100% opaque text output with DrawText over a 40% opaque oval and have the rest of the...Read moreToo bad I can’t set a brush or a pen with an alpha channel and have it paint with that alpha channel.
By which I do not mean handle the partial transparency bit merge. By which I mean paint over that part of the image and setting the alpha channel as I go. That way I can draw a 100% opaque text output with DrawText over a 40% opaque oval and have the rest of the oval remain 40% opaque.
Read less