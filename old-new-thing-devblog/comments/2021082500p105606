Fabian Schmied  August 28, 2021


  0  Collapse this comment
Copy link
The ECMA-335 metadata format can actually express “const” via its concept of “custom modifiers”.
Quoting from ECMA-335, Partition II, 7.1.1: “For example, the const qualifier in the C programming language can be modelled with an optional modifier […].”





IS4  August 30, 2021


  0  Collapse this comment
Copy link
Indeed. This is heavily used by C++/CLI assemblies, where you can easily find modreq(System.Runtime.CompilerServices.IsConst).




Paulo Pinto  August 25, 2021


  0  Collapse this comment
Copy link
D, Delphi and Swift also have such concept.
And if we stray from mainstream path, languages like ML family, Active Oberon and Modula-3 also do have such concept.





jahns@chemie.uni-hamburg.de  August 31, 2021


  0  Collapse this comment
Copy link
I'm not sure what Raymond meant by the concept, because const is in some ways extremely specific. But many languages that borrow from Fortran and Fortran itself have <code> argument (what C calls parameters) declarations. Those have mostly the same implications as const for non-nested types and are a bit more strict for stuff containing pointers. While C-derived languages don't mind modifications to pointers passed as members of const declared structs, Fortran would disallow that.
It...Read moreI’m not sure what Raymond meant by the concept, because const is in some ways extremely specific. But many languages that borrow from Fortran and Fortran itself have
INTENT(IN)
 argument (what C calls parameters) declarations. Those have mostly the same implications as const for non-nested types and are a bit more strict for stuff containing pointers. While C-derived languages don’t mind modifications to pointers passed as members of const declared structs, Fortran would disallow that.
It would be interesting to know for which language  interoperability they were shooting for back then.
Read less







Virgo Pärna  August 26, 2021


  0  Collapse this comment
Copy link
I’m not sure about Delphi. In Delphi const means, that value of pointer cannot be changed, pointed value can be changed. So Delphi
const data: PINT
would be more like C
int * const data





Paulo Pinto  August 30, 2021


  0  Collapse this comment
Copy link
In Delphi it is more like,
function SetData(dataSize: UINT32; const data: array of INT32): HRESULT;





Virgo Pärna  August 30, 2021


  0  Collapse this comment
Copy link
In pure Delphi that dataSize would be superfluous.
And you cannot use open arrays on API functions that you want to be exported for use in another languages or when importing from C (as far as i know).





Paulo Pinto  August 30, 2021


  0  Collapse this comment
Copy link
Of course it would be superfluous, the whole point of writing like that was to match the example being described, as per COM ABI.
Now, if there was a Delphi Projection generator for WinRT types, then eventually it might be smart enough to get rid of dataSize, which isn't anyway the point I was making.
Everything that Delphi can is accessible to C++, via C++ Builder as VCL is mostly written in Delphi, including the new COM...Read moreOf course it would be superfluous, the whole point of writing like that was to match the example being described, as per COM ABI.
Now, if there was a Delphi Projection generator for WinRT types, then eventually it might be smart enough to get rid of dataSize, which isn’t anyway the point I was making.
Everything that Delphi can is accessible to C++, via C++ Builder as VCL is mostly written in Delphi, including the new COM wrappers,
https://docwiki.embarcadero.com/RADStudio/Sydney/en/C%2B%2BBuilder_Uses_DAX_for_ActiveX_and_COM
https://docwiki.embarcadero.com/RADStudio/Sydney/en/Code_Generated_by_Wizards
Read less






Daniel Sturm  August 26, 2021


  0  Collapse this comment
Copy link
Swift’s idea of const is as I understand it pretty much the same as const in c# or java but not the same concept as c++ has.
I assume the same is true for the other languages listed, at least I don’t remember const correctness ever being an issue when we learned Delphi in highschool (boy I’m getting old)





Paulo Pinto  August 30, 2021


  0  Collapse this comment
Copy link
Swift is immutable by default, so actually is the same const as ML languages, which you also find in Rust.
<code>
If you wanted to be able to change data, then it would be
<code>
Delphi in 2021 is a bit different than those highschool days, similarly with the proper type alias it would be,
<code>
Read moreSwift is immutable by default, so actually is the same const as ML languages, which you also find in Rust.
func SetData (dataSize: UInt32, data : UnsafePointer) -> HRESULT
If you wanted to be able to change data, then it would be
func SetData (dataSize: UInt32, data : UnsafeMutablePointer) -> HRESULT
Delphi in 2021 is a bit different than those highschool days, similarly with the proper type alias it would be,
function SetData(dataSize: UINT32; const data: array of INT32): HRESULT;
Read less