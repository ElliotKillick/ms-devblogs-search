Jo M  May 2, 2019


  0  Collapse this comment
Copy link
I wonder why do you insist on showing code for 128 bit GUID instead of 64 bit fileID ? Assume that the scope is NTFS volume in our server. Inside that volume are many files and we want to shortcut the text path into reliable 64 bit number. Assume there are long term files over there. They are never moved and if they would move, that would be inside their volume.
can you see the...Read moreI wonder why do you insist on showing code for 128 bit GUID instead of 64 bit fileID ? Assume that the scope is NTFS volume in our server. Inside that volume are many files and we want to shortcut the text path into reliable 64 bit number. Assume there are long term files over there. They are never moved and if they would move, that would be inside their volume.
can you see the usefulness ? 
I would expect GetFileByID to work on these 64 bit numbers.
i did try the code with 128 bits and I get error 87. Checked the parameters many times. Does this have to do with admin rights ? I would not think so.
Tons of verbiage all over the net about fileID but nobody talks about the usefulness of 64 bit access numbers instead of text pathes on the server.
If you address me here, please share similar technique for use on Unix, hence Mac and Linux. Mac wants me to use bookmarks which is self defeating the usefulness. The good news is that Mac is not my first choice for server.
Read less







Stuart Dunkeld  April 10, 2019


  0  Collapse this comment
Copy link
> The system will pick one arbitrarily.
“Arbitrariness is the quality of being ‘determined by chance, whim, or impulse, and not by necessity, reason, or principle'”
So it will pick one at random chance, or by some kind of ‘code whim’? I’m hoping not ‘by impulse’ as that would indicate a little more consciousness than I like to see in operating systems..





MNGoldenEagle  April 11, 2019


  0  Collapse this comment
Copy link
This is the problem with dictionaries, they provide definitions that are very generic and seldom useful in context.
The technical definition of "arbitrary" from a developer's standpoint is, "left up to implementation and transparent to the consumer."  You care about the contract, but not with the contents.  For example, the result of a pseudo-random number generator is arbitrary: the result of the generator is always deterministic according to its state and implementation, but from our...Read moreThis is the problem with dictionaries, they provide definitions that are very generic and seldom useful in context.
The technical definition of “arbitrary” from a developer’s standpoint is, “left up to implementation and transparent to the consumer.”  You care about the contract, but not with the contents.  For example, the result of a pseudo-random number generator is arbitrary: the result of the generator is always deterministic according to its state and implementation, but from our perspective we don’t care about how the number is generated, we just want a number.
Another example: hash algorithms.  The result of a hash algorithm is arbitrary because we don’t care about what the actual hash is, we just care that it obeys the contract.  The implementation doesn’t matter, all that matters is that we get a hash.
Read less







Kenny O Biel  April 10, 2019


  0  Collapse this comment
Copy link
Arbitrary in that it is an implementation detail that might change in the future. From our perspective it is abitrary because MS’s “necessity, reason, or principle” might change, but if they let us know what those reasons are people will come rely on it making it impossible to change even if necessary.




Harold H  April 10, 2019


  0  Collapse this comment
Copy link
It seems that the process of transferring old articles over to the new system has changed the formatting, resulting in a sort of Raymond Haiku.
https://devblogs.microsoft.com/oldnewthing/?p=10103
A customer asked,“Given a hardlink name,is it possible to get the original file name usedto create it in the first place?”





Ji Luo  April 10, 2019


  0  Collapse this comment
Copy link
I was curious enough to dig up the new link for {7ecf65a0-4b78-5f9b-e77c-8770091c0100} in the linked article: https://devblogs.microsoft.com/oldnewthing/20040315-00/?p=40253 It’s converted from a mocked SID.





Theodore Dubois  April 10, 2019


  0  Collapse this comment
Copy link
Can you update the link on the linked article please, Raymond?