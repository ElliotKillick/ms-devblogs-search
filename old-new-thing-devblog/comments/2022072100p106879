Timothy Byrd  July 21, 2022


  0  Collapse this comment
Copy link
Would it be possible to do this using “friend”?





Steven Brockwell  July 21, 2022


  0  Collapse this comment
Copy link
Because the secret type is protected, doesn’t this mean that one widget type will be able to construct other widget types outside of their create methods?





Louis Wilson  July 21, 2022
· Edited

  0  Collapse this comment
Copy link
Not accidentally, because require_make_shared is templated on the widget type so Widget1::use_the_create_method is a different type from Widget2::use_the_create_method. But you could still maliciously bypass it:
struct EvilWidgetSmartPtrBypass : require_make_shared<Widget>
{
    static Widget create_value() {
        return Widget(use_the_create_method{});
    }
};

Widget w = EvilWidgetSmartPtrBypass::create_value();