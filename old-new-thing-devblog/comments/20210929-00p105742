Ismo Salonen  September 29, 2021


  0  Collapse this comment
Copy link
Shouldn’t Sample() function the call DoStuffWith() have hglobal.get() as argument and not hglob.get() ( in the RAII example) ? May this is nitpicking but imho code examples should be correct, at least otherwise I start wondering what I’m missing and why.
Otherwise excellent topic, these small details are too often overlooked and then I’ve have to hunt leaked handles .





Oliver Dewdney  September 29, 2021


  0  Collapse this comment
Copy link
Could the hGlobal change between calling GetHGlobalFromStream and WriteStuffToStream if it needs to call GlobalReAlloc in the example code?





skSdnW  September 29, 2021


  0  Collapse this comment
Copy link
MSDN is not 100% clear but I assume it always creates a movable block where the handle does not change.
When you pass in a handle it says: "The handle must be allocated as moveable and nondiscardable" which seems very definitive except later on it says "CreateStreamOnHGlobal will accept a memory handle allocated with GMEM_FIXED, but this usage is not recommended. HGLOBALs allocated with GMEM_FIXED are not really handles and their value can change when...Read moreMSDN is not 100% clear but I assume it always creates a movable block where the handle does not change.
When you pass in a handle it says: “The handle must be allocated as moveable and nondiscardable” which seems very definitive except later on it says “CreateStreamOnHGlobal will accept a memory handle allocated with GMEM_FIXED, but this usage is not recommended. HGLOBALs allocated with GMEM_FIXED are not really handles and their value can change when they are reallocated.”. We will probably hear more about this in the next post.
When you pass in NULL it does not specify how the HGLOBAL is created. Unfortunately it also says “If the memory block must be accessed, the memory access calls should be surrounded by calls to GlobalLock and GlobalUnLock.”. It would be nice if that should was changed to a must.
Read less







Neil Rashbrook  September 30, 2021


  0  Collapse this comment
Copy link
How else would you get access to the underlying memory block? (Although maybe this dates back to 16-bit protected mode Windows where global allocations were simply their own selectors so being movable makes no practical difference.)





Tim Weis  October 7, 2021
· Edited

  0  Collapse this comment
Copy link
When passing the GMEM_FIXED flag into GlobalAlloc() then according to the documented contract: "The return value is a pointer.". In this situation a client can access the underlying memory without a call to GlobalLock(), by reinterpreting the returned HGLOBAL as a pointer. Now obviously, with the internals of CreateStreamOnHGlobal() unspecified, the only safe option is to always GlobalLock() the HGLOBAL, even when there are cases where this is not strictly required.
I'm guessing that the documentation...Read moreWhen passing the GMEM_FIXED flag into GlobalAlloc() then according to the documented contract: “The return value is a pointer.”. In this situation a client can access the underlying memory without a call to GlobalLock(), by reinterpreting the returned HGLOBAL as a pointer. Now obviously, with the internals of CreateStreamOnHGlobal() unspecified, the only safe option is to always GlobalLock() the HGLOBAL, even when there are cases where this is not strictly required.
I’m guessing that the documentation is less strict in its wording to account for the scenario where non-movable memory is requested. I will also acknowledge that this particular choice of wording can be confusing. Maybe someone in the know can prepare a PR to have the documentation updated.
Read less