GL  October 11, 2022


  0  Collapse this comment
Copy link
I’d imagine a big press day when the major upgrade is released, and I can’t really blame the media this time — it is a fact that “Microsoft is uninstalling third-party programs when Windows is upgraded”, and possibly “who knows what conspiracy and what-not”!





Dan Weiss  October 10, 2022


  0  Collapse this comment
Copy link
I've used VirtualQuery to get prior permissions for the Import Tables, used VirtualProtect to make it writable, then used VirtualProtect to restore read-only again.  Except this does not work reliably when Delay Loaders are running.  When you restore the previous permissions, you cause an access violation when the delay loaders finish up.
So I was wondering if there was any way to wait for delay loaders to finish, I can't figure out which API...Read moreI’ve used VirtualQuery to get prior permissions for the Import Tables, used VirtualProtect to make it writable, then used VirtualProtect to restore read-only again.  Except this does not work reliably when Delay Loaders are running.  When you restore the previous permissions, you cause an access violation when the delay loaders finish up.
So I was wondering if there was any way to wait for delay loaders to finish, I can’t figure out which API call to use for that.
Read less







Solomon Ucko  October 14, 2022


  0  Collapse this comment
Copy link
I think the delay loaders internally use a reference count to determine how long the memory remains writeable.





Henke37  October 11, 2022


  0  Collapse this comment
Copy link
You can skip the initial query, the first call to VirtualProtect will return the previous permissions in an out param.
As for knowing when the delay loaders are “finished”, you need to call every single delay loaded function to be sure.




Dmitry  October 7, 2022


  0  Collapse this comment
Copy link
What about those who are trying to gain style points by writing programs that are still compatible with Win9x by means of unicows.dll, but instead of diving into the world of LIB-files and their incompatibilities just perform runtime version checks and redirect Unicode-function imports (filled in with Win9x stubs by the loader in a normal way) to the supplementary DLL at program startup? Would some playing with page protection be sufficient? How long will it...Read moreWhat about those who are trying to gain style points by writing programs that are still compatible with Win9x by means of unicows.dll, but instead of diving into the world of LIB-files and their incompatibilities just perform runtime version checks and redirect Unicode-function imports (filled in with Win9x stubs by the loader in a normal way) to the supplementary DLL at program startup? Would some playing with page protection be sufficient? How long will it take before the next upgrade makes such temporal unprotection unavailable for the program itself and getting on the compatibility list becomes a paid premium feature for VIP vendors?
Read less







Joshua Hudson  October 8, 2022


  0  Collapse this comment
Copy link
You know, I was thinking something similar with an alternate delay load stub. Assuming the address table is writable due to a loader artifact this may need an application compatibility flag (like NX). However if it’s a change to the protect bits in the relocation section when compiling windows, no such thing is needed.





Daniel Roskams  October 8, 2022


  0  Collapse this comment
Copy link
I am pretty sure you can just VirtualProtect the memory you want to access and then rewrite whatever you want. Generally speaking, you can change the page protections of any memory in your own process. At least that’s true on Windows 7; I couldn’t be bothered starting a VM to check whether that’s still true on 8/10/11. Probably not true for UWP apps.




Márton Marczell  October 6, 2022


  0  Collapse this comment
Copy link
How can the upgrade installer determine, about some unknown program, whether it’s free or paid?





Chris Iverson  October 6, 2022


  0  Collapse this comment
Copy link
It can't, and doesn't.
"When these types of programs are discovered, we put them on the list of apps that are fundamentally incompatible."
They find these programs in testing, and keep a list of them. That list can include whether or not it's a free or paid program.
"then the program is placed in the compatibility report for that update"
The program isn't flagged during the update. It's flagged as part of the compatibility check BEFORE the upgrade. It's...Read moreIt can’t, and doesn’t.
“When these types of programs are discovered, we put them on the list of apps that are fundamentally incompatible.”
They find these programs in testing, and keep a list of them. That list can include whether or not it’s a free or paid program.
“then the program is placed in the compatibility report for that update”
The program isn’t flagged during the update. It’s flagged as part of the compatibility check BEFORE the upgrade. It’s flagged by checking the list they’ve built.
If the program is on the list, and it’s a free program, it will be uninstalled. If it’s on the list, and it’s not a free program, the user will be advised of issues with the program, and recommend uninstallation.
If the program isn’t on the list, it’s assumed to be good.
Read less