Robert Burke  December 18, 2022


  0  Collapse this comment
Copy link
Given that most applications see a 10%ish speedup from large pages, is there any plan to make large pages usable for applications that do not run as administrator or applications that might not run continually from startup on Windows, like Microsoft Excel or World of Warcraft?





Andrew Kent-Morris  December 18, 2022


  0  Collapse this comment
Copy link
I just wanted to thank you for the Cheers reference.





Stevie White  December 17, 2022


  0  Collapse this comment
Copy link
Great write up Raymond, I had a feeling this was going to be an interesting one. The comments are also very interesting. üëç





Joshua Hudson  December 17, 2022
¬∑ Edited

  1  Collapse this comment
Copy link
‚Äúreally stupid 64 bit processes‚Äù Does that mean I can make an x32 process on Windows?
An x32 process is one complied targeting amd64 instruction set but has sizeof(void*) = 4. This decreases cache pressure at the consequence of can‚Äôt possibly exceed 4GB ram (well in this case 2GB unless VirtualAlloc will take a fixed address above 2GB despite no /LARGEADDRESSSEARE)





Jan Ringo≈°  December 17, 2022
¬∑ Edited

  3  Collapse this comment
Copy link
Only sort of.
There is no x32 ABI on Windows, so pointers interacting with Windows API, and basically all other libraries, always needs to be 64-bit.
But your own pointers absolutely can be 32-bit, and that indeed improves performance. See this synthetic benchmark and results I did some time ago.





Henke37  December 18, 2022


  0  Collapse this comment
Copy link
Yes there is? How else do you think that 32 bit applications work? Sure, it‚Äôs mostly trivial leaf functions and wrappers around the 64 bit version, but the api exists.
There‚Äôs a fair amount of 3rd party research into the internals. Some have even managed to run their own code of the wrong bitness in a process.





Simon Farnsworth  December 21, 2022


  1  Collapse this comment
Copy link
x32 is a hybrid ABI; like amd64, it uses the processor in long mode ("64 bit mode"), but it restricts pointers to 32 bits. The result is something that's similar to amd64, except for pointer size.
Windows has a 32 bit x86 ABI, but that uses the processor in protected or compatibility mode, not long mode, and is not quite the same as x32. In particular, amd64 has the extra 8 registers, which are useful in...Read morex32 is a hybrid ABI; like amd64, it uses the processor in long mode (‚Äú64 bit mode‚Äù), but it restricts pointers to 32 bits. The result is something that‚Äôs similar to amd64, except for pointer size.
Windows has a 32 bit x86 ABI, but that uses the processor in protected or compatibility mode, not long mode, and is not quite the same as x32. In particular, amd64 has the extra 8 registers, which are useful in system call conventions, and x32 can use those while 32-bit x86 can‚Äôt.
Read less