Sevinnex Relim  August 1, 2024


  0  Collapse this comment
Copy link
NT had not only Blue Screen On Death but also Blue Screen Of Birth (or Boot to make it less  fancy)





許恩嘉  July 31, 2024
· Edited

  0  Collapse this comment
Copy link
Sorry to ask an unrelated question.
I found that GetStockObject can actually obtain a stock bitmap, but this is not mentioned in the documentation. In other words, <code> and the only difference is that the latter has a clearly defined behavior in the documentation, while the former is an "internal undocumented behavior that should not be relied upon"?
Read moreSorry to ask an unrelated question.
I found that GetStockObject can actually obtain a stock bitmap, but this is not mentioned in the documentation. In other words,
 GetStockObject(21) == CreateCompatibleBitmap(hdc, 0, 0);//0x85000F==85000F in my computer
 and the only difference is that the latter has a clearly defined behavior in the documentation, while the former is an “internal undocumented behavior that should not be relied upon”?
Read less







Antonio Rodríguez  July 31, 2024


  0  Collapse this comment
Copy link
You have answered yourself. If it is not documented, it is undocumented. Welcome to Tautology Club!
I don’t understand the point of relying in undocumented (and potentially unreliable) behavior when there is an easy and completely legal way to achieve the same. It’s taking a risk (and putting a burden on application compatibility people) without earning anything.





Jeff Stoner  August 1, 2024
· Edited

  0  Collapse this comment
Copy link
In response to the comment below, DeleteDC doesn't delete any objects associated with the device context so I don't think that it's a memory leak concern per se. I also don't think that it matters whether the original bitmap is a stock object or not (what would be different if it wasn't a stock object?).
I think that the question here is the need to restore the original objects (pen, brush, bitmap, etc.) of a memory...Read moreIn response to the comment below, DeleteDC doesn’t delete any objects associated with the device context so I don’t think that it’s a memory leak concern per se. I also don’t think that it matters whether the original bitmap is a stock object or not (what would be different if it wasn’t a stock object?).
I think that the question here is the need to restore the original objects (pen, brush, bitmap, etc.) of a memory device
context before it is deleted. I have often wondered about this myself (I certainly understand the requirement for cached DCs that are released).
Read less







許恩嘉  July 31, 2024
· Edited

  0  Collapse this comment
Copy link
GetStockObject doesn't need additional parameters, so I think it is more convenient to use.
But if the documentation for GetStockObject had recorded it, people would (more likely) know that the initially selected "1-by-1 monochrome bitmap" in the memory device context is actually a stock object, and there is no need to save it and restore it before DeleteDC.
<code>
Although it is mentioned in the Memory Device Contexts section that "The original bitmap in a memory...Read moreGetStockObject doesn’t need additional parameters, so I think it is more convenient to use.
But if the documentation for GetStockObject had recorded it, people would (more likely) know that the initially selected “1-by-1 monochrome bitmap” in the memory device context is actually a stock object, and there is no need to save it and restore it before DeleteDC.
HBITMAP oldBitmap = SelectObject(memDC, bitmap);
// doing something
SelectObject(memDC, oldBitmap); // some people believe that omitting this line will cause a 1x1 bitmap leak, include ChatGPT.
DeleteDC(memDC);
Although it is mentioned in the Memory Device Contexts section that “The original bitmap in a memory DC is simply a placeholder,” and there is also nowhere that mentions you should restore the default object before DeleteDC.
Read less





Antonio Rodríguez  July 30, 2024


  2  Collapse this comment
Copy link
When I read about this on SlashDot a few days ago, all I could think is "when would some journalists learn to do their legwork and verify things before writing an article?". Today's post should be completely unnecessary (Raymond doesn't add anything he hasn't said in the past), yet it is needed to sum it up in a single place because of lazy people who can't bother to do a couple of clicks.
But maybe it...Read moreWhen I read about this on SlashDot a few days ago, all I could think is “when would some journalists learn to do their legwork and verify things before writing an article?”. Today’s post should be completely unnecessary (Raymond doesn’t add anything he hasn’t said in the past), yet it is needed to sum it up in a single place because of lazy people who can’t bother to do a couple of clicks.
But maybe it won’t be enough. Don’t let fact kill a good story. And let’s not miss a chance to remember people of the blue screens which plague Microsoft’s OSes (even if I can’t remember the last time I saw one in the wild).
Read less







iain clarke  August 1, 2024


  0  Collapse this comment
Copy link
Just remember this next time you feel inclined to trust them on something you’re not expert in.
“The phenomenon of a person trusting newspapers for topics which that person is not knowledgeable about, despite recognizing the newspaper as being extremely inaccurate on certain topics which that person is knowledgeable about.”    Gell Mann amnesia effect.





Antonio Rodríguez  August 1, 2024


  0  Collapse this comment
Copy link
I read SlashDot mainly to know “the opinions of the other side”. But sometimes they are unbearable. For example, in the last days they have talked daily about the “Microsoft-CrowdStrike outage”, as if they could convince anyone not already in their ship that Microsoft is the culprit…