Nick  September 10, 2019


  0  Collapse this comment
Copy link
Can’t you get away with skipping the underscore to space step?  Some quick testing seems to show that ToTitleCase will also treat underscores as word separators:
(Get-Culture).TextInfo.ToTitleCase($t.ToLower()).Replace(“_”,””)
seems to work correctly.  Is there a corner case I’m missing?
Also, “shouty snake case” is a new favorite; though it seems like the alternative should then be “sneaky snake case”.





Raymond Chen Author
September 10, 2019


  0  Collapse this comment
Copy link
Awesome! Underscore is a “punctuation connector” which ToTitleCase treats as a word separator, so this works.




Mystery Man  September 10, 2019


  0  Collapse this comment
Copy link
Regex was my first thought.





Sacha Roscoe  September 10, 2019


  0  Collapse this comment
Copy link
Are there any potential issues here with culture settings? How do ToLower and ToTitleCase interact in other cultures? Are we going to muck up the Turkish i and/or ı, as we so often like to do?





Andrew Cook  September 10, 2019


  0  Collapse this comment
Copy link
`ToTitleCase` internally uses `ToLower` and `ToUpper` as needed, so it has the same cultural implications as the other two examples. The documentation calls out that *currently* it uses naïve English casing rules only, but reserves the right to use culture-specific ones in the future.
`ToTitleCase` gives different results than the other two, however, if there are any embedded non-alphanumerics in the string.
Read more`ToTitleCase` internally uses `ToLower` and `ToUpper` as needed, so it has the same cultural implications as the other two examples. The documentation calls out that *currently* it uses naïve English casing rules only, but reserves the right to use culture-specific ones in the future.
`ToTitleCase` gives different results than the other two, however, if there are any embedded non-alphanumerics in the string.
Read less







cheong00  September 10, 2019


  0  Collapse this comment
Copy link
And if your script plans to run on systems that may have other culture, I think you can use System.Globalization.CultureInfo.InvariantCulture instead of Get-Culture



cheong00  September 9, 2019


  0  Collapse this comment
Copy link
Here’s one case where using RegEx is actually better.





John Wiltshire  September 9, 2019


  0  Collapse this comment
Copy link
The real question is whether you can do it with cmd.exe!





David Streeter  September 9, 2019


  0  Collapse this comment
Copy link
@ECHO OFF
SET t=SHOUTY_SNAKE_CASE
FOR %%i IN ("A=a" "B=b" "C=c" "D=d" "E=e" "F=f" "G=g" "H=h" "I=i" "J=j" "K=k" "L=l" "M=m" "N=n" "O=o" "P=p" "Q=q" "R=r" "S=s" "T=t" "U=u" "V=v" "W=w" "X=x" "Y=y" "Z=z") DO CALL SET "t=%%t:%%~i%%"
SET t1=%t:~0,1%
FOR %%i IN ("a=A" "b=B" "c=C" "d=D" "e=E" "f=F" "g=G" "h=H" "i=I" "j=J" "k=K" "l=L" "m=M" "n=N" "o=O" "p=P" "q=Q" "r=R" "s=S" "t=T" "u=U" "v=V" "w=W" "x=X" "y=Y" "z=Z") DO CALL SET "t1=%%t1:%%~i%%"
SET t2=%t:~1%
SET...Read more@ECHO OFF
SET t=SHOUTY_SNAKE_CASE
FOR %%i IN (“A=a” “B=b” “C=c” “D=d” “E=e” “F=f” “G=g” “H=h” “I=i” “J=j” “K=k” “L=l” “M=m” “N=n” “O=o” “P=p” “Q=q” “R=r” “S=s” “T=t” “U=u” “V=v” “W=w” “X=x” “Y=y” “Z=z”) DO CALL SET “t=%%t:%%~i%%”
SET t1=%t:~0,1%
FOR %%i IN (“a=A” “b=B” “c=C” “d=D” “e=E” “f=F” “g=G” “h=H” “i=I” “j=J” “k=K” “l=L” “m=M” “n=N” “o=O” “p=P” “q=Q” “r=R” “s=S” “t=T” “u=U” “v=V” “w=W” “x=X” “y=Y” “z=Z”) DO CALL SET “t1=%%t1:%%~i%%”
SET t2=%t:~1%
SET t2=%t2:_= %
FOR %%i IN (” a= A” ” b= B” ” c= C” ” d= D” ” e= E” ” f= F” ” g= G” ” h= H” ” i= I” ” j= J” ” k= K” ” l= L” ” m= M” ” n= N” ” o= O” ” p= P” ” q= Q” ” r= R” ” s= S” ” t= T” ” u= U” ” v= V” ” w= W” ” x= X” ” y= Y” ” z= Z”) DO CALL SET “t2=%%t2:%%~i%%”
SET t=%t1%%t2%
SET t=%t: =%
ECHO %t%
Read less







Neil Rashbrook  September 10, 2019


  0  Collapse this comment
Copy link
Overkill. Try this:
@set t=_%1
@for %%l in (a b c d e f g h i j k l m n o p q r s t u v w x y z)do @call set t=%%t:%%l=%%l%%
@for %%l in (A B C D E F G H I J K L M N O P Q R S T U V W X Y Z)do @call set t=%%t:_%%l=%%l%%
@echo %t%
Edit: the formatting looked...Read moreOverkill. Try this:
@set t=_%1
@for %%l in (a b c d e f g h i j k l m n o p q r s t u v w x y z)do @call set t=%%t:%%l=%%l%%
@for %%l in (A B C D E F G H I J K L M N O P Q R S T U V W X Y Z)do @call set t=%%t:_%%l=%%l%%
@echo %t%
Edit: the formatting looked OK (i.e. like Paulo’s) when I posted it…
Read less






Me Gusta  September 9, 2019


  0  Collapse this comment
Copy link
Well, you can run powershell.exe from cmd.exe, so given this post, I would imagine something based around powershell.exe -Command.




Paulo Morgado  September 9, 2019


  0  Collapse this comment
Copy link
$uc = $true;
[string]::new(($t.ToCharArray() | % {
  if ($uc) { [CultureInfo]::CurrentCulture.TextInfo.ToUpper($_); $uc = $false; }
  elseif ($_ -eq '_') { $uc = $true}
  else { [CultureInfo]::CurrentCulture.TextInfo.ToLower($_); }
}))





Petri Oksanen  September 9, 2019


  0  Collapse this comment
Copy link
Kids today with their fancy PowerShell, am I right? 🙂
perl -wnle “my$l;for(split’_’){$l.=ucfirst lc}print$l”





Raymond Chen Author
September 9, 2019


  0  Collapse this comment
Copy link
If you’re going to go perl, you may as well go all the way: perl -ne “for(split _){print ucfirst lc}”. But that requires the snake_case to be passed as stdin rather than on the command line. perl -e “for(split _,shift){print ucfirst lc}” takes it from the command line.





Petri Oksanen  September 9, 2019


  0  Collapse this comment
Copy link
I’m assuming the data is from the stdin or from the contents of a file provided as argument. 🙂
I wonder if this can be beat: perl -ne “print ucfirst lc for split _”