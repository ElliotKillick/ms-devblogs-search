Alexander Riccio  April 19, 2019


  0  Collapse this comment
Copy link
"The global lookup will work because you did a 
It's also definitely partly an OCD thing on my side. I just can't stand the looks of the "using namespace" declarations in code. It just makes me feel icky.
Read more“The global lookup will work because you did a using namespace Windows::UI::Xaml;" ...Well there's your problem. That's also long been my biggest struggle with these modern/WinRT Windows APIs. All the example code, most of the libraries, and even the headers, are full of the "using namespace" declarations. It makes things an awful lot more complex for a newbie. I have no clue if a given function is part of the API, some wrapper, or a part of the program I'm working on.
It’s also definitely partly an OCD thing on my side. I just can’t stand the looks of the “using namespace” declarations in code. It just makes me feel icky.
Read less







Jevan Saks  April 20, 2019


  1  Collapse this comment
Copy link
In our project we crack into winrt namespace so it would be winrt::Style here. Also prefer “auto” for variable types and this gets easier too.




Ji Luo  April 19, 2019


  0  Collapse this comment
Copy link
Since WinRT is COM in disguise, I bet method names wouldn’t matter (except in the winmd? I mean you could just name your methods any way you want and put them in the right slot)… Why not call them get_Visibility and set_Visibility, as is done in C++/CLI? This fashion of naming also makes add/remove methods for events easier to decode.