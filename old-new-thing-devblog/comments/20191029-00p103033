Kalle Niemitalo  October 30, 2019


  0  Collapse this comment
Copy link
If you suppress the background thread, then how does GDI+ decide which thread should create the notification window?
Is it the thread that calls GdiplusStartup? However, the same thread is not required to call GdiplusShutdown, and the documentation does not say that the thread even needs to be kept alive.
Is it the thread that calls NotificationHook? However, you described that GDI+ created the notification window even though the application failed to call NotificationHook.
This reminds me about...Read moreIf you suppress the background thread, then how does GDI+ decide which thread should create the notification window?
Is it the thread that calls GdiplusStartup? However, the same thread is not required to call GdiplusShutdown, and the documentation does not say that the thread even needs to be kept alive.
Is it the thread that calls NotificationHook? However, you described that GDI+ created the notification window even though the application failed to call NotificationHook.
This reminds me about SCardAccessStartedEvent, which used to create a window owned by thread that first called it, and started failing with ERROR_INVALID_WINDOW_HANDLE if that thread terminated. IIRC, it was corrected in Vista so that the function no longer relies on window messages.
Read less







Joe Beans  October 29, 2019


  0  Collapse this comment
Copy link
It’s a shame so many API and framework threads are wasted listening for a single event. .NET and the shell namespace are horrible at that, then you have Job object notifications which need their own IOCP. I wish that more if not all notifications and continuations were posted to the default thread pool. I know that several Win32 functions like GetAddrInfoEx are doing this.





Brian Boorman  October 29, 2019


  0  Collapse this comment
Copy link
The link at the bottom of the linked article (linkception?) is broken. http://blogs.msdn.com/oldnewthing/archive/2006/01/26/517849.aspx gives a 403 Forbidden error.





Raymond Chen Author
October 29, 2019


  0  Collapse this comment
Copy link
They have allegedly been working on this broken links for a long time now. I’ll ping them again.





cheong00  October 29, 2019


  0  Collapse this comment
Copy link
In fact, most of the old links are broken.
Say, the link on that linked post: We looked at this a little while ago.
http://blogs.msdn.com/oldnewthing/archive/2006/01/26/517849.aspx
Should be pointing to:
https://devblogs.microsoft.com/oldnewthing/20060126-00/?p=32513
The problem is on deducing what is the value behind "p".
I found that by visiting the link for the date https://devblogs.microsoft.com/oldnewthing/20060126-00/ I can see the articles posted on that date, but obviously this won't work for auto-correcting the links on posts.
Read moreIn fact, most of the old links are broken.
Say, the link on that linked post: We looked at this a little while ago.
http://blogs.msdn.com/oldnewthing/archive/2006/01/26/517849.aspx
Should be pointing to:
https://devblogs.microsoft.com/oldnewthing/20060126-00/?p=32513
The problem is on deducing what is the value behind “p”.
I found that by visiting the link for the date https://devblogs.microsoft.com/oldnewthing/20060126-00/ I can see the articles posted on that date, but obviously this won’t work for auto-correcting the links on posts.
Read less





Maximilien Lincourt  October 29, 2019


  0  Collapse this comment
Copy link
Funnily enough (lol, not really).
We just had an issue with the GdiplusStartup and the SuppressBackgroundThread  flag (related to DDE operations)
https://docs.microsoft.com/en-us/cpp/mfc/special-cwinapp-services?redirectedfrom=MSDN&view=vs-2019