cheong00  May 30, 2021
· Edited

  0  Collapse this comment
Copy link
For some reason, if I were to design a method with overload that can be called by javascript, I would add an overload that accepts a class with all the possible parameters and make it as default.
Therefore the caller can call it this way:
CreateWatcher({ "aqsFilter": "some filter value" });
or this way:
CreateWatcher({ "deviceClass": 0 }); // 0 = DeviceClass.All
to create the effect of named parameter.
Of course you would also need to state in the documentation the...Read moreFor some reason, if I were to design a method with overload that can be called by javascript, I would add an overload that accepts a class with all the possible parameters and make it as default.
Therefore the caller can call it this way:
CreateWatcher({ “aqsFilter”: “some filter value” });
or this way:
CreateWatcher({ “deviceClass”: 0 }); // 0 = DeviceClass.All
to create the effect of named parameter.
Of course you would also need to state in the documentation the resolve priority of arguments. Say, if aqsFilter is supplied then deviceClass would be ignored.
Read less







Santosh Sampath  May 29, 2021


  0  Collapse this comment
Copy link
Python has named params. Javascript doesn’t yet have it though.
Would it have helped like createWatcher(deviceClass=dv) or createWatcher(aqsfilter=filter) to pick the right one?