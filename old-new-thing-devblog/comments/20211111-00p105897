Yuhong Bao  November 14, 2021


  0  Collapse this comment
Copy link
I wonder if the product would actually have been effective if the compression algorithm has been implemented.





Mike Morrison  November 22, 2021


  0  Collapse this comment
Copy link
Implementing a compression algorithm in place of memcpy would‚Äôve solved one problem, but most likely it would‚Äôve create a whole lot more.  Given that their driver reliably crumpled under load, I‚Äôd say that their comp algorithm would‚Äôve had it‚Äôs own share of bugs, and the whole lot would‚Äôve been just as crash-prone as the product that they did release.




Neil Rashbrook  November 12, 2021


  0  Collapse this comment
Copy link
Deliberately fragmenting conventional memory to prevent fixed segments of DLLs from being loaded there while still allowing TDBs to be allocated there? Ingenious. Fortunately there was only one utility that gave me this problem, so for that I just wrote a custom loader that allocated almost all of conventional memory while launching the troublesome executable, then released it again afterwards.





Mike Swaim  November 12, 2021


  0  Collapse this comment
Copy link
There was an article about how to force dlls to load high in MSDN magazine way back when. One of my coworkers used it to write a custom loader for our Win16 app back in the early 90s.




Mystery Man  November 11, 2021


  0  Collapse this comment
Copy link
Some guy named Mark Russinovich also took the product apart and came to the same conclusions. I wonder what happened to that guy. He seems kind of sharp.
Why the sarcasm here?
Just for the record, Mark Russinovich is working for Microsoft right now. In a Channel9 video, he mentioned that he runs the Microsoft Azure division.





Ian Yates  November 14, 2021


  0  Collapse this comment
Copy link
Not sarcasm. More like a fun wink-to-camera for those in the audience who are aware of Russinovich. A bit of flair in the story, not at all a putdown.





Antonio Rodr√≠guez  November 12, 2021


  0  Collapse this comment
Copy link
I don‚Äôt think it is sarcasm. Many commenters are aware that Russinovich now works for Microsoft. Why would Raymond ignore that fact?




Joe Beans  November 11, 2021


  0  Collapse this comment
Copy link
Mark Russinovich, what a good guy. Such a good guy that only his tools get to use APIs in Windows 11 that have been available for 30 years. Sounds a little, I don‚Äôt know, monopolistic and anti-competitive don‚Äôt you think?  Please tell me the rumor about HWND_TOPMOST isn‚Äôt true, because that‚Äôs not gonna fly. That‚Äôs a showstopper most people haven‚Äôt stumbled on yet.





Yuhong Bao  November 20, 2021


  0  Collapse this comment
Copy link
MS bought Winternals in 2006.





Alexey Badalov  November 11, 2021


  0  Collapse this comment
Copy link
Could you elaborate for the rest of the class?




Kevin Gosse  November 11, 2021


  0  Collapse this comment
Copy link
Back in the days I used Magnaram 2: https://winworldpc.com/product/magnaram/20
This one actually did something, I had some heavy games that crashed at startup without it. My computer had 24 MB of RAM, with Magnaram I was able to launch applications designed for 32 MB.
Today I feel like I'm missing one piece of the puzzle. Wouldn't the disk swap make up for the RAM I was missing? Was there some kind of limit that was badly...Read moreBack in the days I used Magnaram 2: https://winworldpc.com/product/magnaram/20
This one actually did something, I had some heavy games that crashed at startup without it. My computer had 24 MB of RAM, with Magnaram I was able to launch applications designed for 32 MB.
Today I feel like I‚Äôm missing one piece of the puzzle. Wouldn‚Äôt the disk swap make up for the RAM I was missing? Was there some kind of limit that was badly configured on my system? I wish I could go back in time to check and understand exactly what was happening and why Magnaram helped.
Read less







Henke37  November 11, 2021


  0  Collapse this comment
Copy link
And these days Windows does it for real. Seems to be a good compression algorithm this time.
Of course, the fastest way to page out data is to discard it and reloading it from the original executable file if required again, like the loader does.





Neil Rashbrook  November 12, 2021


  0  Collapse this comment
Copy link
It‚Äôs the fastest way to page out data, but to make a fair comparison you should also account for the time needed to reload it.




tinmac  November 11, 2021


  0  Collapse this comment
Copy link
Just love nostalgic posts like this. Spot on üôÇ





Maia Everett  November 11, 2021


  0  Collapse this comment
Copy link
Okay, the ‚Äúit was memcpy‚Äù part made me burst out laughing.
So what did you do about this software, if anything?





Peter Cooper Jr.  November 12, 2021


  0  Collapse this comment
Copy link
Raymond does know how to make a good punchline to a story. It was great timing to just put that ‚ÄúIt was memcpy‚Äù line there.
I suspect there wasn‚Äôt anything for them to do about it, really. There weren‚Äôt any bugs in Windows 95 for it, and it sounds like even the hook-into-memory-manager part was working well.




Clockwork-Muse  November 11, 2021


  0  Collapse this comment
Copy link
Some people point out that it should have failed the ‚Äúfunctions substantially as described‚Äù rule, but that rule wasn‚Äôt saying that every claim must be independently verified by an in-depth reverse-engineering.
I mean, a 1:1 compression algorithm is still a compression algorithm.





word merchant  November 11, 2021


  0  Collapse this comment
Copy link
My new product for Windows 11 - MegaRamOMatic++ - does the same thing except it compresses everything down to a single bit (plus what I call a Dynamic Bit Lookup Table - DBLT) that, for every original uncompressed bit contains a 'shadow bit' that dictates whether that uncompressed bit was 1 or 0.
As an optimisation, I overlay this DBLT - byte for byte - on top of conventional memory, keeping the single compressed bit...Read moreMy new product for Windows 11 ‚Äì MegaRamOMatic++ ‚Äì does the same thing except it compresses everything down to a single bit (plus what I call a Dynamic Bit Lookup Table ‚Äì DBLT) that, for every original uncompressed bit contains a ‚Äòshadow bit‚Äô that dictates whether that uncompressed bit was 1 or 0.
As an optimisation, I overlay this DBLT ‚Äì byte for byte ‚Äì on top of conventional memory, keeping the single compressed bit ‚Äì for every machine running my software ‚Äì on a whiteboard in a corner of my office. It‚Äôs currently set to 1 and written using a red dry marker. but that‚Äôs an implementation detail. Please don‚Äôt rely on it. Here‚Äôs a digital version of it for public inspection: 1.
Anyone want to buy me out?
Read less







Brian Boorman  November 11, 2021


  1  Collapse this comment
Copy link
Cute, but everyone knows that the best space savings measure when it comes to bits is to stack all the 0‚Äôs on top of each other like tires and stuff the 1‚Äôs inside.





word merchant  November 11, 2021


  0  Collapse this comment
Copy link
Except this would squash the lower bits and that literally makes them qubits or something.