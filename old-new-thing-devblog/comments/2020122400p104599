switchdesktopwithfade@hotmail.com  December 24, 2020


  0  Collapse this comment
Copy link
I couldn't help but ask "how long does the persisted pool thread persist"?
And the docs say:
"The callback function is queued to a thread that never terminates. It does not guarantee that the same thread is used each time. This flag should be used only for short tasks or it could affect other timer operations...Note that currently no worker thread is truly persistent..."
It says the thread doesn't terminate but then there's a wink that says...Read moreI couldn’t help but ask “how long does the persisted pool thread persist”?
And the docs say:
“The callback function is queued to a thread that never terminates. It does not guarantee that the same thread is used each time. This flag should be used only for short tasks or it could affect other timer operations…Note that currently no worker thread is truly persistent…”
It says the thread doesn’t terminate but then there’s a wink that says to expect it to disappear anyway. The whole thing sounds like a gamble. I should probably ask around, a lot of laymen have become strangely familiar with Windows XP internals in the past few months…
I’m curious why you aren’t calling RegisterWaitForSingleObject() for the actual wait because only RegNotifyChangeKeyValue() has to be called on the persistent thread.
Read less







Richard Yu  December 24, 2020


  0  Collapse this comment
Copy link
There are two `await_ready` in the code. Is it a mistake? I guess the second one should be `await_resume`.





紅樓鍮  December 24, 2020


  0  Collapse this comment
Copy link
Also Callback should be static




紅樓鍮  December 24, 2020


  0  Collapse this comment
Copy link
We can’t… [do] another QueueUserWorkItem, because if [that] fails, we are stuck on the persistent thread.
Couldn’t resume_background fail?  And if QueueUserWorkItem fails, couldn’t we simply handle the error and leave?





紅樓鍮  December 24, 2020


  0  Collapse this comment
Copy link
Maybe link resume_background to its Docs page (since it’s not part of standard C++ and the reader may not know what it is)?