Matthew Miller  August 12, 2021


  0  Collapse this comment
Copy link
Thanks for sharing! I’m curious about the footnote, but it looks like it might have been forgotten.





Alex Martin  August 12, 2021


  0  Collapse this comment
Copy link
I suspect it became the bonus reading.




Yuri Khan  August 12, 2021


  0  Collapse this comment
Copy link
I’d probably wrap the allocated block in a std::unique_ptr with a custom deleter set to a lambda that captures the heap handle.





Louis Wilson  August 12, 2021


  0  Collapse this comment
Copy link
This is a pretty good solution but it does have the disadvantage of making all your pointers twice as large.




Yuri Khan  August 12, 2021


  0  Collapse this comment
Copy link
> are allocated and freed by the same thread.¹
You’ve got a dangling reference here.





Raymond Chen Author
August 12, 2021


  0  Collapse this comment
Copy link
I forgot what I intended to say, but I thought of something else to say, so I patched it up with a brand new footnote. Thanks.




King Kong  August 12, 2021


  0  Collapse this comment
Copy link
HeapFree(header->heap, flags, p);
You’re freeing the wrong pointer, it has to be “header”, not “p”. Or am I overlooking something?





Raymond Chen Author
August 12, 2021


  0  Collapse this comment
Copy link
Oops, thanks. Fixed.