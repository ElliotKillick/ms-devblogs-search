Dmitry  October 1, 2024
· Edited

  0  Collapse this comment
Copy link
That’s why when faced with choice between C++ and assembly language with no special requirements I’d choose the latter as it’s much cleaner. And (you know what?) it deals with more cases. Except the AT&T syntax, of course, which is obviously intended for first-year-student-written compiler (assembler) consumption, not for normal human beings or compilers/assemblers.





Vittorio Romeo  September 30, 2024


  1  Collapse this comment
Copy link
I was kind of surprised that we cannot write:
auto&& arg = (std::forward(args)...)[index];
I briefly looked at the paper and it seems the grammar specifically takes a “pack-id”. 🙁
I would suggest mentioning this in the article as I expect more people would try that approach.





BCS  September 30, 2024


  0  Collapse this comment
Copy link
Regarding the footnote, if you could make a set of rules that actually “cover[s] all scenarios” I’d prefer that regardless of complexity, but that will never happen. And if you can’t have a system that automatically deals with everything, it needs to be understandable. Tl;dr; once we restrict to the options that are available in the real world, I agree with the original claim.