Ji Luo  April 12, 2019


  0  Collapse this comment
Copy link
I’d say any program that programmatically posts quit message to apps can be thought as a task manager. BTW, WindowsShutdown is really LoggingOff, but that naming doesn’t sound as urgent as shutting down.





Joe Beans  April 11, 2019


  0  Collapse this comment
Copy link
The problem with Task Manager’s WM_CLOSE is that, besides giving the target process more opportunity to do extra damage, it might route the target’s code through a “clean” pathway that persists the messed-up situation for future processes. Kill has to mean kill.
Also, something that gets overlooked in frameworks is a property saying if a close is already in progress.





Andrew Cook  April 12, 2019


  0  Collapse this comment
Copy link
Which is why Task Manager gives you another option: Task Manager sends WM_CLOSE when you use the Processes tab (formerly known as the Applications tab), but when you use the Details tab (formerly known as the Processes tab) or if the window’s message pump isn’t responding, it injects a thread that calls TerminateProcess(). Which really does mean kill.





Kalle Niemitalo  April 12, 2019


  0  Collapse this comment
Copy link
I set a breakpoint at KERNELBASE!TerminateProcess in the Task Manager process on Win10 1809 and told it to end a process. The breakpoint was hit on the main thread of Task Manager. If older versions used to inject a thread to the process being killed, I’m curious why.