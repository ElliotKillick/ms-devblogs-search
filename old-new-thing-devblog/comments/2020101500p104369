Antoine Morrier  October 16, 2020


  0  Collapse this comment
Copy link
I think this part is wrong

  template
  auto&& get()       && { return get_helper(*this); }

  template
  auto&& get() const && { return get_helper(*this); }
Here, you must use the `std::move` on *this because *this will be considered as a lvalue reference and not a rvalue reference I think…





David Rogers  October 20, 2020


  0  Collapse this comment
Copy link
A templated && without CV qual is a ‘forwarding reference’ (“universal” really), it accepts everything




Daniel Sturm  October 15, 2020


  0  Collapse this comment
Copy link
It’s sad if you compare the amount of work and complexity to implement this feature in c++ to the code needed to do the same in C#.
Virtually anybody can implement a deconstruction method correctly in c#, I doubt more than a fraction of c++ users could manage the same given all the intricacies.