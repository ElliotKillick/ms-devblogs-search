Stefan Kanthak  September 6, 2022


  0  Collapse this comment
Copy link
Besides the already noted wrong statement that SSE and x87 registers a shared, the statement that RDX holds the upper 64 bits of the return value is wrong too: MSVC (and thus Windows) does NOT support 128-bit integers!
Bonus comment: while code for the i386 that returns a compound type like _div_t (a structure built of 2 integers) uses EAX and EDX, code for the AMD64 that returns a structure holding a pair of 64-bit integers...Read moreBesides the already noted wrong statement that SSE and x87 registers a shared, the statement that RDX holds the upper 64 bits of the return value is wrong too: MSVC (and thus Windows) does NOT support 128-bit integers!
Bonus comment: while code for the i386 that returns a compound type like _div_t (a structure built of 2 integers) uses EAX and EDX, code for the AMD64 that returns a structure holding a pair of 64-bit integers uses a hidden first pointer argument to this structure.
Read less







Raymond Chen Author
September 10, 2022


  0  Collapse this comment
Copy link
Thanks. Fixed.





Stefan Kanthak  September 10, 2022


  0  Collapse this comment
Copy link
Unfortunately only partially: the second sentence of “Integer return values up to 64 bits go into rax If the return value is a 128-bit value, then the rdx register holds the upper 64 bits. Floating point return values are returned in xmm0.” is still wrong and doesn’t match the graphic — which also fails to match the third (and corrent) sentence: XMM1 is not used for a second FP return value.



Mihkel Soomere  September 3, 2022


  0  Collapse this comment
Copy link
How about CPU platforms for NT that never had a commercial release like i860, SPARC or Clipper. As Alpha was always 64bit, I presume that the unreleased 64bit Windows on Alpha is much of the same.
As you’ve dug up some quite niche binaries, there should probably be something for these architectures in vast Microsoft archives.





Goran Mitrovic  September 3, 2022


  0  Collapse this comment
Copy link
MC68000 has a very nice instruction set compared to x86, but learning about some DSP processor such as Blackfin would be much more interesting as it offers a lot of unusual concepts…





John Wiltshire  September 3, 2022


  0  Collapse this comment
Copy link
Would love to see 6502 and Z80, especially with MS BASIC notes!  I’m a sucker for nostalgia though.





Richard Russell  September 2, 2022
· Edited

  0  Collapse this comment
Copy link
"In practice, nobody uses" the 8087 FPU registers?  Maybe not Microsoft's compilers but both GCC and Clang support the long double type which does use them.  There certainly are applications that need more precision and/or range than are available from double.  Only recently I wanted to estimate the total number of 2048-bit primes (a figure very relevant in cryptography) and the answer, about 1E613, is bigger than can be represented by a...Read more“In practice, nobody uses” the 8087 FPU registers?  Maybe not Microsoft’s compilers but both GCC and Clang support the long double type which does use them.  There certainly are applications that need more precision and/or range than are available from double.  Only recently I wanted to estimate the total number of 2048-bit primes (a figure very relevant in cryptography) and the answer, about 1E613, is bigger than can be represented by a double.
Read less







Raymond Chen Author
September 10, 2022


  0  Collapse this comment
Copy link
Thanks. Noted.




SpecLad  September 2, 2022


  0  Collapse this comment
Copy link
It would be nice to see an overview of RISC-V.





Brian Boorman  September 2, 2022


  0  Collapse this comment
Copy link
Early versions of Windows CE allegedly supported the StrongARM
Not allegedly. It did. I remember having PXA250 series processor EVK boards under early-access from Intel (2003 timeframe?) that booted up into Windows CE. We went with QNX on our design with those chips since it was for an embedded application with no screen or keyboard.





Dave Gzorple  September 2, 2022


  2  Collapse this comment
Copy link
How about anything created by TI, whose products have always been in a category all of their own.  No matter how you class a CPU family, by architecture or ISA type, the TI ones have always been "Other".  And I don't mean early things like the TMS9900 which date back to a time when companies would try anything, I mean the TMS320 series which is still in use today, or the MSP430, or...Read moreHow about anything created by TI, whose products have always been in a category all of their own.  No matter how you class a CPU family, by architecture or ISA type, the TI ones have always been “Other”.  And I don’t mean early things like the TMS9900 which date back to a time when companies would try anything, I mean the TMS320 series which is still in use today, or the MSP430, or various other lesser-known ones, all of which require that you purge your mind of any idea how a normal CPU is supposed to work and instead enter an alternate reality where things are really… weird.  Example: Jump instructions.  Now if you’ve never encountered how TI do things you’d wonder how strange a simple jump instruction could get.  Well the TI version has two variants, on of which stops execution for several cycles while it thinks about things and the other which keeps executing more instructions after the jump until it eventually catches up and jumps to where it’s supposed to go, a sort of combined jump and come-from instruction.  So while MIPS and Sparc had an easy-enough-to-think-about single-entry delay slot, TI’s DSPs may or may not have multiple-entry delay slots.
And that’s just scratching the surface of the weirdness…
Read less







Serghei  September 1, 2022


  0  Collapse this comment
Copy link
note:
si – source index
di – destination index
string ops





Ivan K  September 2, 2022


  0  Collapse this comment
Copy link
SPARC would be nice and nostalgic, having studied it in Uni. Same with the 68k, which we also wrote assembly for. The professor was kind enough to leave SPARC to just study material, and RISC programming was done on on some theoretical model of a RISC CPU, or maybe an older MIPS, I can't remember. Apparently when the SPARC trapped it just spilled its guts and left the OS to work out what to do...Read moreSPARC would be nice and nostalgic, having studied it in Uni. Same with the 68k, which we also wrote assembly for. The professor was kind enough to leave SPARC to just study material, and RISC programming was done on on some theoretical model of a RISC CPU, or maybe an older MIPS, I can’t remember. Apparently when the SPARC trapped it just spilled its guts and left the OS to work out what to do or something “inefficient” like that (not really, just a design choice)?
For more modern processors RISC V might be intersting (little Endian is still more efficient?). And for old school would be the VAX (they stuffed a polynomial instruction into it?).
Read less






Swap Swap  September 1, 2022
· Edited

  0  Collapse this comment
Copy link
> The legacy floating point registers are overlaid on top of the SIMD registers, and switching between legacy mode and SIMD mode requires the use of the very slow EMMS instruction.
This is true only for MMX (the legacy SIMD extensions), but not for SSE (the modern SIMD extensions, which are used in the calling convention). SSE registers (XMM0..XMM15) are completely separate from the 8087 floating-point unit. So technically you can use the 8087 floating-point registers...Read more> The legacy floating point registers are overlaid on top of the SIMD registers, and switching between legacy mode and SIMD mode requires the use of the very slow EMMS instruction.

This is true only for MMX (the legacy SIMD extensions), but not for SSE (the modern SIMD extensions, which are used in the calling convention). SSE registers (XMM0..XMM15) are completely separate from the 8087 floating-point unit. So technically you can use the 8087 floating-point registers in x64. No EMMS instruction is needed, but you will need to develop your own calling convention.
Read less







Raymond Chen Author
September 10, 2022


  1  Collapse this comment
Copy link
Thanks. Fixed.





Joshua Hudson  September 1, 2022


  0  Collapse this comment
Copy link
I wonder if this actually works. I can imagine the context switch not saving them.





Danielix Klimax  September 2, 2022


  0  Collapse this comment
Copy link
FXSAVE and FXRSTOR
Of course they have to be saved otherwise they’d be useless.





Swap Swap  September 3, 2022
· Edited

  0  Collapse this comment
Copy link
Windows already saves them when doing a context switch. Most compilers don’t generate x87 code for x64, but it works and has higher precision (long double) than SSE.