GSerg  October 9, 2019


  0  Collapse this comment
Copy link
And then there is .NET GC that may move objects around after they are created…





Ian Yates  October 10, 2019


  0  Collapse this comment
Copy link
I’d hope someone who knew how to get pointers of objects in c# and friends was also aware of how the GC works, pins their objects, etc. But even better, doesn’t fight the grain and just uses the built-in stuff that other devs following in their shoes would expect to find





Dan Bugglin  October 9, 2019


  0  Collapse this comment
Copy link
Well yeah but you can just use one of the three or four different timer classes built-in and none of them require you to create an ID.
But if you REALLY needed to, you can use Marshal.AllocHGlobal or whatever to get your unique pointer (assuming nothing else is allocating timers using non-pointer ids).




Tom Rothamel  October 9, 2019


  0  Collapse this comment
Copy link
It strikes me that this has an important caveat – the size of your ID has to be larger than or equal to the size of a pointer, or you could plausibly allocate two pointers that are the same in their lower bits. This caveat is true for SetTimer, but might not be true for other IDs that need to be assigned.





Reinhard Weiss  October 9, 2019


  0  Collapse this comment
Copy link
Using the this pointer is really a neat trick! How many consecutive IDs could I safely derivate from the this pointer? I assume only 4 if the class has no member variables and the program is compiled for x86.





Raymond Chen Author
October 9, 2019


  0  Collapse this comment
Copy link
EBO means that for a class with no member variables, you cannot even assume that your this is unique. Give yourself some member variables and use their addresses.