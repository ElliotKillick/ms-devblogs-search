紅樓鍮  May 14, 2020


  0  Collapse this comment
Copy link
I think this is also how  can work without RTTI.  Sy Brand gave a talk about this way of doing runtime polymorphism at Pure Virtual C++ Conference.  His talk illustrates the fact that when you have a good framework for static polymorphism and metaprogramming in a language, efficient dynamic polymorphism becomes very easy to implement as a library.  Either of which I still do not see the sign of coming to...Read moreI think this is also how std::any can work without RTTI.  Sy Brand gave a talk about this way of doing runtime polymorphism at Pure Virtual C++ Conference.  His talk illustrates the fact that when you have a good framework for static polymorphism and metaprogramming in a language, efficient dynamic polymorphism becomes very easy to implement as a library.  Either of which I still do not see the sign of coming to C# at any time soon.
Read less







Piotr Siódmak  May 13, 2020


  1  Collapse this comment
Copy link
Uglification: when you have printf, which calls _vfprintf_l (what’s _l?), which calls __stdio_common_vfprintf (where did _l go?).





skSdnW  May 13, 2020


  0  Collapse this comment
Copy link
I don't find it to be ugly.
The _l version is a bonus function that takes a locale parameter. Without looking at the code, I would imagine printf just calls a "getcurrentlocale()" style function and passes that along as the locale. The final function is the actual implementation and not part of the public API. Could printf call __stdio_common_vfprintf directly? Sure but it means more maintenance work if __stdio_common_vfprintf gains a new flag etc.
Read moreI don’t find it to be ugly.
The _l version is a bonus function that takes a locale parameter. Without looking at the code, I would imagine printf just calls a “getcurrentlocale()” style function and passes that along as the locale. The final function is the actual implementation and not part of the public API. Could printf call __stdio_common_vfprintf directly? Sure but it means more maintenance work if __stdio_common_vfprintf gains a new flag etc.
Read less