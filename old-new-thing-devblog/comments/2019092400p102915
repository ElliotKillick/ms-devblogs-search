John Elliott  September 26, 2019


  0  Collapse this comment
Copy link
Fortunately it's unlikely that if anyone changed floppies in under 2 seconds, it would lead to anything as bad as the Hull Paragon rail crash (when a particular action took 1.6 seconds, and happened to take place within the 1.9 second window when it would have led to disaster).
IIRC +3DOS on the Spectrum +3 also used a 2-second timeout to assume a disc had been changed after the last file on it was closed. Tended...Read moreFortunately it’s unlikely that if anyone changed floppies in under 2 seconds, it would lead to anything as bad as the Hull Paragon rail crash (when a particular action took 1.6 seconds, and happened to take place within the 1.9 second window when it would have led to disaster).
IIRC +3DOS on the Spectrum +3 also used a 2-second timeout to assume a disc had been changed after the last file on it was closed. Tended to annoy me, because with 720k discs it took an age to mount the disc again the next time it was accessed, so I preferred to use CP/M where the OS needed to be told explicitly that the disc had changed.
Read less







Ivan Kljajic  September 25, 2019


  0  Collapse this comment
Copy link
Well, maybe the hardware vendor’s stinginess also allowed programmers to be stingy? https://devblogs.microsoft.com/oldnewthing/?p=40473. If two seconds saves some DOS timestamp resolution bits then that leaves more room for more cool stuff? (Though I’m just guessing that the two two second things are related.)
So the solution is to write fat code that makes hardware vendors give more and charge more!





David Lewington  September 25, 2019


  0  Collapse this comment
Copy link
This reminded me of the most tedious jobs I had to do in my early career. I had to take 8 backups of an IBM 8100 (I think that's what it was). Each backup required many 8" floppy discs and each took just a few minutes to write to.  I soon realised that to minimise the amount of time this delightful task was going to take the time spent changing discs was critical. I...Read moreThis reminded me of the most tedious jobs I had to do in my early career. I had to take 8 backups of an IBM 8100 (I think that’s what it was). Each backup required many 8″ floppy discs and each took just a few minutes to write to.  I soon realised that to minimise the amount of time this delightful task was going to take the time spent changing discs was critical. I had to be ready to remove each disc with one hand and shove in the next one with the other hand. I could hear the heads retracting moments before the disc busy light went off and would get ready to pounce. There was a lock on the disc drive to slow me down too but I got this down to a fine art and slashed the overall time of the backup.
Read less







Rainer Wahnsinn  September 24, 2019


  0  Collapse this comment
Copy link
I guess I would have been able to beat 2 seconds. I had extensive floppy changing training while installing multiple Windowses and other games





Jeremy Richards  September 25, 2019


  0  Collapse this comment
Copy link
Keep in mind this is almost certainly with regard to 5.25" floppies not 3.5" floppies.  With the 5.25" ones, you had to rotate the lock mechanism, pull the floppy, insert the new floppy, hold it in and rotate the lock mechanism again.   Also keep in mind that the insertion slot for 5.25" is much narrower than for the 3.5" and the disk is less forgiving if you miss.  2 seconds sounds...Read moreKeep in mind this is almost certainly with regard to 5.25″ floppies not 3.5″ floppies.  With the 5.25″ ones, you had to rotate the lock mechanism, pull the floppy, insert the new floppy, hold it in and rotate the lock mechanism again.   Also keep in mind that the insertion slot for 5.25″ is much narrower than for the 3.5″ and the disk is less forgiving if you miss.  2 seconds sounds reasonable for 5.25″ disks.  I agree you can probably do faster with 3.5″ floppies since that is just push the ejector, remove the old one then shove the new one in.
I remember I really disliked CD-ROMs when they first came out because the eject button was software controlled (and frequently the disk took many seconds to eject after you pressed the button), rather than a mechanical release like the floppies had.
Read less







cheong00  September 25, 2019


  0  Collapse this comment
Copy link
Given he mentioned the floppy drive at that time does not have lock, it’s most likely a 8-inch one.
As far as I remember, at the time of 5.25-inch, the rotatory lock was almost a standard (at least I can’t remember seeing any drive that don’t have it)





Joshua Dye  September 27, 2019


  0  Collapse this comment
Copy link
I think  when talking about locking, he means software locking. He mentioned opening the drive as part of what was timed, and the Wikipedia article says that the IBM PC had 5.25" drives, which, looking at the pictures, definitely had a latch of some sort, though not the rotary lock I remember on all the 5.25" drives I dealt with.  He also mentioned that they didn't include the hardware for detecting the door...Read moreI think  when talking about locking, he means software locking. He mentioned opening the drive as part of what was timed, and the Wikipedia article says that the IBM PC had 5.25″ drives, which, looking at the pictures, definitely had a latch of some sort, though not the rotary lock I remember on all the 5.25″ drives I dealt with.  He also mentioned that they didn’t include the hardware for detecting the door being opened in order to save a NAND gate.
Read less






skSdnW  September 24, 2019


  0  Collapse this comment
Copy link
F1 pitstops are down to 2 seconds now so I guess anything is possible. The record stationary time is actually 1.92 seconds which is somehow less than one second to take a tire off and less than one to put another tire on.
https://www.youtube.com/watch?v=7VCYBtx6h4g




Jonathan Duncan  September 24, 2019


  0  Collapse this comment
Copy link
2 seconds seems a disappointingly short period of time that would miss many chances. How is the invalidation handled? Is it a per-block thing (each block is invalidated after 2 seconds without repeat reads) or a per-device thing (the entire device cache is invalidated if no reads come from that device in 2 seconds)?





Julien Oster  September 24, 2019


  0  Collapse this comment
Copy link
Given that the invalidation in question here is specifically about floppies being changed without knowledge of the system, it's almost certainly per-device (or even more coarse). You might want to invalidate individual blocks as well at some point if you have limited memory, but that's probably better done with a different policy, e.g. least recently used.
I think I remember that MS-DOS after 2.0 introduced "disk IDs" (just a somewhat random number assigned, usually, during formatting...Read moreGiven that the invalidation in question here is specifically about floppies being changed without knowledge of the system, it’s almost certainly per-device (or even more coarse). You might want to invalidate individual blocks as well at some point if you have limited memory, but that’s probably better done with a different policy, e.g. least recently used.
I think I remember that MS-DOS after 2.0 introduced “disk IDs” (just a somewhat random number assigned, usually, during formatting of the disk), probably specifically to be able to just read that ID to get a reasonable guess whether the user changed the disk or not.
Read less






Henke37  September 24, 2019


  0  Collapse this comment
Copy link
I find it amusing that I managed to guess this one.