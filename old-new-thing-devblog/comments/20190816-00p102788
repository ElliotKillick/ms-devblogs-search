David Walker  August 22, 2019


  0  Collapse this comment
Copy link
"Because duh."  I don't think it's obvious that a branch can't be followed by another branch.  There would be cascading delays, and maybe it's not a good idea for whatever reason, but why is it not allowed? 
Your trampoline example has a "BF skip" followed by a "BRA toofar+2".  The BRA seems to be in the branch delay slot for the BF, right??????
I have seen sequential Branch instructions, one after the other, where the...Read more“Because duh.”  I don’t think it’s obvious that a branch can’t be followed by another branch.  There would be cascading delays, and maybe it’s not a good idea for whatever reason, but why is it not allowed? 
Your trampoline example has a “BF skip” followed by a “BRA toofar+2”.  The BRA seems to be in the branch delay slot for the BF, right??????
I have seen sequential Branch instructions, one after the other, where the list is used as a target for a computed branch-into, like a function target list.  This would appear to have a branch instruction in the branch delay slot of each previous branch instruction (these might be unconditional branches, but sometimes these are conditional branches with all conditions set to True).
If this architecture doesn’t allow a branch instruction to follow another one, then that can’t be done…  I’m confused, but then again, microarchitectures are not my specialty.  The series is still interesting. 
And why doesn’t the adjustment in “branch to PC + Rn + 4” require a -4 instead of +4, to correct for the PC being 2 instructions (4 bytes) ahead of where we want to branch to?
Read less







Raymond Chen Author
August 23, 2019


  0  Collapse this comment
Copy link
I should have written "Because inception" rather than "Because duh". The  instruction does not have a delay slot; the  is consequently not in a delay slot and is therefore legal. The  in the PC-relative instructions exists because by the time the processor gets around to doing the work, PC has moved four bytes ahead of where we're branching from. You need to account for this when you calculate Rn.
Read moreI should have written “Because inception” rather than “Because duh”. The BF instruction does not have a delay slot; the BRA is consequently not in a delay slot and is therefore legal. The +4 in the PC-relative instructions exists because by the time the processor gets around to doing the work, PC has moved four bytes ahead of where we’re branching from. You need to account for this when you calculate Rn.
Read less






Joshua Hudson  August 17, 2019


  0  Collapse this comment
Copy link
I’d love to knock out the test for PC-relative addressing in the branch delay slot. It would lead to some really clever code by loading one of two values depending on whether the branch was taken or not.
Happy reverse engineering.





smf  August 17, 2019


  0  Collapse this comment
Copy link
Watch out: Even though the  and  instructions use an , there is no memory access going on. I don’t know why the mnemonic uses an .
The 6502 does the same thing, memory accessing instructions have the form LDA $12 while loading an immediate value is LDA #$12.
JMP & JSR both use $12. I guess it's because as soon as you load the program counter, the cpu will start reading data from that address. Even though the instruction...Read moreWatch out: Even though the JMP and JSR instructions use an @, there is no memory access going on. I don’t know why the mnemonic uses an @.
The 6502 does the same thing, memory accessing instructions have the form LDA $12 while loading an immediate value is LDA #$12.
JMP & JSR both use $12. I guess it’s because as soon as you load the program counter, the cpu will start reading data from that address. Even though the instruction itself is an immediate load into the program counter & should then include the #
Read less







Julien Oster  August 21, 2019


  0  Collapse this comment
Copy link
Yeah, it’s bad. Another way to see it, is “the jump target is an address”, and the @ (or lack of # on 6502) signifies whether something is to be treated as an address, but that does not make it less confusing, or inconsistent.




Sean Wang  August 16, 2019


  0  Collapse this comment
Copy link
I found it interesting that the second instruction in the branch "shadow" isn't also used, that way in certain situations no cycles can be wasted. I've worked on an architecture where different instructions had different numbers of delay slots (up to 3), so that up to 3 unconditional instructions can be placed after a branch to reduce the number of cycles wasted upon taking the branch. The assembler also seemed decently capable of moving instructions...Read moreI found it interesting that the second instruction in the branch “shadow” isn’t also used, that way in certain situations no cycles can be wasted. I’ve worked on an architecture where different instructions had different numbers of delay slots (up to 3), so that up to 3 unconditional instructions can be placed after a branch to reduce the number of cycles wasted upon taking the branch. The assembler also seemed decently capable of moving instructions into a delay slot for optimization. But this architecture was for a specialized co-processor, not a CPU. So it didn’t have to deal with trap instructions or things like that.
Read less







smf  August 17, 2019


  0  Collapse this comment
Copy link
It's probably a compromise based on how the SH-2 worked, not wasting memory on all those nop instructions & not wanting to complicate the compiler further. I like the MIPS R3000, it lets you put all the things in the branch delay slot that you aren't supposed to. If you put a branch in a branch delay slot then the second branch delay slot is the target of the first. If you do this with...Read moreIt’s probably a compromise based on how the SH-2 worked, not wasting memory on all those nop instructions & not wanting to complicate the compiler further. I like the MIPS R3000, it lets you put all the things in the branch delay slot that you aren’t supposed to. If you put a branch in a branch delay slot then the second branch delay slot is the target of the first. If you do this with interrupts enabled and one hits when it’s executing that instruction, then things go bad.
Read less






Dave Sanderman  August 16, 2019


  0  Collapse this comment
Copy link
i think i enjoy these articles the way people enjoy true crime TV shows. morbid fascination.