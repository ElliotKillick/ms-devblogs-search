Melissa P  July 31, 2023


  0  Collapse this comment
Copy link
“Since it occurs in Explorer, this can be exploited to escalate privileges.” .. err, what? Why does that “bug reporter” talk about privilege escalation? I don’t see any.
The stack trace is kinda straight forward, and the 409 is STATUS_FAIL_FAST_EXCEPTION. I did not know that it was once called  STATUS_STACK_BUFFER_OVERRUN. Interesting.





Gavin Lambert  August 9, 2023


  0  Collapse this comment
Copy link
> Why does that “bug reporter” talk about privilege escalation? I don’t see any.
Because to people looking for “hacker clout” without actually knowing what they’re talking about, a buffer overrun always means privilege escalation.  Ignoring that this case isn’t actually a buffer overrun, and that even if it was, Explorer does not (typically) run with elevated privileges.  At most it might be “arbitrary code execution”, but it’s not even that.





Chris Iverson  August 1, 2023


  0  Collapse this comment
Copy link
> and the 409 is STATUS_FAIL_FAST_EXCEPTION
What? No it’s not. “STATUS_FAIL_FAST_EXCEPTION” is 0xC0000602.
0xC0000409 is still defined as “STATUS_STACK_BUFFER_OVERRUN”.
The subcode of the exception indicates that it’s a fast-fail. But it’s not returning the “STATUS_FAIL_FAST_EXCEPTION” NTSTATUS error code.




Larry Osterman  July 31, 2023


  1  Collapse this comment
Copy link
Another reason that C++ exceptions can’t cross the ABI boundary is that there is no binary contract for C++ exceptions. Even if the calling code WAS written in C++, there’s no guarantee that the same compiler was used for both sides of the binary. Or the same version of the same compiler. Or with the same compiler switches.