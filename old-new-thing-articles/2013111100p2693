


	
        How did Raymond discover his carrier-screaming talent? And his homemade Marauder's Map          Raymond Chen        
            
            November 11th, 20130 0
		
        George wonders, “I am curious how Raymond found about his talent.  Maybe it will be an interesting post.”
 This isn’t like a superhero who discovers as a young adult that he has powers beyond that of mortal men. And there was no radioactive spider. It was a simple case of problem-solving.
 The basic way of checking whether the mainframe was up was to go into the lab and see if the terminals responded. But of course this meant having to hang around in the  lab building all day.
 The next way of checking whether the mainframe was up was to stay in your dorm room doing some other work while  listening to a portable cassette recorder, and then every so often firing up your computer and trying to dial in. If the mainframe responded, you packed up your bag and headed to the lab. Otherwise, you stayed in your room and kept working. (I was one of the fancy kids with my own computer.)
 It was a bit of a disruption to have to fire up my computer (or, if I was already using the computer to play a ga^W^W^Wwork hard on a paper, to save what I was doing, exit the program, and then fire up the terminal program), so I tried to fake it by screaming the carrier into the phone.
 And once that worked, I realized I was no longer tied to my dorm room and could go about my regular business around campus, calling in every so often to see if the mainframe was up.
 Why scream and not whistle? Because I can’t whistle loud enough for the modem on the other end to hear me clearly.
 “Wait a second, it was the answering modem’s responsibility to send carrier first. Why did you need to say anything at all? Just listen for the answering carrier.”
 For some reason, the mainframe always sent answer carrier regardless of whether the system was up or not. To see if it was actually up, you had to send originator carrier, and then see if it responded with modulated tones. I have no idea why it worked that way, but I took advantage of it: I don’t have perfect pitch, so having the answer tone as a reference let me generate my originator tone more accurately.
 I later discovered that the mainframe also treated a certain DTMF tone as equivalent to originator carrier. (I don’t remember which one. Didn’t realize there would be a quiz twenty-five years later.) Therefore, if I was calling from a touch-tone phone, I could push the appropriate button instead of having to scream.
 And in case you were looking for a demonstration, I’m afraid I will have to disappoint you. The passage of time has damaged by carrier-screaming ability. I can’t quite get to a high-enough pitch any more.
 Okay, so that wasn’t an interesting post. To make up for it, here’s something interesting:
 There was a command on the mainframe to list all the users who were logged on, and one of the pieces of data that you got for each logged-on user was a four-digit hex value that everybody ignored. It took a while, but I eventually realized that the value was statically-assigned to each terminal.
 Over the next several weeks, I visited as many computer terminals on campus as I could, including some really obscure ones, like the abandoned acoustic-coupler terminal on the second-and-a-half floor of the library, and collected the terminal IDs. Then I wrote a program that  drew a map of every terminal room on campus with the name of the logged-on user printed in the appropriate location.
 The upshot of this was that if I saw a friend online, I could usually tell exactly where they were. (If they were at a terminal ID assigned to a dial-up line, then I assumed they were in their dorm room.) Occasionally, they’d appear at a previously-unknown terminal ID, and I’d ask them where they were, so I could add it to my little collection.
 In my third year, they redesigned the university network and terminal IDs were assigned dynamically, thereby rendering my program useless. But it was pretty awesome while it lasted. I could notice that a classmate was online and write, “Hey, I’ll be right over. You going to be in the Physics Lab for a while?” And they’d be like, “How’d you know I was in the Physics Lab?” 

        
                

        
		
                

            
            
                
                    Raymond Chen                
                
            
            

                
        
            Follow 
          
                
            
        
                
            
    
   

        

            

            
       
        
	




	

		Tagged Non-Computer
	

