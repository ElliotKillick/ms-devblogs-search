


	
        User interface design for interior door locks          Raymond Chen        
            
            January 13th, 20050 0
		
        How hard can it be to design the user interface of an interior door lock?
Locking or unlocking the door from the inside is typically done with a latch that you turn. Often, the latch handle is in the shape of a bar that turns.
Now, there are two possible ways you can set up your lock. One is that the a horizontal bar represents the locked position and a vertical bar represents the unlocked position. The other is to have a horizontal bar represent the unlocked position and a vertical bar represent the locked position.
For some reason, it seems that most lock designers went for the latter interpretation. A horizontal bar means unlocked.
This is wrong.
Think about what the bar represents. When the deadbolt is locked, a horizontal bar extends from the door into the door jamb. Clearly, the horizontal bar position should recapitulate the horizontal position of the deadbolt. It also resonates with the old-fashioned way of locking a door by placing a wooden or metal bar horizontally across the face. (Does no one say “bar the door” any more?)
Car doors even followed this convention, back when car door locks were little knobs that popped up and down. The up position represented the removal of the imaginary deadbolt from the door/jamb interface. Pushing the button down was conceptually the same as sliding the deadbolt into the locked position.
But now, many car door locks don’t use knobs. Instead, they use rocker switches. (Forwards means lock. Or is it backwards? What is the intuition there?) The visual indicator of the door lock is a red dot. But what does it mean? Red clearly means “danger”, so is it more dangerous to have a locked door or an unlocked door? I can never remember; I always have to tug on the door handle.
(Horizontally-mounted power window switches have the same problem. Does pushing the switch forwards raise the window or lower it?)

        
                

        
		
                

            
            
                
                    Raymond Chen                
                
            
            

                
        
            Follow 
          
                
            
        
                
            
    
   

        

            

            
       
        
	




	

		Tagged Non-Computer
	

