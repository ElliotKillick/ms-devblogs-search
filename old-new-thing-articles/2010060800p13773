


	
        Proto-Microspeak: Bug-hugging          Raymond Chen        
            
            June 8th, 20100 0
		
        Bug-hugging is the phenomenon of programmers keeping bugs assigned to themselves without actually doing anything to fix them. You typically engage in bug-hugging when there is a bug that you feel strongly should be fixed, but which you also simply haven’t gotten around to working on yet. Meanwhile the bug sits and collects dust. You resist allowing the bug to be postponed to the next release because, “We really ought to fix this,” and you also  resist allowing the bug to be reassigned to another programmer on the team because “Only I know what needs to be done to fix this.”
On the other hand, you are so busy with other things that you never manage to get around to fixing that bug, or because the fix is actually quite complicated and you haven’t been able to come up with a big enough stretch of available time to devote to fixing it properly. In some cases, the bug is actually a enormous amount of work, and you don’t really want to fix it, but you also can’t bear to part with it.
Think of it as the software version of  hoarding. You know in your head that you can’t fix it, but in your heart you can’t bear to let it go. To put it in the vernacular, you have to piss or get off the pot.
The behavior is well-intentioned but ultimately harmful to a project shipping on time because it prevents project management from truly understanding how close the project is to being finished, and your affection for the bug prevents them from reassigning it to somebody who has  room on his plate to fix it.
The kicker is that these bugs that are so fiercely held like a security blanket are often ones with relatively low impact, or even feature requests disguised as bugs. “When I do X, then Y, then Z, it would be nice if there was an option to Q directly from the dialog box.” Well yeah, it would be nice, but it’s not in the product specification, and we have no research data to indicate that adding the Q option to the dialog box won’t create confusion or there is a significant body of users who want a Q option on that dialog box in the first place.
Here is a citation:
We have a considerable bug backlog here, and it looks like we’re about a week behind, but I suspect there’s a lot of bug-hugging hiding in these numbers. We plan on working with programmers over the next week to get these numbers to be more realistic.
The term was coined by a manager here at Microsoft only recently, so it’s not really Microspeak yet because it hasn’t demonstrated any staying power. I’ll file it under Proto-Microspeak.

        
                

        
		
                

            
            
                
                    Raymond Chen                
                
            
            

                
        
            Follow 
          
                
            
        
                
            
    
   

        

            

            
       
        
	




	

		Tagged Microspeak Other
	

