


	
        When you are looking for more information, it helps to say what you need the information for          Raymond Chen        
            
            February 2nd, 20120 0
		
        
It’s often the case that when a question from a customer
gets filtered through a customer liaison,
some context gets lost.
(I’m giving the customer the benefit of the doubt here
and assuming that it’s the customer liaison that removed
the context rather than the customer who never provided it.)
Consider the following request:


We would like to know more information about
the method the shell uses to resolve shortcuts.


This is kind of a vague question.
It’s like asking
“I’d like to know more about the anti-lock braking system
in my car.”
There are any number of pieces of information that could be
provided about the anti-lock braking system.


“It requires a Class C data bus.”
“The tire position sensors are on the wheel-axis.”
“It is connected to the brakes.”
“It is shiny.”


When we ask the customer,
“Could you be more specific what type of information you are looking for?”
the response is sometimes


We want to know everything.


This is not a helpful clarification.
Do they want to start with Maxwell’s Equations and build up from there?


As it happened, in the case of wanting more information
about

the method the shell uses to resolve shortcuts,
they just wanted to know how to disable the search-based algorithm.


This sort of “ask for everything and figure it out later”
phenomenon is quite common.
I remember another customer who wanted to know “everything” about
changing network passwords,
and they wouldn’t be any more specific than that,
so we said,
“Well,
you can start with

these documents,
perhaps paying particular attention to

this one,
but if they tell us what they are going to be doing with the information,
we can help steer them to the specific parts that will be most useful
to them.”


As it turned out, all the customer really wanted to know was
“When users change their password, is the new password encrypted
on the wire?”


Third example, and then I’ll stop.
Another customer wanted to know everything about how Explorer
takes information from the file system and displays it in an Explorer
window.
After asking a series of questions, we eventually figured out that
they in fact didn’t want or need a walkthrough of the entire code path
that puts results in the Explorer window.
The customer simply wanted to know

why two specific folders show up in
their Explorer window with names that didn’t match the file system name.


When you ask for more information,
explain what you need the information for,
or at least be more specific what kind of “more information” you need.
That way, you save everybody lots of time.
The people answering your question don’t waste their time
gathering information you don’t need
(and gathering that information can be quite time-consuming),
and you don’t waste your time sifting through all the information
you don’t want.


You might say that these people are employing

the for-if anti-pattern:


foreach (document d in GetAllPossibleDocumentation())
{
 if (d.Topic == "password encryption on the wire") return d;
}


        
                

        
		
                

            
            
                
                    Raymond Chen                
                
            
            

                
        
            Follow 
          
                
            
        
                
            
    
   

        

            

            
       
        
	




	

		Tagged email Other
	

