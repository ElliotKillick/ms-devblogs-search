


	
        Organizing the five creation dispositions of the Create­File function          Raymond Chen        
            
            July 22nd, 20249 4
		
        The Create­File function has five different creation disposition values. Let’s organize them.
If a file of the requested name doesn’t already exist, you have two choices: You can fail the operation, or you can create a new file.
If a file of the requested name already exists, you have three choices: You can fail the operation, you can open the existing file and preserve the existing data, or you can open the existing file but set the file length back to zero (truncate), discarding any existing file contents.
Now that we see the possibilities, we can make our table.



If file exists
If file doesn’t exist


Fail
Create


Fail
 
CREATE_NEW


Open
OPEN_EXISTING
OPEN_ALWAYS



Truncate
TRUNCATE_EXISTING
CREATE_ALWAYS



“Hey, wait, I found a hole in your API. You missed a case: The upper left box is empty!”
That’s right, but the upper left box is “Fail if the file exists, and fail if the file doesn’t exist.” If we had to give that box a name, it would be something like FAIL_ALWAYS.
Which isn’t particularly useful.
If it’s that important to you, I guess you can simulate it yourself:
HANDLE CreateFileFailAlways()
{
    SetLastError(ERROR_OPEN_FAILED);
    return INVALID_HANDLE_VALUE;
}


        
                

        
		
                

            
            
                
                    Raymond Chen                
                
            
            

                
        
            Follow 
          
                
            
        
                
            
    
   

        

            

            
       
        
	




	

		Tagged Code
	

