


	
        If you don’t know what you’re going to do with the answer to a question, then there’s not much point in making others work hard to answer it          Raymond Chen        
            
            April 17th, 20130 0
		
        A customer asked the following question:
  We’ve found that on Windows XP, when we call the XYZ function with the Awesome flag, the function fails for no apparent reason. However, it works correctly on Windows 7. Do you have any ideas about this? 

 So far, the customer has described what they have observed, but they haven’t actually asked a question. It’s just nostalgia, and  nostalgia is not a question. (I’m rejecting “Do you have an ideas about this?” as a question because it too vague to be a meaningful question.) 
  Please be more specific about your question. Do you want to obtain Windows 7-style behavior on Windows XP? Do you want to obtain Windows XP-style behavior on Windows 7? Do you merely want to understand why the two behave differently? 

 The customer replied, 
  Why do they behave differently? Was it a new design for Windows 7? If so, how do the two implementations differ? 

 I fired up a handy copy of Windows XP in a virtual machine and started stepping through the code, and then I stopped and realized I was about to do a few hours’ worth of investigation for no clear benefit. So I stopped and responded to their question with my own question. 
  Why do you want to know the reason for the change in behavior? How will the answer affect what you do next? Consider the following three answers: 

“The behavior was redesigned in Windows 7.” 
“The Windows XP behavior was a bug that was fixed     in Windows 7.” 
“The behavior change was a side-effect of a Windows Update     hotfix.” 

 What will you do differently if the answer is (1) rather than (2) or (3)? 

 The customer never responded. That saved me a few hours of my life. 
 If you don’t know what you’re going to do with the answer to a question, then there’s not much point in others working hard to answer it. You’re just  creating work for others for no reason. 

        
                

        
		
                

            
            
                
                    Raymond Chen                
                
            
            

                
        
            Follow 
          
                
            
        
                
            
    
   

        

            

            
       
        
	




	

		Tagged Other
	

