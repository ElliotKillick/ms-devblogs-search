


	
        Why doesn't the Maximize button maximize across all monitors?          Raymond Chen        
            
            March 5th, 20120 0
		
        Cheong wonders why  there isn’t a way for the Maximize button to maximize a window across multiple monitors. (Troll asks a similar question:  Why doesn’t Windows support spanned mode for multiple monitors?)
 We tried it that way at first. And we quickly discovered why it was a bad idea.




     Having multiple monitors behave as a single giant display surface     creates a bunch of problems,     because there’s this annoying line down the center     that breaks up everything it touches.     Everything on one side of the line is on one monitor     and everything on the other side of the line is on the other     monitor.     (And add additional annoying lines if you have more than two monitors.)     If that line intersects text, then you have letters chopped in half,     and then you have to mentally glue the two pieces back together in order     to read them.     
     What’s even worse, the broken-up-text problem shows up more often     than you might expect, because a lot of programs like to do things     like center their dialog boxes.     The result is that nearly every dialog box that you see     is perfectly bisected by the annoying line.     The dialog boxes consistently appear in the worst possible location.     




     (Accessibility note: The text in this table cell is identical     to the text in the previous cell.)     
     Having multiple monitors behave as a single giant display surface     creates a bunch of problems,     because there’s this annoying line down the center     that breaks up everything it touches.     Everything on one side of the line is on one monitor     and everything on the other side of the line is on the other     monitor.     (And add additional annoying lines if you have more than two monitors.)     If that line intersects text, then you have letters chopped in half,     and then you have to mentally glue the two pieces back together in order     to read them.     
     What’s even worse, the broken-up-text problem shows up more often     than you might expect, because a lot of programs like to do things     like center their dialog boxes.     The result is that nearly every dialog box that you see     is perfectly bisected by the annoying line.     The dialog boxes consistently appear in the worst possible location.     








     It gets worse if the two monitors do not have exactly the same     dot pitch,     because it means that no matter how you position your monitors,     you will never get all the lines of text to line up perfectly.     If you carefully align the monitors so that, say, the baselines     of the first lines of text match up,     you’ll find that the bottom lines don’t.     Not only do your eyes have to navigate the horizontal     gap between the monitors,     they also have to navigate the vertical gap created by the     pixel density mismatch.     Which is even harder because the vertical gap varies from     line to line.     
     It’s like that trick where          you put a pencil in a glass of water and observe it from the side.     Now imagine a glass filled with pencils, and each pencil refracts     differently.     And now imagine each pencil is a line of text you’re trying to read.     




     (Accessibility note: The text in this table cell is identical     to the text in the previous cell.)     
     It gets worse if the two monitors do not have exactly the same     dot pitch,     because it means that no matter how you position your monitors,     you will never get all the lines of text to line up perfectly.     If you carefully align the monitors so that, say, the baselines     of the first lines of text match up,     you’ll find that the bottom lines don’t.     Not only do your eyes have to navigate the horizontal     gap between the monitors,     they also have to navigate the vertical gap created by the     pixel density mismatch.     Which is even harder because the vertical gap varies from     line to line.     
     It’s like that trick where          you put a pencil in a glass of water and observe it from the side.     Now imagine a glass filled with pencils, and each pencil refracts     differently.     And now imagine each pencil is a line of text you’re trying to read.     




 Wait, I’m not finished yet. Things get still worse if your two monitors are not the same size. In that case, the virtual screen is larger than the visible region. For example, my monitor arrangement has a landscape monitor on the left and a portrait monitor on the right, with the bottoms of the monitors aligned.





◀
 
 Virtual monitor 
 
▶


 
 







Monitor 2



▲


 
 


VirtualMonitor


 
 


▼





Monitor 1


 If a window were maximized across the virtual screen, the contents of the upper left corner would not be visible at all!
 Now, there may be specific cases where it would be meaningful to maximize a window across the virtual monitor, and if a program wants to do that, it can certainly implement that on its own. But even for a picture-viewing application, maximizing across the virtual monitor may not be a great idea: Pictures often have people in the center, and then you end up with somebody’s head cut in half. 

        
                

        
		
                

            
            
                
                    Raymond Chen                
                
            
            

                
        
            Follow 
          
                
            
        
                
            
    
   

        

            

            
       
        
	




	

		Tagged Other
	

