


	
        How to write like Raymond: The typing-saver          Raymond Chen        
            
            January 18th, 20221 0
		
        Here’s another installment in the extremely sporadic series on How to write like Raymond.
Last time, I discussed how  the using statement can be used to create type aliases in C# and C++. The aliases are not types in their own right; they just let you refer to another type in a more convenient way.
The nickname I have for things like type aliases is typing-saver.
In the git source control system, a lightweight tag is just a typing-saver for a commit hash. Tags are not version-controlled, you can’t merge them, you can’t do anything with them except share them with others. They’re just a sticky-note with a hash written on it.
In the Perforce source control system, a branch is just a typing-saver for an integration. Although people casually talk about branches to refer to the set of files on the right-hand side of the branch specification, the branch specification itself is used just for describing the relationship between two sets of files; it is not the files themselves. Although it is common for this relationship to be a direct mapping between trees, a branch specification could in principle establishes relationships between files scattered all over the depot.
So if you want to write like me, pull out the phrase “typing-saver” whenever you talk about things that allow you to type something short instead of something longer, but which doesn’t add any features beyond that.

        
                

        
		
                

            
            
                
                    Raymond Chen                
                
            
            

                
        
            Follow 
          
                
            
        
                
            
    
   

        

            

            
       
        
	




	

		Tagged Non-Computer
	

