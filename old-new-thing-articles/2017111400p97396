


	
        Microspeak: FCIB          Raymond Chen        
            
            November 14th, 20170 0
		
        FCIB (pronounced either by spelling it out F-C-I-B or as a sort-of acronym eff-sib) stands for “foreign checked-in binary”. It refers to content checked into a project as binary output, rather than as source code. 
For example, a photo management project may use a facial recognition module provided by a team in Microsoft Research. There are few different ways this can play out. 
One way is for the facial recognition team to provide source code drops to the photo management project. The photo management project checks that code into their project and compiles the source code and incorporates it into their program. 
Another way this could be done is for the facial recognition team to compile their own source code and send either object files or complete DLLs to the photo management team. The photo management project checks those object files or DLLs into their program (“foreign checked-in binaries”) and links it into their program. 
The term FCIB didn’t originally mean “foreign checked-in binary”. According to legend, a component was being added to a team’s project as a checked-in binary, and the development manager in charge of the project is reported to have exclaimed in frustration, “Not another f—ing checked-in binary!” 
Thus was born the acronym FCIB. 
Initially, the term FCIB was used internally within the project, but eventually they had to explain this acronym to others, and that’s where the sanitized version came in. 
Bonus history: The Ancillary Function Driver is called AFD.SYS, but that name is also a sanitized version of its original name. When the networking team realized that they had to add a kernel-mode driver to Windows, the development manager is reported to  have replied, “What? Another f—ing driver?” 

        
                

        
		
                

            
            
                
                    Raymond Chen                
                
            
            

                
        
            Follow 
          
                
            
        
                
            
    
   

        

            

            
       
        
	




	

		Tagged History Microspeak
	

