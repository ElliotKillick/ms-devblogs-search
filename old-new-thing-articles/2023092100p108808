


	
        How does Explorer calculate the “Date” of a file?          Raymond Chen        
            
            September 21st, 20239 7
		
        Windows File Explorer has a column called “Date”. Not “Date created” or “Date modified”. Just “Date”. What is “Date”?
The “Date” is what Explorer thinks is the most relevant date for the item in question. And what determines that relevance depends on what kind of file it is.
Note that this table is not contractual. If you are looking to get this Date value programmatically, keep reading.



Kind
Example
Primary
Secondary
Tertiary


Music
.mp3
DateAcquired
 
DateEncoded


Picture
.jpg
DateTaken
 
 


Document
.pdf
DateSaved
DateModified
 


Movie
(?)
DateAcquired
 
DateEncoded


Recorded TV
.dvr-ms
OriginalBroadcastDate
DateReleased
DateEncoded


Video
.mp4
DateReleased
DateEncoded
DateAcquired


Email
.eml
DateReceived
DateSent
 


Contact
.vcf
DateModified
DateCreated
 


Calendar
.ics
StartDate
 
 


Task
(?)
StartDate
 
 


Folder
 
DateCreated
 
 



Some of the file extensions are given as question marks because Windows doesn’t come with any built-in declarations for those kinds, but  applications can register new extensions for specific kinds, and it’s possible that you’ve installed a program that does say “Oh, yeah, my files are movies.”
The system first looks for a value associated with the primary property. If no value is found, then it looks for the secondary. If still not found, then it looks for the tertiary. If nothing works, then system chooses the earlier of the DateCreated or DateModified.
If you want to get this value programmatically, then the thing not to do is to try to replicate the above table, because the details of that table can change as the shell team decides to tweak its heuristics.
Instead, use the shell data model and query  the System.ItemDate property, also known as PKEY_ItemDate. Here’s a sample. Note that all error checking has been elided for simplicity of exposition.
void PrintFileDate(PCWSTR fullPath)
{
    CComPtr<IShellItem2> item2;
    SHCreateItemFromParsingName(fullPath, nullptr, IID_PPV_ARGS(&item2));
    FILETIME ft{};
    item->GetFileTime(PKEY_ItemDate, &ft);
    wchar_t buffer[256];
    SHFormatDateTimeW(&ft, nullptr, buffer, 256);
    wprintf("%ls\n", buffer);
}


        
                

        
		
                

            
            
                
                    Raymond Chen                
                
            
            

                
        
            Follow 
          
                
            
        
                
            
    
   

        

            

            
       
        
	




	

		Tagged Code Tips/Support
	

