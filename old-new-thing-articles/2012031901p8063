


	
        The most exciting part of my morning is catching my bus, specifically, making the transfer          Raymond Chen        
            
            March 19th, 20120 0
		
         Note: Transit nerd content. You have been warned. 
  I still rely on One Bus Away to tell me when my bus is coming. Recent changes in bus service means that there is no longer a direct bus from my neighborhood to my work. My basic options are as follows: 

Walk 3 minutes to Stop A (my neighborhood stop),     catch Bus 1 (comes every 30 minutes), ride for 11 minutes,     get off at Stop X,     then walk 15 minutes to work. 
Walk 7 minutes to Stop B, where I can 

catch Bus 2 (comes every 10 minutes), 

ride 7 minutes, get off at Stop X, then walk 15 minutes to work. 
ride 13 minutes, get off at Stop Y, then walk 8 minutes to work. 


catch Bus 3 (comes every 5 minutes), ride 9 minutes,     get off at Stop Z, then walk 12 minutes to work. 






Start
walk: 3 minutes
Stop A
Bus 1
11 minutes
Stop X
walk: 15 minutes
Finish


walk: 7 minutes
Stop B
Bus 2
7 minutes


13 minutes
Stop Y
walk: 8 minutes


Bus 3
9 minutes
Stop Z
walk: 12 minutes


prep: 2 minutes
ride bicycle: 25 minutes
park: 2 minutes


 If you sit and work out the math, the total travel time for all the options is about the same, around 29 minutes. Which is about the same time it takes me to ride my bicycle, so it basically doesn’t matter which route I take, especially since traffic lights randomize the travel time by a few minutes each way. But the paradox of choice means that I still try to optimize something that is basically irrelevant. (I’ll spare you the calculations that went into choosing which bike route to use!) 
 Anyway, my morning commute-decision algorithm is: 

Do I want to ride my bicycle? If so, then ride.     (This is the most common branch.) 
Else, is Bus 1 coming soon? If so, then go to Stop A. 
Else, walk to Stop B     and take whichever bus comes next (usually Bus 3). 

 The excitement is the Stop X extension. 
 I recently discovered that there’s another route, Bus 4, which runs parallel to buses 1 and 2 for a stretch (for stops V, W, and X), and which then veers away and drops me off in front of my building. If I’m on Bus 1 or Bus 2, I can check on the status of Bus 4, and if it’s only a few minutes behind the bus that I’m on, then some new options become available. 
 The high-risk option is to transfer at Stop V. This is a high-risk move because if I don’t time it right, I end up having to wait for the next Bus 2 to resume my commute. 
 The next safer option is to transfer at Stop W, which is only twenty minutes of walking from my office. (Update: Bus 2 does not stop at W.) 
 The safest option is to transfer at Stop X, since the only downside is that I do the normal amount of walking anyway. But this has a higher risk of missing the connection because I have to cross the street to get from one bus stop to the other, and it’s a busy street, so I may have to wait a long time before I get the Walk signal. 
 When one of these higher-risk moves comes into play, I will use  Realtime Transit, which plots the locations of the buses on a map, so I can decide whether I feel lucky today, punk. 
 Last Friday was my first opportunity to try out the Stop X extension, and it was a nail-biter, because the bus locations in the Realtime Transit application were inconsistent. Sometimes, Bus 4 would show up a bit too close for comfort (it might end up passing my bus because my bus stops more often), and then sometimes it would show up miles and miles away. 
 Stop V was too risky. If the nearby bus was just a mirage, then I got off a perfectly good bus and stranded myself. As we neared Stop W, I looked out the back window of the bus and didn’t see a Bus 4 in the distance, so I decided to go for the safe approach and get off at Stop X. 
 As I waited for the traffic light to change, I saw Bus 4 go zooming past. 
 One of the days, I will actually succeed at making the Stop X extension. 


        
                

        
		
                

            
            
                
                    Raymond Chen                
                
            
            

                
        
            Follow 
          
                
            
        
                
            
    
   

        

            

            
       
        
	




	

		Tagged Non-Computer
	

