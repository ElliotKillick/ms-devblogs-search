


	
        If you didn’t like the answer, asking the same question again is unlikely to help          Raymond Chen        
            
            January 20th, 20090 0
		
        I find it surprising how often this happens. A customer liaison will send a question to a mailing list like this:
  From: X To: Gizmo Discussion 
 Hi, everybody. 
 My customer is using the Gizmo Toolkit and wants to frob a gizmo without first registering as a frobber. They created the gizmo with CreateGizmo, passing all the default flags, and then they call AttachGizmo to attach the gizmo to a sprocket. When the sprocket detects that its host is decycling, it tries to frob the gizmo by calling FrobGizmo, but the call fails. They can’t register the sprocket as a frobber because the sprocket doesn’t have the right frob context. They tried setting the DefaultFrobContext registry key to Any but that didn’t help. How can they frob the gizmo? 

 Somebody from the Gizmo team will reply, “Sorry, but you have to register as a frobber before you can frob a gizmo. The DefaultFrobContext registry key doesn’t help you here; it’s for cogs, not sprockets. There is no analogous registry key for sprockets, sorry.” 
 That seems to be the end of it; there is no further response. Then about two weeks later, some other person will ask a suspiciously similar question. 
  From: Y To: Gizmo Discussion 
 Hello. I hope somebody can help us with this. 
 My customer is using the Gizmo Toolkit and wants to frob a gizmo without first registering as a frobber. They created the gizmo with CreateGizmo, passing all the default flags, and then they call AttachGizmo to attach the gizmo to a sprocket. When the sprocket detects that its host is decycling, it tries to frob the gizmo by calling FrobGizmo, but the call fails. They can’t register the sprocket as a frobber because the sprocket doesn’t have the right frob context. They tried setting the DefaultFrobContext registry key to Any but that didn’t help. How can they frob the gizmo? 

 Hm, that question looks awfully familiar, let me look in the archives and… hey, it’s a word-for-word copy of the same question somebody else asked two weeks ago! 
 In situations like this, I tend to respond by attaching the original reply with the text, “I refer the honourable gentleman to the answer given some moments ago.” 
 Okay, maybe the customer was not happy with the answer and instead of elaborating on their situation (so somebody might be able to spot an alternate design that avoided this problem), they just reopened the case and got a different liaison the second time. Maybe person Y was simply duped into asking the same question. 
 And then this happens. 
  From: Y To: Windows Programming Discussion 
 Greetings. 
 My customer is using the Gizmo Toolkit and wants to frob a gizmo without first registering as a frobber. They created the gizmo with CreateGizmo, passing all the default flags, and then they call AttachGizmo to attach the gizmo to a sprocket. When the sprocket detects that its host is decycling, it tries to frob the gizmo by calling FrobGizmo, but the call fails. They can’t register the sprocket as a frobber because the sprocket doesn’t have the right frob context. They tried setting the DefaultFrobContext registry key to Any but that didn’t help. How can they frob the gizmo? 

 Okay, so much for the theory that person Y was a victim. Person Y is clearly fishing around, hoping that if you ask the right person, you’ll get an answer you like. It’s sort of like the teenager who asks his father, “Can I borrow your car?” When Dad says, “No,” the teenager goes to his mother and asks, “Can I borrow Dad’s car?” in the hopes that maybe Mom will give a more favorable answer than Dad. 
 But if you’re asking a question about the Gizmo Toolkit, it’s going to get routed to the Gizmo team one way or another. And  if you ask the same, identical question, you’re going to get the same, identical answer, just with a greater degree of exasperation each time you ask it again. 
 “Can I have a pony?” — No “Can I have a pony?” — No. “Can I have a pony?” — No. 
 Let me draw you a picture. 

        
                

        
		
                

            
            
                
                    Raymond Chen                
                
            
            

                
        
            Follow 
          
                
            
        
                
            
    
   

        

            

            
       
        
	




	

		Tagged email Other
	

