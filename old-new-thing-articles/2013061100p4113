


	
        An introduction to COM connection points          Raymond Chen        
            
            June 11th, 20130 0
		
        

Last time,
we saw how to enumerate all the Internet Explorer and
Explorer Windows and see what they are viewing.
But that program printed static information.
It didn’t track the changes to the windows if the user
clicked to another Web page or navigated to a different folder.


In order to hook that up, we
need to understand the connection point model and the
way events are expressed in dispatch interfaces.
First, let’s look at the connection point model.
These topics confused me when I first met them
(in part because I didn’t do a good job of mentally
separating them into two topics and instead treated it
as one big topic),
so I’m going to spend a few days
trying to explain how it works,
and then later this week, we’ll actually hook things up.
(And actually hooking it up is a lot easier than explaining it.)


Today, the connection point model.


Suppose you have a widget which can have multiple clients.
The clients can communicate with the widget by invoking methods
on the widget, like
IWidget::Set­Color.
but how does the widget communicate with its clients?
Well, since this is COM, the first thing you need is an interface,
say,
IWidget­Client.
The idea is that each client implements
IWidget­Client,
and when the widget needs to, say, notify each client that
the color changed,
it can invoke
IWidget­Client::On­Color­Changed
on each one.
Each client can register with the widget for notifications.


The COM interface for standardizing the registration mechanism
is IConnection­Point.
A connection point
acts as a middle-man between
the widget and all its clients:
Whenever the widget needs to notify all its clients,
it tells the connection point to do it.





    
    Widget
    
    
    ConnectionPoint
    →
    
    Client A


    
    
    


    →
    →
    
    Client B


    
    
    


    
    →
    
    Client C



A client registers with a connection point by calling
IConnection­Point::Advise,
and it unregisters by calling
IConnection­Point::Unadvise.


Okay, that’s great,
but how do clients find the connection point so they can register with it?


The widget exposes an interface known as
IConnection­Point­Container
which provides access to an object’s connection points.
The client can call the
IConnection­Point­Container::Find­Connection­Point method
to get access to a specific connection point.


Here’s how the pieces fit together:


// error checking elided for expository purposes
void IUnknown_FindConnectionPoint(IUnknown *punk,
                                  REFIID riid,
                                  IConnectionPoint **ppcp)
{
 // get the IConnectionPointContainer interface
 CComQIPtr<IConnectionPointContainer> spcpc(punk);
 // Locate the connection point
 spcpc->FindConnectionPoint(riid,  ppcp);
}
class CClient : public IWidgetClient
{
…
 IWidget *m_pWidget;
 DWORD m_dwCookie;
};
CClient::RegisterWidgetClient()
{
 // Find the IWidgetClient connection point
 CComPtr<IConnectionPoint> spcp;
 IUnknown_FindConnectionPoint(m_pWidget,
                              IID_IWidgetClient, &spcp);
 // register with it
 spcp->Advise(this, &m_dwCookie);
}
CClient::UnregisterWidgetClient()
{
 // Find the IWidgetClient connection point
 CComPtr<IConnectionPoint> spcp;
 IUnknown_FindConnectionPoint(m_pWidget,
                              IID_IWidgetClient, &spcp);
 // unregister from it
 spcp->Unadvise(m_dwCookie);
}


After registering as a widget client,
the CClient object will receive
method calls on its IWidget­Client
until it unregisters.


Now the widget and clients have two-way communication.
If the clients want to initiate the communuication,
it can call a method on IWidget.
If the widget wants to initiate the communication,
it can call a method on IWidget­Client.


Note that we’ve created a giant circular reference.
The widget has a reference to its connection point
(so it can tell it to fire a notification to all its clients),
and the connection point has a reference to the widget
client
(so it can forward the notification along),
and the widget client has a reference to the widget
in its m_pWidget member.
In order to break this cycle,
you have to remember to explicitly call
Unregister­Widget­Client
when you are no longer interested in receiving
widget notifications.


Note that even though the arrows in the diagram above
flow from left to right (from widget to clients),
that doesn’t mean that the
information flow is strictly left-to-right.
You can pass information in the other direction
via return values or output parameters.


For example, there might be a method on
the IWidget­Client interface
called Get­Color:


interface IWidgetClient : IUnknown
{
 …
 HRESULT GetColor([out] COLORREF *pclr);
 …
};


Since there can be multiple clients, the widget
needs to have some sort of rule for deciding which
client gets to choose the color.
It might decide to ask each client in turn for a color,
until one of them returns S_OK,
and that client’s color is used and no further clients
are notified.


Or maybe there’s a method called
On­Save:


interface IWidgetClient : IUnknown
{
 …
 HRESULT OnSave([in] IPropertyStorage *pps);
 …
};


The convention here might be that all clients
will be notified of the Save operation and they
can write any additional information to the
IProperty­Storage while handing
the notification.


Those are just examples.
Feel free to make up your own.
The point is that just because the arrows go from the
widget to the clients doesn’t mean that information
can’t flow back the other way.


Most of the time, you have the simple case where
a widget will expose a single connection point.
In that case, the generality of the
IConnection­Point­Container
may seem unnecessary.
But it allows you to add new connection points later.
For example, you might have multiple client interfaces
for different types of clients.
You could have
IWidget­Color­Client
for clients that are interested only in color changes,
and
IWidget­Network­Client
for clients that are interested only in monitoring the
widget’s network activity.


Or maybe you didn’t plan on having multiple connection points
originally,
but in the second version of your product,
you want to add additional methods to
IWidget­Client,
so you need to create
IWidget­Client2,
which means that you also need a new connection point for it.


Next time, a look at the special case where
the client interface is a dispatch interface.


        
                

        
		
                

            
            
                
                    Raymond Chen                
                
            
            

                
        
            Follow 
          
                
            
        
                
            
    
   

        

            

            
       
        
	




	

		Tagged Code
	

	
								
						Read next
						
						
					
					Dispatch interfaces as connection point interfaces
					

Last time,
we learned about how connection points work.
One special case of this is where the connection interface
is a dispatch interface.


Dispatch interfaces are, ...
					Raymond Chen June 12, 2013
					
						
					0 comment
				
				
					
					A big little program: Monitoring Internet Explorer and Explorer windows, part 2: Tracking navigations
					
Okay, it's been a while since we

set aside our Little Program
to learn a bit about

connection points
and

using dispatch interfaces as connection point interfaces.
Now...
					Raymond Chen June 13, 2013
					
						
					0 comment
				
													
						
						
			
					

    
    		0 comments
		
			Comments are closed.				Login to edit/delete your existing comments
				
		
		
					
			

				

		
		


	






	jQuery(document).ready(function($){
		jQuery('.tags-links a').each(function(){
			var text = jQuery(this).text();		
			jQuery(this).attr('aria-label',text + ' Tag');
		});
		jQuery('.cat-links a').each(function(){
			var text = jQuery(this).text();		
			jQuery(this).attr('aria-label',text + ' Category');
		});
	});





let blocks = document.querySelectorAll("pre");
blocks.forEach((block) => {
    if (navigator.clipboard) {
        let codeheader = document.createElement("div");
        codeheader.innerHTML = '<div class="code-header"><span class="language"></span><button class="copybutton copy-button"><i class="fabric-icon fabric-icon--Copy" aria-hidden="true"></i> Copy</button></div>';

        block.insertAdjacentElement('beforebegin', codeheader);

        let button = codeheader.querySelector('.copy-button');
        button.addEventListener("click", async () => {
            let blockToCopy = block;
            await copyCode(blockToCopy, button);
        });
    }
});
async function copyCode(blockToCopy, button) {
    let code = blockToCopy.querySelector("code");
    let text = '';

    if (code) {
        text = code.innerText;
    } else {
        text = blockToCopy.innerText;
    }

    try {
        await navigator.clipboard.writeText(text);
    } catch (err) {
        console.error('Failed to copy:', err);
    }

    // Visual feedback that task is completed
    button.innerText = "Copied";

    setTimeout(() => {
        button.innerHTML = '<i class="fabric-icon fabric-icon--Copy" aria-hidden="true"></i> Copy';
    }, 1200);
}
 






    
        
    
        
            
                
                    
                        Archive
                        	March 2024
	February 2024
	January 2024
	December 2023
	November 2023
	October 2023
	September 2023
	August 2023
	July 2023
	June 2023
	May 2023
	April 2023
	March 2023
	February 2023
	January 2023
	December 2022
	November 2022
	October 2022
	September 2022
	August 2022
	July 2022
	June 2022
	May 2022
	April 2022
	March 2022
	February 2022
	January 2022
	December 2021
	November 2021
	October 2021
	September 2021
	August 2021
	July 2021
	June 2021
	May 2021
	April 2021
	March 2021
	February 2021
	January 2021
	December 2020
	November 2020
	October 2020
	September 2020
	August 2020
	July 2020
	June 2020
	May 2020
	April 2020
	March 2020
	February 2020
	January 2020
	December 2019
	November 2019
	October 2019
	September 2019
	August 2019
	July 2019
	June 2019
	May 2019
	April 2019
	March 2019
	February 2019
	January 2019
	December 2018
	November 2018
	October 2018
	September 2018
	August 2018
	July 2018
	June 2018
	May 2018
	April 2018
	March 2018
	February 2018
	January 2018
	December 2017
	November 2017
	October 2017
	September 2017
	August 2017
	July 2017
	June 2017
	May 2017
	April 2017
	March 2017
	February 2017
	January 2017
	December 2016
	November 2016
	October 2016
	September 2016
	August 2016
	July 2016
	June 2016
	May 2016
	April 2016
	March 2016
	February 2016
	January 2016
	December 2015
	November 2015
	October 2015
	September 2015
	August 2015
	July 2015
	June 2015
	May 2015
	April 2015
	March 2015
	February 2015
	January 2015
	December 2014
	November 2014
	October 2014
	September 2014
	August 2014
	July 2014
	June 2014
	May 2014
	April 2014
	March 2014
	February 2014
	January 2014
	December 2013
	November 2013
	October 2013
	September 2013
	August 2013
	July 2013
	June 2013
	May 2013
	April 2013
	March 2013
	February 2013
	January 2013
	December 2012
	November 2012
	October 2012
	September 2012
	August 2012
	July 2012
	June 2012
	May 2012
	April 2012
	March 2012
	February 2012
	January 2012
	December 2011
	November 2011
	October 2011
	September 2011
	August 2011
	July 2011
	June 2011
	May 2011
	April 2011
	March 2011
	February 2011
	January 2011
	December 2010
	November 2010
	October 2010
	September 2010
	August 2010
	July 2010
	June 2010
	May 2010
	April 2010
	March 2010
	February 2010
	January 2010
	December 2009
	November 2009
	October 2009
	September 2009
	August 2009
	July 2009
	June 2009
	May 2009
	April 2009
	March 2009
	February 2009
	January 2009
	December 2008
	November 2008
	October 2008
	September 2008
	August 2008
	July 2008
	June 2008
	May 2008
	April 2008
	March 2008
	February 2008
	January 2008
	December 2007
	November 2007
	October 2007
	September 2007
	August 2007
	July 2007
	June 2007
	May 2007
	April 2007
	March 2007
	February 2007
	January 2007
	December 2006
	November 2006
	October 2006
	September 2006
	August 2006
	July 2006
	June 2006
	May 2006
	April 2006
	March 2006
	February 2006
	January 2006
	December 2005
	November 2005
	October 2005
	September 2005
	August 2005
	July 2005
	June 2005
	May 2005
	April 2005
	March 2005
	February 2005
	January 2005
	December 2004
	November 2004
	October 2004
	September 2004
	August 2004
	July 2004
	June 2004
	May 2004
	April 2004
	March 2004
	February 2004
	January 2004
	December 2003
	November 2003
	October 2003
	September 2003
	August 2003
	July 2003

                    
                
            
                
                    
                        Relevant Links
                        I wrote a book
Ground rules
Disclaimers and such
My necktie's Twitter

                    
                
            
                
                    
                        Categories
                        Code
History 
Tips/Support 
Other 
Non-Computer

                    
                
            
            
    

	

		

			

				

                    
                        
                        
                    

                    

                        
                            Stay informed
                                    
                                    
                                    
                                    
                                    By subscribing you agree to our Terms of Use and Privacy Policy
                                    
                                    
                                    
                        
                    

                        

			

		

      




    
        
        
        
    
    
        
            
                
            
            
                
                    
                        
                    
                
                
                    
                        
                    
                
                
                    
                        
                    
                
            
        
    


	

	

Login

    Theme
    
        Light
        Dark
    
        
        // Get iframe youtube video length
        var iframes = jQuery( 'iframe[src^="https://www.youtube.com/embed/"], iframe[src^="//www.youtube.com/embed/"], iframe[src^="http://www.youtube.com/embed/"], iframe[src^="www.youtube.com/embed/"], iframe[src^="youtube.com/embed/"], iframe[src^="https://www.youtube.com/"]' );
        var i, len;
        len = iframes.length;

        // Country JSON data
        function funJSONData(countryData) {
            if(countryData.Country == 'CN') {
                if( len > 0 ) {
                    for( var i = 0; i < len; ++i ) {
                        var el = iframes[i];
                        el.parentNode.removeChild(el);
                    }
                }
            }
        }
        jQuery(document).ready(function() {
            // Remove youtube videos from page
                    });
        
        
/* <![CDATA[ */
var votecommentajax = {"ajaxurl":"https:\/\/devblogs.microsoft.com\/oldnewthing\/wp-admin\/admin-ajax.php"};
/* ]]> */








/* <![CDATA[ */
var devblog_url = {"siteurl":"https:\/\/devblogs.microsoft.com\/oldnewthing"};
var devblogs_ajax = {"ajaxurl":"https:\/\/devblogs.microsoft.com\/oldnewthing\/wp-admin\/admin-ajax.php"};
var ajax_object = {"is_single":"1"};
/* ]]> */




/* <![CDATA[ */
var siteurl = {"devblogsiteurl":"https:\/\/devblogs.microsoft.com\/oldnewthing"};
var devblogsajax = {"ajaxurl":"https:\/\/devblogs.microsoft.com\/oldnewthing\/wp-admin\/admin-ajax.php"};
var devblogsPost = {"ID":"4113"};
/* ]]> */




(function (undefined) {var _localizedStrings={"redirect_overlay_title":"Hold On","redirect_overlay_text":"You are being redirected to another page,<br>it may take a few seconds."};var _targetWindow="prefer-popup";var _redirectOverlay="overlay-with-spinner-and-message";
/**
 * Used when Cross-Origin-Opener-Policy blocked the access to the opener. We can't have a reference of the opened windows, so we should attempt to refresh only the windows that has opened popups.
 */
window._nslHasOpenedPopup = false;

window.NSLPopup = function (url, title, w, h) {
    var userAgent = navigator.userAgent,
        mobile = function () {
            return /\b(iPhone|iP[ao]d)/.test(userAgent) ||
                /\b(iP[ao]d)/.test(userAgent) ||
                /Android/i.test(userAgent) ||
                /Mobile/i.test(userAgent);
        },
        screenX = window.screenX !== undefined ? window.screenX : window.screenLeft,
        screenY = window.screenY !== undefined ? window.screenY : window.screenTop,
        outerWidth = window.outerWidth !== undefined ? window.outerWidth : document.documentElement.clientWidth,
        outerHeight = window.outerHeight !== undefined ? window.outerHeight : document.documentElement.clientHeight - 22,
        targetWidth = mobile() ? null : w,
        targetHeight = mobile() ? null : h,
        left = parseInt(screenX + (outerWidth - targetWidth) / 2, 10),
        right = parseInt(screenY + (outerHeight - targetHeight) / 2.5, 10),
        features = [];
    if (targetWidth !== null) {
        features.push('width=' + targetWidth);
    }
    if (targetHeight !== null) {
        features.push('height=' + targetHeight);
    }
    features.push('left=' + left);
    features.push('top=' + right);
    features.push('scrollbars=1');

    var newWindow = window.open(url, title, features.join(','));

    if (window.focus) {
        newWindow.focus();
    }

    window._nslHasOpenedPopup = true;

    return newWindow;
};

var isWebView = null;

function checkWebView() {
    if (isWebView === null) {
        function _detectOS(ua) {
            if (/Android/.test(ua)) {
                return "Android";
            } else if (/iPhone|iPad|iPod/.test(ua)) {
                return "iOS";
            } else if (/Windows/.test(ua)) {
                return "Windows";
            } else if (/Mac OS X/.test(ua)) {
                return "Mac";
            } else if (/CrOS/.test(ua)) {
                return "Chrome OS";
            } else if (/Firefox/.test(ua)) {
                return "Firefox OS";
            }
            return "";
        }

        function _detectBrowser(ua) {
            var android = /Android/.test(ua);

            if (/Opera Mini/.test(ua) || / OPR/.test(ua) || / OPT/.test(ua)) {
                return "Opera";
            } else if (/CriOS/.test(ua)) {
                return "Chrome for iOS";
            } else if (/Edge/.test(ua)) {
                return "Edge";
            } else if (android && /Silk\//.test(ua)) {
                return "Silk";
            } else if (/Chrome/.test(ua)) {
                return "Chrome";
            } else if (/Firefox/.test(ua)) {
                return "Firefox";
            } else if (android) {
                return "AOSP";
            } else if (/MSIE|Trident/.test(ua)) {
                return "IE";
            } else if (/Safari\//.test(ua)) {
                return "Safari";
            } else if (/AppleWebKit/.test(ua)) {
                return "WebKit";
            }
            return "";
        }

        function _detectBrowserVersion(ua, browser) {
            if (browser === "Opera") {
                return /Opera Mini/.test(ua) ? _getVersion(ua, "Opera Mini/") :
                    / OPR/.test(ua) ? _getVersion(ua, " OPR/") :
                        _getVersion(ua, " OPT/");
            } else if (browser === "Chrome for iOS") {
                return _getVersion(ua, "CriOS/");
            } else if (browser === "Edge") {
                return _getVersion(ua, "Edge/");
            } else if (browser === "Chrome") {
                return _getVersion(ua, "Chrome/");
            } else if (browser === "Firefox") {
                return _getVersion(ua, "Firefox/");
            } else if (browser === "Silk") {
                return _getVersion(ua, "Silk/");
            } else if (browser === "AOSP") {
                return _getVersion(ua, "Version/");
            } else if (browser === "IE") {
                return /IEMobile/.test(ua) ? _getVersion(ua, "IEMobile/") :
                    /MSIE/.test(ua) ? _getVersion(ua, "MSIE ")
                        :
                        _getVersion(ua, "rv:");
            } else if (browser === "Safari") {
                return _getVersion(ua, "Version/");
            } else if (browser === "WebKit") {
                return _getVersion(ua, "WebKit/");
            }
            return "0.0.0";
        }

        function _getVersion(ua, token) {
            try {
                return _normalizeSemverString(ua.split(token)[1].trim().split(/[^\w\.]/)[0]);
            } catch (o_O) {
            }
            return "0.0.0";
        }

        function _normalizeSemverString(version) {
            var ary = version.split(/[\._]/);
            return (parseInt(ary[0], 10) || 0) + "." +
                (parseInt(ary[1], 10) || 0) + "." +
                (parseInt(ary[2], 10) || 0);
        }

        function _isWebView(ua, os, browser, version, options) {
            switch (os + browser) {
                case "iOSSafari":
                    return false;
                case "iOSWebKit":
                    return _isWebView_iOS(options);
                case "AndroidAOSP":
                    return false;
                case "AndroidChrome":
                    return parseFloat(version) >= 42 ? /; wv/.test(ua) : /\d{2}\.0\.0/.test(version) ? true : _isWebView_Android(options);
            }
            return false;
        }

        function _isWebView_iOS(options) {
            var document = (window["document"] || {});

            if ("WEB_VIEW" in options) {
                return options["WEB_VIEW"];
            }
            return !("fullscreenEnabled" in document || "webkitFullscreenEnabled" in document || false);
        }

        function _isWebView_Android(options) {
            if ("WEB_VIEW" in options) {
                return options["WEB_VIEW"];
            }
            return !("requestFileSystem" in window || "webkitRequestFileSystem" in window || false);
        }

        var options = {};
        var nav = window.navigator || {};
        var ua = nav.userAgent || "";
        var os = _detectOS(ua);
        var browser = _detectBrowser(ua);
        var browserVersion = _detectBrowserVersion(ua, browser);

        isWebView = _isWebView(ua, os, browser, browserVersion, options);
    }

    return isWebView;
}

function isAllowedWebViewForUserAgent(provider) {
    var facebookAllowedWebViews = [
        'Instagram',
        'FBAV',
        'FBAN'
    ], whitelist = [];

    if (provider && provider === 'facebook') {
        whitelist = facebookAllowedWebViews;
    }

    var nav = window.navigator || {};
    var ua = nav.userAgent || "";

    if (whitelist.length && ua.match(new RegExp(whitelist.join('|')))) {
        return true;
    }

    return false;
}

window._nslDOMReady(function () {

    window.nslRedirect = function (url) {
        if (_redirectOverlay) {
            var overlay = document.createElement('div');
            overlay.id = "nsl-redirect-overlay";
            var overlayHTML = '',
                overlayContainer = "<div id='nsl-redirect-overlay-container'>",
                overlayContainerClose = "</div>",
                overlaySpinner = "<div id='nsl-redirect-overlay-spinner'></div>",
                overlayTitle = "<p id='nsl-redirect-overlay-title'>" + _localizedStrings.redirect_overlay_title + "</p>",
                overlayText = "<p id='nsl-redirect-overlay-text'>" + _localizedStrings.redirect_overlay_text + "</p>";

            switch (_redirectOverlay) {
                case "overlay-only":
                    break;
                case "overlay-with-spinner":
                    overlayHTML = overlayContainer + overlaySpinner + overlayContainerClose;
                    break;
                default:
                    overlayHTML = overlayContainer + overlaySpinner + overlayTitle + overlayText + overlayContainerClose;
                    break;
            }

            overlay.insertAdjacentHTML("afterbegin", overlayHTML);
            document.body.appendChild(overlay);
        }

        window.location = url;
    };

    var targetWindow = _targetWindow || 'prefer-popup',
        lastPopup = false;


    var buttonLinks = document.querySelectorAll(' a[data-plugin="nsl"][data-action="connect"], a[data-plugin="nsl"][data-action="link"]');
    buttonLinks.forEach(function (buttonLink) {
        buttonLink.addEventListener('click', function (e) {
            if (lastPopup && !lastPopup.closed) {
                e.preventDefault();
                lastPopup.focus();
            } else {

                var href = this.href,
                    success = false;
                if (href.indexOf('?') !== -1) {
                    href += '&';
                } else {
                    href += '?';
                }

                var redirectTo = this.dataset.redirect;
                if (redirectTo === 'current') {
                    href += 'redirect=' + encodeURIComponent(window.location.href) + '&';
                } else if (redirectTo && redirectTo !== '') {
                    href += 'redirect=' + encodeURIComponent(redirectTo) + '&';
                }

                if (targetWindow !== 'prefer-same-window' && checkWebView()) {
                    targetWindow = 'prefer-same-window';
                }

                if (targetWindow === 'prefer-popup') {
                    lastPopup = NSLPopup(href + 'display=popup', 'nsl-social-connect', this.dataset.popupwidth, this.dataset.popupheight);
                    if (lastPopup) {
                        success = true;
                        e.preventDefault();
                    }
                } else if (targetWindow === 'prefer-new-tab') {
                    var newTab = window.open(href + 'display=popup', '_blank');
                    if (newTab) {
                        if (window.focus) {
                            newTab.focus();
                        }
                        success = true;
                        window._nslHasOpenedPopup = true;
                        e.preventDefault();
                    }
                }

                if (!success) {
                    window.location = href;
                    e.preventDefault();
                }
            }
        });
    });

    let hasWebViewLimitation = false;

    var googleLoginButtons = document.querySelectorAll(' a[data-plugin="nsl"][data-provider="google"]');
    if (googleLoginButtons.length && checkWebView()) {
        googleLoginButtons.forEach(function (googleLoginButton) {
            googleLoginButton.remove();
            hasWebViewLimitation = true;
        });
    }

    var facebookLoginButtons = document.querySelectorAll(' a[data-plugin="nsl"][data-provider="facebook"]');
    if (facebookLoginButtons.length && checkWebView() && /Android/.test(window.navigator.userAgent) && !isAllowedWebViewForUserAgent('facebook')) {
        facebookLoginButtons.forEach(function (facebookLoginButton) {
            facebookLoginButton.remove();
            hasWebViewLimitation = true;
        });
    }


    const separators = document.querySelectorAll('div.nsl-separator');
    if (hasWebViewLimitation && separators.length) {
        separators.forEach(function (separator) {
            let separatorParentNode = separator.parentNode;
            if (separatorParentNode) {
                const separatorButtonContainer = separatorParentNode.querySelector('div.nsl-container-buttons');
                if (separatorButtonContainer && !separatorButtonContainer.hasChildNodes()) {
                    separator.remove();
                }
            }
        })
    }
});

/**
 * Cross-Origin-Opener-Policy blocked the access to the opener
 */
if (typeof BroadcastChannel === "function") {
    const _nslLoginBroadCastChannel = new BroadcastChannel('nsl_login_broadcast_channel');
    _nslLoginBroadCastChannel.onmessage = (event) => {
        if (window?._nslHasOpenedPopup && event.data?.action === 'redirect') {
            window._nslHasOpenedPopup = false;

            const url = event.data?.href;
            _nslLoginBroadCastChannel.close();
            if (typeof window.nslRedirect === 'function') {
                window.nslRedirect(url);
            } else {
                window.opener.location = url;
            }
        }
    };
}})();	
	
	
		
		
			Code Block
			
			×
			
		
		
			
				
					Paste your code snippet
					
				
			
			
				Cancel
				Ok
			
		
		
	
	
            
            
            
            hljs.highlightAll();
        
    
        
            Feedback 
        
    


    /*{literal}<![CDATA[*/
    window.lightningjs||function(c){function g(b,d){d&&(d+=(/\?/.test(d)?"&":"?")+"lv=1");c[b]||function(){var i=window,h=document,j=b,g=h.location.protocol,l="load",k=0;(function(){function b(){a.P(l);a.w=1;c[j]("_load")}c[j]=function(){function m(){m.id=e;return c[j].apply(m,arguments)}var b,e=++k;b=this&&this!=i?this.id||0:0;(a.s=a.s||[]).push([e,b,arguments]);m.then=function(b,c,h){var d=a.fh[e]=a.fh[e]||[],j=a.eh[e]=a.eh[e]||[],f=a.ph[e]=a.ph[e]||[];b&&d.push(b);c&&j.push(c);h&&f.push(h);return m};return m};var a=c[j]._={};a.fh={};a.eh={};a.ph={};a.l=d?d.replace(/^\/\//,(g=="https:"?g:"http:")+"//"):d;a.p={0:+new Date};a.P=function(b){a.p[b]=new Date-a.p[0]};a.w&&b();i.addEventListener?i.addEventListener(l,b,!1):i.attachEvent("on"+l,b);var q=function(){function b(){return["<head></head><",c,' onload="var d=',n,";d.getElementsByTagName('head')[0].",d,"(d.",g,"('script')).",i,"='",a.l,"'\"></",c,">"].join("")}var c="body",e=h[c];if(!e)return setTimeout(q,100);a.P(1);var d="appendChild",g="createElement",i="src",k=h[g]("div"),l=k[d](h[g]("div")),f=h[g]("iframe"),n="document",p;k.style.display="none";e.insertBefore(k,e.firstChild).id=o+"-"+j;f.frameBorder="0";f.id=o+"-frame-"+j;/MSIE[ ]+6/.test(navigator.userAgent)&&(f[i]="javascript:false");f.allowTransparency="true";l[d](f);try{f.contentWindow[n].open()}catch(s){a.domain=h.domain,p="javascript:var d="+n+".open();d.domain='"+h.domain+"';",f[i]=p+"void(0);"}try{var r=f.contentWindow[n];r.write(b());r.close()}catch(t){f[i]=p+'d.write("'+b().replace(/"/g,String.fromCharCode(92)+'"')+'");d.close();'}a.P(2)};a.l&&setTimeout(q,0)})()}();c[b].lv="1";return c[b]}var o="lightningjs",k=window[o]=g(o);k.require=g;k.modules=c}({});
    if(!navigator.userAgent.match(/Android|BlackBerry|BB10|iPhone|iPad|iPod|Opera Mini|IEMobile/i)) {window.usabilla_live = lightningjs.require("usabilla_live", "//w.usabilla.com/2a41eea4c9e1.js"); } else {window.usabilla_live = lightningjs.require("usabilla_live", "//w.usabilla.com/29d0684d6043.js"); }
    window.usabilla_live("hide");
    document.getElementById("usbl-integrated-button").addEventListener("click",function(){
    window.usabilla_live("click");
    });
    /*]]>{/literal}*/




                

    
        




        
            
                
                    
                        What's new
                        
                            
                                Surface Laptop Studio 2
                            
                            
                                Surface Laptop Go 3
                            
                            
                                Surface Pro 9
                            
                            
                                Surface Laptop 5
                            
                            
                                Surface Studio 2+
                            
                            
                                Copilot in Windows
                            
                            
                                Microsoft 365
                            
                            
                                Windows 11 apps
                            

                        
                        
                    
                    
                        Microsoft Store
                        
                            
                                Account profile
                            
                            
                                Download Center
                            
                            
                                Microsoft Store support
                            
                            
                                Returns
                            
                            
                                Order tracking
                            
                            
                                Certified Refurbished
                            
                            
                                Microsoft Store Promise
                            
                            
                                Flexible Payments
                            

                        
                        
                    
                    
                        Education
                        
                            
                                Microsoft in education
                            
                            
                                Devices for education
                            
                            
                                Microsoft Teams for Education
                            
                            
                                Microsoft 365 Education
                            
                            
                                How to buy for your school
                            
                            
                                Educator training and development
                            
                            
                                Deals for students and parents
                            
                            
                                Azure for students
                            

                        
                        
                    
                
                
                    
                        Business
                        
                            
                                Microsoft Cloud
                            
                            
                                Microsoft Security
                            
                            
                                Dynamics 365
                            
                            
                                Microsoft 365
                            
                            
                                Microsoft Power Platform
                            
                            
                                Microsoft Teams
                            
                            
                                Microsoft Industry
                            
                            
                                Small Business
                            

                        
                        
                    
                    
                        Developer & IT
                        
                            
                                Azure
                            
                            
                                Developer Center
                            
                            
                                Documentation
                            
                            
                                Microsoft Learn
                            
                            
                                Microsoft Tech Community
                            
                            
                                Azure Marketplace
                            
                            
                                AppSource
                            
                            
                                Visual Studio
                            

                        
                        
                    
                    
                        Company
                        
                            
                                Careers
                            
                            
                                About Microsoft
                            
                            
                                Company news
                            
                            
                                Privacy at Microsoft
                            
                            
                                Investors
                            
                            
                                Diversity and inclusion
                            
                            
                                Accessibility
                            
                            
                                Sustainability
                            

                        
                        
                    
                
        
    
        
            
        
            California Consumer Privacy Act (CCPA) Opt-Out Icon
            
            
            
            
        
        Your Privacy Choices
    

        
                
        
            California Consumer Privacy Act (CCPA) Opt-Out Icon
            
            
            
            
        
        Your Privacy Choices
    

        
        
            
                                
                    Sitemap
                
                
                    Contact Microsoft
                
                
                    Privacy 
                
                
                    Manage cookies
                
                
                    Terms of use
                
                
                    Trademarks
                
                
                    Safety & eco
                
                
                    Recycling
                
                
                    About our ads
                

                © Microsoft 2024
                
            
        
    
    



    const globalPrivacyControlEnabled = navigator.globalPrivacyControl;

    const GPC_DataSharingOptIn = (globalPrivacyControlEnabled) ? false : checkThirdPartyAdsOptOutCookie();

    function checkThirdPartyAdsOptOutCookie() {
        try {
            const ThirdPartyAdsOptOutCookieName = '3PAdsOptOut';
            var cookieValue = getCookie(ThirdPartyAdsOptOutCookieName);
            return cookieValue != 1;
        } catch {
            return true;
        }
    }

    function getCookie(cookieName) {
        var cookieValue = document.cookie.match('(^|;)\\s*' + cookieName + '\\s*=\\s*([^;]+)');
        return (cookieValue) ? cookieValue[2] : '';
    }






    
        

    


  //fix calendar hide when change month

      var string = window.location.href,
      substring = "month=";

      if (string.includes(substring)) {
          document.getElementById('post-calendar-tab-link').click();
      }




                var nrattr="userNotSignIn";
            if(typeof newrelic !== "undefined" && newrelic) {
        newrelic.setCustomAttribute('userSign', nrattr);
    }
    //Check if GPC_DataSharingOptIn is a boolean before setting the property to 1DS
    if (typeof GPC_DataSharingOptIn === 'boolean') {
        awa.sku.getPropertyManager().getPropertiesContext().web.gpcDataSharingOptIn = GPC_DataSharingOptIn
    }



